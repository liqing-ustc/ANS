train: 11170 val: 4900 test: 48910
CUDA is available?: True
using cuda?: True
Add 4277 samples for class 0, acc 0.88.
Add 3211 samples for class 1, acc 0.84.
Add 2946 samples for class 2, acc 0.92.
Add 6217 samples for class 3, acc 0.95.
Add 4438 samples for class 4, acc 0.58.
Add 4467 samples for class 5, acc 0.96.
Add 6085 samples for class 6, acc 0.99.
Add 3530 samples for class 7, acc 0.80.
Add 5701 samples for class 8, acc 0.95.
Add 3792 samples for class 9, acc 0.98.
Add 4241 samples for class 10, acc 0.86.
Add 17097 samples for class 11, acc 0.84.
Add 12715 samples for class 12, acc 0.99.
Add 12436 samples for class 13, acc 0.92.
Add 18720 samples for class 14, acc 0.86.
Add 3156 samples for class 15, acc 0.85.
Namespace(curriculum=True, epochs=100, epochs_eval=5, excludes='!', output_dir='./outputs/exp_syntax_curriculum/seed_1/', perception=False, perception_pretrain='data/perception-pretrain/model.pth.tar_78.2_match', resume=None, seed=1, semantics=False, syntax=True)
ClusteringModel(
  (backbone): ResNet(
    (conv1): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (shortcut): Sequential()
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  )
  (cluster_head): ModuleList(
    (0): Linear(in_features=512, out_features=16, bias=True)
  )
)
use ground-truth syntax.
Symbol-00: None 0.00
Symbol-01: None 0.00
Symbol-02: None 0.00
Symbol-03: None 0.00
Symbol-04: None 0.00
Symbol-05: None 0.00
Symbol-06: None 0.00
Symbol-07: None 0.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Curriculum: [(0, 1), (1, 3), (20, 7), (40, 11), (60, 15), (80, inf)]
              precision    recall  f1-score   support

           0       0.86      0.84      0.85      4016
           1       0.69      0.47      0.56      5142
           2       0.72      0.59      0.65      5321
           3       0.87      0.95      0.91      5241
           4       0.50      0.55      0.52      5279
           5       0.93      0.80      0.86      5383
           6       0.93      0.97      0.95      5427
           7       0.53      0.63      0.58      5462
           8       0.91      0.89      0.90      5453
           9       0.94      0.64      0.76      5476
           +       0.84      0.57      0.68     13199
           -       0.70      1.00      0.83     10734
           *       0.98      1.00      0.99     13491
           /       0.81      0.86      0.84      9876
           (       0.71      0.97      0.82     21081
           )       0.84      0.61      0.70     21081

    accuracy                           0.79    141662
   macro avg       0.80      0.77      0.77    141662
weighted avg       0.80      0.79      0.78    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  237    0    0    0    0    4    6    0   32    0    0    0    0    0     0    0
1    0  169    0    0    5    0    0    0    0    0    0    0    0    0    43  142
2    7   14  222    6    0    4    1    1    0    8    0    0    2  103     0    0
3    0    0    6  350    4    4    0    0    0    1    0    0    0    0     0    0
4    0    1    0    0  204    0    0   65    0    0   85   12    0    0     0    0
5   12    2   27   10    0  302    2    0    0    2    0    0    0   19     0    0
6    0    0    0    0    0    7  370    2    0    2    0    0    0    0     0    0
7    0   39    7    2    0    0    0  244    0    0   16   42   13   10     0    7
8    0    0    5   30    0    0    0    2  344    0    0    0    0    0     2    0
9    0   14    0    2  116    2    0    0    0  248    2    0    0    0     0    0
+    0    2    0    0    0    0    0  149    0    0  530  243    3    1     0    0
-    0    0    0    0    0    0    0    0    0    0    0  755    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0    0
/   16    0    0    0   64    0    0    0    0    0    0   16    0  599     0    0
(    2    0    8    0    0    0   12    0    0    0    0    2    0    0  1444   18
)    0    0   29    0   12    0    4    0    0    0    0    0    0    0   541  900
result accuracy by length:
1 ( 2%)  0.00
3 ( 2%)  0.00
5 ( 2%)  0.00
7 ( 4%)  0.00
9 ( 4%)  0.00
11 ( 3%)  0.00
13 ( 4%)  0.00
15 ( 4%)  0.00
17 ( 4%)  0.00
19 ( 4%)  0.00
21 ( 4%)  0.00
23 ( 4%)  0.00
25 ( 4%)  0.00
27 ( 4%)  0.00
29 ( 3%)  0.00
31 ( 3%)  0.00
33 ( 2%)  0.00
35 ( 2%)  0.00
37 ( 2%)  0.00
39 ( 3%)  0.00
41 ( 3%)  0.00
43 ( 2%)  0.00
45 ( 2%)  0.00
47 ( 2%)  0.00
49 ( 2%)  0.00
51 ( 2%)  0.00
53 ( 2%)  0.00
55 ( 2%)  0.00
57 ( 2%)  0.00
59 ( 2%)  0.00
61 ( 1%)  0.00
63 ( 0%)  0.00
65 ( 0%)  0.00
67 ( 0%)  0.00
result accuracy by symbol:
( (91%)  0.00
) (91%)  0.00
* (87%)  0.00
+ (84%)  0.00
- (77%)  0.00
/ (76%)  0.00
0 (52%)  0.00
1 (60%)  0.00
2 (61%)  0.00
3 (62%)  0.00
4 (61%)  0.00
5 (62%)  0.00
6 (62%)  0.00
7 (63%)  0.00
8 (64%)  0.00
9 (63%)  0.00
result accuracy by digit:
0 ( 0%)  0.00
1 ( 0%)  0.00
2 ( 0%)  0.00
3 ( 0%)  0.00
4 ( 0%)  0.00
5 ( 0%)  0.00
6 ( 0%)  0.00
7 ( 0%)  0.00
8 ( 0%)  0.00
9 ( 0%)  0.00
result accuracy by result:
0 (21%)  0.00
1 (10%)  0.00
2 ( 4%)  0.00
3 ( 2%)  0.00
4 ( 2%)  0.00
5 ( 2%)  0.00
6 ( 2%)  0.00
7 ( 2%)  0.00
8 ( 2%)  0.00
9 ( 1%)  0.00
result accuracy by generalization:
1 (22.45%)  0.00
2 (22.96%)  0.00
3 (22.53%)  0.00
4 (15.82%)  0.00
5 (16.24%)  0.00
error cases:
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 + [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
val (Perception Acc=78.81, Head Acc=100.00, Result Acc=0.00)
------------------------------
Epoch 0/99 (max_len=1, data=1000)
Train acc: 0.00 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  16 [(0, 85), (1, 63), (2, 80), (3, 112), (4, 89), (5, 85), (6, 97), (7, 88), (8, 106), (9, 74), (10, 27), (11, 8), (12, 3), (13, 26), (14, 19), (15, 38)]
Head:  [((-1,), 1000)]
Semantics: 16/0/14 (total/solved/learn).
Symbol-00 (int), Samples:  85,  [(((), 0), 79), (((), 5), 5), (((), 4), 1)]
Symbol-01 (int), Samples:  63,  [(((), 1), 41), (((), 7), 14), (((), 2), 5), (((), 9), 3)]
Symbol-02 (int), Samples:  80,  [(((), 2), 68), (((), 5), 6), (((), 7), 2), (((), 1), 1), (((), 3), 1), (((), 9), 1), (((), 8), 1)]
Symbol-03 (int), Samples: 100,  [(((), 3), 80), (((), 8), 8), (((), 5), 7), (((), 9), 2), (((), 7), 1), (((), 2), 1), (((), 0), 1)]
Symbol-04 (int), Samples:  89,  [(((), 4), 56), (((), 9), 26), (((), 7), 3), (((), 3), 3), (((), 1), 1)]
Symbol-05 (int), Samples:  85,  [(((), 5), 75), (((), 6), 3), (((), 3), 2), (((), 2), 2), (((), 8), 2), (((), 0), 1)]
Symbol-06 (int), Samples:  97,  [(((), 6), 95), (((), 0), 2)]
Symbol-07 (int), Samples:  88,  [(((), 7), 64), (((), 4), 22), (((), 1), 1), (((), 3), 1)]
Symbol-08 (int), Samples: 100,  [(((), 8), 82), (((), 0), 16), (((), 6), 1), (((), 3), 1)]
Symbol-09 (int), Samples:  74,  [(((), 9), 67), (((), 8), 2), (((), 1), 1), (((), 0), 1), (((), 3), 1), (((), 2), 1), (((), 5), 1)]
Symbol-10 (int), Samples:  27,  [(((), 4), 21), (((), 7), 6)]
Symbol-13 (int), Samples:  26,  [(((), 2), 20), (((), 5), 4), (((), 7), 1), (((), 3), 1)]
Symbol-14 (int), Samples:  19,  [(((), 1), 18), (((), 6), 1)]
Symbol-15 (int), Samples:  38,  [(((), 1), 37), (((), 9), 1)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 0.93
Symbol-01: 1 (incr 0) 0.65
Symbol-02: 2 (incr (incr 0)) 0.85
Symbol-03: 3 (incr (incr (incr 0))) 0.79
Symbol-04: 4 (incr (incr (incr (incr 0)))) 0.63
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 0.88
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 0.98
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 0.73
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 0.81
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 0.91
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 72.63 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 [(0, 100), (1, 100), (2, 100), (3, 100), (4, 100), (5, 100), (6, 100), (7, 100), (8, 100), (9, 100)]
Head:  [((-1,), 1000)]
Learn perception with 1000 samples for 100 iterations, 1.0, 0.9228125, 3200, 16 epochs, take 28 sec.
Epoch time: 0m 52s
------------------------------
Epoch 1/99 (max_len=3, data=2170)
Train acc: 45.63 (abduce 95.48)
Hit samples:  2072  Ave length:  2.03
Symbols:  15 [(0, 312), (1, 322), (2, 299), (3, 335), (4, 338), (5, 316), (6, 328), (7, 339), (8, 312), (9, 310), (10, 167), (11, 353), (12, 268), (13, 215), (15, 2)]
Head:  [((-1,), 1000), ((1, -1, 1), 1072)]
Semantics: 16/10/4 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  [(((7, 4), 11), 3), (((3, 0), 3), 3), (((8, 4), 12), 2), (((6, 7), 13), 2), (((3, 8), 11), 2), (((7, 5), 12), 2), (((5, 7), 12), 2), (((8, 5), 13), 2), (((3, 6), 9), 2), (((2, 9), 11), 2)]
Symbol-11 (int -> int -> int), Samples: 100,  [(((5, 0), 5), 3), (((0, 0), 0), 3), (((8, 9), 0), 3), (((0, 7), 0), 3), (((5, 3), 2), 3), (((2, 1), 1), 2), (((9, 2), 7), 2), (((3, 3), 0), 2), (((9, 0), 9), 2), (((1, 9), 0), 2)]
Symbol-12 (int -> int -> int), Samples: 100,  [(((1, 3), 3), 3), (((3, 1), 3), 3), (((9, 4), 36), 3), (((0, 7), 0), 3), (((1, 0), 0), 3), (((9, 5), 45), 3), (((8, 8), 64), 3), (((5, 3), 15), 2), (((7, 0), 0), 2), (((3, 6), 18), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((7, 6), 2), 3), (((5, 7), 1), 3), (((5, 2), 3), 3), (((9, 7), 2), 2), (((6, 5), 2), 2), (((0, 5), 0), 2), (((8, 9), 1), 2), (((2, 5), 1), 2), (((0, 4), 0), 2), (((4, 5), 1), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Rescoring 14 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 0.99
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.88
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.75
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.28
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.64
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 73.96 (abduce 89.40)
Hit samples:  1940  Ave length:  1.97
Symbols:  14 [(0, 311), (1, 311), (2, 280), (3, 290), (4, 283), (5, 289), (6, 287), (7, 278), (8, 274), (9, 277), (10, 260), (11, 331), (12, 144), (13, 205)]
Head:  [((-1,), 1000), ((1, -1, 1), 940)]
Learn perception with 1940 samples for 100 iterations, 0.9494764397905759, 0.9403648269410664, 4276, 12 epochs, take 26 sec.
Epoch time: 10m 39s
------------------------------
Epoch 2/99 (max_len=3, data=2170)
Train acc: 86.63 (abduce 99.12)
Hit samples:  2151  Ave length:  2.07
Symbols:  16 [(0, 309), (1, 315), (2, 320), (3, 331), (4, 338), (5, 344), (6, 335), (7, 337), (8, 326), (9, 351), (10, 271), (11, 328), (12, 321), (13, 224), (14, 1), (15, 2)]
Head:  [((-1,), 1000), ((1, -1, 1), 1151)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 7), 35), 3), (((6, 9), 54), 3), (((8, 4), 32), 3), (((4, 7), 28), 3), (((6, 5), 30), 3), (((8, 8), 64), 3), (((5, 3), 15), 2), (((8, 2), 16), 2), (((3, 5), 15), 2), (((4, 3), 12), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 5), (((8, 5), 2), 4), (((3, 4), 1), 3), (((9, 2), 5), 3), (((7, 9), 1), 3), (((9, 2), 2), 3), (((9, 9), 1), 3), (((0, 5), 0), 2), (((9, 3), 3), 2), (((5, 6), 1), 2)]
Update grammar with invented programs and set frontiers to none.
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 0.99
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 0.99
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.95
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.40
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.82
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 86.26 (abduce 91.11)
Hit samples:  1977  Ave length:  1.99
Symbols:  14 [(0, 308), (1, 312), (2, 293), (3, 299), (4, 302), (5, 299), (6, 289), (7, 281), (8, 282), (9, 289), (10, 281), (11, 333), (12, 153), (13, 210)]
Head:  [((-1,), 1000), ((1, -1, 1), 977)]
Learn perception with 1977 samples for 100 iterations, 0.9447977613838718, 0.9374143444495203, 4378, 12 epochs, take 26 sec.
Epoch time: 10m 44s
------------------------------
Epoch 3/99 (max_len=3, data=2170)
Train acc: 88.47 (abduce 99.77)
Hit samples:  2165  Ave length:  2.08
Symbols:  15 [(0, 308), (1, 317), (2, 327), (3, 345), (4, 348), (5, 348), (6, 337), (7, 336), (8, 326), (9, 341), (10, 280), (11, 334), (12, 321), (13, 226), (14, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1165)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 6), 30), 3), (((7, 6), 42), 3), (((5, 9), 45), 3), (((8, 5), 40), 3), (((7, 4), 28), 3), (((3, 9), 27), 3), (((6, 2), 12), 3), (((7, 5), 35), 3), (((2, 5), 10), 3), (((8, 4), 32), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((0, 6), 0), 3), (((1, 9), 1), 3), (((9, 2), 5), 3), (((1, 8), 1), 3), (((2, 3), 1), 3), (((9, 3), 3), 3), (((5, 6), 1), 2), (((6, 4), 2), 2), (((2, 7), 1), 2), (((3, 8), 1), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 0.99
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.96
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.84
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 88.70 (abduce 91.24)
Hit samples:  1980  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 314), (2, 291), (3, 300), (4, 303), (5, 300), (6, 289), (7, 283), (8, 282), (9, 291), (10, 281), (11, 333), (12, 156), (13, 210)]
Head:  [((-1,), 1000), ((1, -1, 1), 980)]
Learn perception with 1980 samples for 100 iterations, 0.9434010152284263, 0.9345346715328468, 4384, 12 epochs, take 26 sec.
Epoch time: 5m 51s
------------------------------
Epoch 4/99 (max_len=3, data=2170)
Train acc: 88.67 (abduce 99.82)
Hit samples:  2166  Ave length:  2.08
Symbols:  16 [(0, 308), (1, 313), (2, 330), (3, 350), (4, 348), (5, 349), (6, 338), (7, 327), (8, 327), (9, 339), (10, 282), (11, 330), (12, 331), (13, 221), (14, 1), (15, 4)]
Head:  [((-1,), 1000), ((1, -1, 1), 1166)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((9, 7), 63), 3), (((3, 5), 15), 3), (((9, 3), 27), 3), (((7, 6), 42), 2), (((8, 4), 32), 2), (((7, 9), 63), 2), (((7, 4), 28), 2), (((2, 7), 14), 2), (((2, 6), 12), 2), (((9, 4), 36), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((9, 1), 2), 5), (((3, 7), 1), 4), (((5, 8), 1), 4), (((9, 3), 3), 3), (((9, 8), 2), 3), (((2, 9), 1), 3), (((5, 6), 1), 3), (((5, 9), 1), 2), (((7, 3), 3), 2), (((1, 3), 1), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 0.99
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 0.99
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.87
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 88.71 (abduce 91.29)
Hit samples:  1981  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 314), (2, 293), (3, 300), (4, 302), (5, 300), (6, 290), (7, 283), (8, 282), (9, 291), (10, 283), (11, 332), (12, 156), (13, 210)]
Head:  [((-1,), 1000), ((1, -1, 1), 981)]
Learn perception with 1981 samples for 100 iterations, 0.9434440781131118, 0.9343514930476408, 4387, 12 epochs, take 27 sec.
              precision    recall  f1-score   support

           0       0.97      0.99      0.98      4016
           1       0.69      0.82      0.75      5142
           2       0.92      0.96      0.94      5321
           3       0.94      0.96      0.95      5241
           4       0.95      0.92      0.94      5279
           5       0.95      0.96      0.96      5383
           6       0.94      0.99      0.97      5427
           7       0.93      0.92      0.93      5462
           8       0.99      0.95      0.97      5453
           9       0.98      0.95      0.97      5476
           +       1.00      0.99      0.99     13199
           -       0.98      0.99      0.99     10734
           *       0.96      1.00      0.98     13491
           /       0.99      0.95      0.97      9876
           (       0.73      0.96      0.83     21081
           )       0.95      0.59      0.73     21081

    accuracy                           0.91    141662
   macro avg       0.93      0.93      0.93    141662
weighted avg       0.92      0.91      0.90    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  281    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  296    2    0    3    0    1    2    0    0    0    0    0    1    15   37
2    0    2  359    2    0    0    3    1    0    1    0    0    1    0     2    0
3    1    0    2  356    0    4    0    0    2    1    0    0    0    0     0    0
4    0    1    2    0  344    0    1   15    0    3    0    1    0    0     0    0
5    4    0    0    4    0  364    2    2    0    0    0    0    0    0     2    0
6    0    0    0    0    0    4  378    0    0    0    0    0    0    0     0    0
7    0   13    5    0    5    0    0  356    0    0    2    0    0    0     0    2
8    0    0    2   12    0    0    0    2  367    0    0    0    0    0     0    0
9    0    2    6    0    4    6    0    0    0  367    0    0    0    0     0    0
+    0    1    0    0    0    0    0    0    0    0  919   10    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  752    1    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0   32  664     0    0
(    0   45    2    0    2    2    8    0    0    0    0    2    0    0  1421    4
)    2   66    8    2    0    0    4    2    0    0    0    0    0    6   514  882
result accuracy by length:
1 ( 2%) 95.00
3 ( 2%) 73.00
5 ( 2%) 46.51
7 ( 4%) 33.62
9 ( 4%) 32.66
11 ( 3%) 29.55
13 ( 4%) 32.87
15 ( 4%) 26.24
17 ( 4%) 25.73
19 ( 4%) 26.47
21 ( 4%) 24.75
23 ( 4%) 22.44
25 ( 4%) 15.00
27 ( 4%) 22.66
29 ( 3%) 15.18
31 ( 3%) 18.45
33 ( 2%) 12.14
35 ( 2%) 11.64
37 ( 2%) 16.24
39 ( 3%) 13.16
41 ( 3%) 14.09
43 ( 2%) 10.87
45 ( 2%) 10.71
47 ( 2%) 11.36
49 ( 2%) 14.08
51 ( 2%) 11.36
53 ( 2%) 12.69
55 ( 2%)  6.72
57 ( 2%)  6.29
59 ( 2%) 12.15
61 ( 1%)  9.38
63 ( 0%) 11.43
65 ( 0%) 11.11
67 ( 0%)  0.00
result accuracy by symbol:
( (91%) 19.11
) (91%) 19.11
* (87%) 16.62
+ (84%) 18.54
- (77%) 21.34
/ (76%) 19.44
0 (52%) 21.84
1 (60%) 18.11
2 (61%) 18.50
3 (62%) 18.89
4 (61%) 17.78
5 (62%) 18.00
6 (62%) 17.84
7 (63%) 17.66
8 (64%) 17.20
9 (63%) 16.63
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 80.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 90.00
result accuracy by result:
0 (21%) 49.43
1 (10%) 32.96
2 ( 4%) 34.85
3 ( 2%) 31.11
4 ( 2%) 25.56
5 ( 2%) 36.00
6 ( 2%) 40.00
7 ( 2%) 38.05
8 ( 2%) 30.77
9 ( 1%) 40.70
result accuracy by generalization:
1 (22.45%) 46.73
2 (22.96%) 33.78
3 (22.53%)  3.89
4 (15.82%) 18.19
5 (16.24%)  4.40
error cases:
1 ( [-1] [-1] 1 None
1 ) [-1] [-1] 1 None
3 2 [-1] [-1] 3 2
3 9 [-1] [-1] 3 9
9 2 [-1] [-1] 9 2
5*9 3*9 [1, -1, 1] [1, -1, 1] 45 3
5-0 6-0 [1, -1, 1] [1, -1, 1] 5 6
4*6 4*6 [1, -1, 1] [1, -1, 1] 24 4
6*4 6*4 [1, -1, 1] [1, -1, 1] 24 6
3*5 3*5 [1, -1, 1] [1, -1, 1] 15 3
val (Perception Acc=90.66, Head Acc=100.00, Result Acc=22.71)
Epoch time: 6m 8s
------------------------------
Epoch 5/99 (max_len=3, data=2170)
Train acc: 89.07 (abduce 99.86)
Hit samples:  2167  Ave length:  2.08
Symbols:  15 [(0, 308), (1, 313), (2, 331), (3, 348), (4, 341), (5, 347), (6, 340), (7, 335), (8, 329), (9, 344), (10, 283), (11, 326), (12, 323), (13, 232), (15, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1167)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 6), 48), 3), (((7, 5), 35), 3), (((2, 6), 12), 3), (((4, 9), 36), 3), (((7, 9), 63), 3), (((6, 9), 54), 3), (((3, 5), 15), 3), (((8, 9), 72), 3), (((8, 5), 40), 3), (((5, 7), 35), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((6, 4), 2), 5), (((1, 4), 1), 4), (((9, 3), 3), 3), (((1, 9), 1), 3), (((3, 4), 1), 3), (((5, 9), 1), 3), (((7, 5), 2), 3), (((1, 7), 1), 3), (((2, 7), 1), 3), (((5, 2), 3), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 0.99
Symbol-03: 3 (incr (incr (incr 0))) 0.99
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 0.99
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.86
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 88.61 (abduce 91.29)
Hit samples:  1981  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 314), (2, 293), (3, 300), (4, 301), (5, 300), (6, 291), (7, 284), (8, 282), (9, 290), (10, 283), (11, 332), (12, 154), (13, 212)]
Head:  [((-1,), 1000), ((1, -1, 1), 981)]
Learn perception with 1981 samples for 100 iterations, 0.9434440781131118, 0.9355206197311461, 4389, 12 epochs, take 27 sec.
Epoch time: 5m 55s
------------------------------
Epoch 6/99 (max_len=3, data=2170)
Train acc: 88.61 (abduce 99.54)
Hit samples:  2160  Ave length:  2.07
Symbols:  15 [(0, 307), (1, 311), (2, 322), (3, 347), (4, 341), (5, 348), (6, 339), (7, 337), (8, 328), (9, 340), (10, 284), (11, 326), (12, 324), (13, 225), (15, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1160)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 9), 18), 3), (((4, 5), 20), 3), (((8, 8), 64), 3), (((6, 9), 54), 3), (((3, 5), 15), 3), (((2, 7), 14), 3), (((2, 8), 16), 3), (((3, 7), 21), 3), (((4, 7), 28), 2), (((8, 6), 48), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((2, 4), 1), 5), (((1, 7), 1), 4), (((7, 5), 2), 3), (((6, 3), 2), 3), (((0, 2), 0), 3), (((0, 9), 0), 3), (((9, 3), 3), 3), (((3, 8), 1), 3), (((8, 7), 2), 2), (((7, 3), 3), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 0.99
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.84
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 88.84 (abduce 91.29)
Hit samples:  1981  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 315), (2, 291), (3, 300), (4, 301), (5, 300), (6, 291), (7, 285), (8, 282), (9, 290), (10, 283), (11, 331), (12, 155), (13, 212)]
Head:  [((-1,), 1000), ((1, -1, 1), 981)]
Learn perception with 1981 samples for 100 iterations, 0.9431904641136191, 0.9357338195077484, 4388, 12 epochs, take 27 sec.
Epoch time: 5m 54s
------------------------------
Epoch 7/99 (max_len=3, data=2170)
Train acc: 88.94 (abduce 99.72)
Hit samples:  2164  Ave length:  2.08
Symbols:  16 [(0, 306), (1, 312), (2, 325), (3, 345), (4, 346), (5, 350), (6, 340), (7, 334), (8, 326), (9, 344), (10, 283), (11, 328), (12, 317), (13, 234), (14, 1), (15, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1164)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 7), 56), 3), (((6, 2), 12), 3), (((2, 5), 10), 3), (((5, 5), 25), 3), (((7, 5), 35), 3), (((7, 6), 42), 3), (((8, 6), 48), 3), (((4, 5), 20), 3), (((2, 7), 14), 3), (((3, 6), 18), 3)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((9, 1), 2), 3), (((0, 3), 0), 3), (((8, 7), 2), 3), (((9, 3), 3), 3), (((2, 8), 1), 3), (((1, 5), 1), 2), (((9, 8), 2), 2), (((1, 3), 1), 2), (((9, 1), 9), 2), (((5, 1), 5), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 0.99
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.85
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.17 (abduce 91.29)
Hit samples:  1981  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 315), (2, 291), (3, 301), (4, 301), (5, 300), (6, 291), (7, 284), (8, 282), (9, 290), (10, 283), (11, 331), (12, 156), (13, 211)]
Head:  [((-1,), 1000), ((1, -1, 1), 981)]
Learn perception with 1981 samples for 100 iterations, 0.9429368501141263, 0.9343514930476408, 4387, 12 epochs, take 27 sec.
Epoch time: 5m 54s
------------------------------
Epoch 8/99 (max_len=3, data=2170)
Train acc: 88.84 (abduce 99.72)
Hit samples:  2164  Ave length:  2.08
Symbols:  14 [(0, 308), (1, 316), (2, 328), (3, 345), (4, 340), (5, 348), (6, 337), (7, 336), (8, 328), (9, 344), (10, 282), (11, 332), (12, 333), (13, 215)]
Head:  [((-1,), 1000), ((1, -1, 1), 1164)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 9), 18), 3), (((7, 7), 49), 3), (((3, 9), 27), 3), (((4, 3), 12), 3), (((5, 9), 45), 3), (((3, 5), 15), 3), (((5, 7), 35), 2), (((2, 6), 12), 2), (((4, 8), 32), 2), (((2, 5), 10), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((3, 5), 1), 3), (((5, 9), 1), 3), (((9, 8), 2), 3), (((1, 0), 1), 3), (((9, 3), 3), 3), (((1, 6), 1), 3), (((0, 2), 0), 3), (((3, 6), 1), 2), (((5, 3), 2), 2), (((3, 4), 1), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 0.99
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 0.99
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.44
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.87
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.11 (abduce 91.29)
Hit samples:  1981  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 315), (2, 290), (3, 300), (4, 301), (5, 300), (6, 290), (7, 283), (8, 286), (9, 290), (10, 284), (11, 330), (12, 156), (13, 211)]
Head:  [((-1,), 1000), ((1, -1, 1), 981)]
Learn perception with 1981 samples for 100 iterations, 0.942176008115648, 0.9320720310006838, 4387, 12 epochs, take 27 sec.
Epoch time: 5m 55s
------------------------------
Epoch 9/99 (max_len=3, data=2170)
Train acc: 88.75 (abduce 99.68)
Hit samples:  2163  Ave length:  2.08
Symbols:  15 [(0, 306), (1, 314), (2, 323), (3, 342), (4, 343), (5, 350), (6, 337), (7, 331), (8, 336), (9, 344), (10, 283), (11, 324), (12, 328), (13, 227), (15, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1163)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((3, 6), 18), 3), (((3, 5), 15), 3), (((3, 9), 27), 2), (((9, 3), 27), 2), (((8, 5), 40), 2), (((9, 5), 45), 2), (((5, 7), 35), 2), (((6, 9), 54), 2), (((2, 9), 18), 2), (((9, 2), 18), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((5, 7), 1), 7), (((4, 9), 1), 4), (((9, 3), 3), 3), (((4, 5), 1), 3), (((5, 5), 1), 3), (((4, 8), 1), 2), (((5, 6), 1), 2), (((1, 3), 1), 2), (((1, 6), 1), 2), (((8, 6), 2), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 0.99
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.44
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.85
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.45 (abduce 91.38)
Hit samples:  1983  Ave length:  1.99
Symbols:  14 [(0, 308), (1, 315), (2, 291), (3, 300), (4, 300), (5, 301), (6, 290), (7, 286), (8, 285), (9, 290), (10, 284), (11, 330), (12, 157), (13, 212)]
Head:  [((-1,), 1000), ((1, -1, 1), 983)]
Learn perception with 1983 samples for 100 iterations, 0.9412509496074956, 0.9323770491803278, 4392, 12 epochs, take 27 sec.
              precision    recall  f1-score   support

           0       0.96      0.99      0.98      4016
           1       0.76      0.79      0.78      5142
           2       0.92      0.95      0.93      5321
           3       0.95      0.96      0.95      5241
           4       0.95      0.92      0.94      5279
           5       0.95      0.96      0.96      5383
           6       0.95      0.97      0.96      5427
           7       0.92      0.93      0.93      5462
           8       0.98      0.96      0.97      5453
           9       0.98      0.94      0.96      5476
           +       0.99      0.98      0.99     13199
           -       0.98      0.99      0.99     10734
           *       0.96      1.00      0.98     13491
           /       0.98      0.95      0.97      9876
           (       0.73      0.97      0.83     21081
           )       0.95      0.61      0.74     21081

    accuracy                           0.91    141662
   macro avg       0.93      0.93      0.93    141662
weighted avg       0.92      0.91      0.91    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  281    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  288    3    0    2    0    1    1    0    0    0    0    0    1    16   45
2    0    2  356    2    1    0    3    1    1    1    0    0    2    0     1    0
3    1    0    2  353    0    4    1    0    4    2    0    0    0    0     0    0
4    0    1    2    0  343    0    1   18    0    1    0    1    0    0     0    0
5    4    0    0    2    0  364    2    2    0    0    0    0    0    0     4    0
6    2    0    0    0    0    7  373    0    0    0    0    0    0    0     0    0
7    0    7    2    0    5    0    0  359    2    0    5    0    0    0     0    2
8    0    0    2   10    0    0    0    2  369    0    0    0    0    0     0    0
9    0    2    6    0    8    6    2    0    0  361    0    0    0    0     0    0
+    0    1    0    0    0    0    0    0    0    0  917   11    0    0     0    0
-    0    1    0    0    0    0    0    0    0    0    0  752    1    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0   32  664     0    0
(    0   31    4    0    0    0    4    0    0    0    0    2    0    0  1446    0
)    2   41    6    2    0    0    2    4    0    0    0    0    0   12   512  904
result accuracy by length:
1 ( 2%) 95.00
3 ( 2%) 71.00
5 ( 2%) 42.64
7 ( 4%) 32.31
9 ( 4%) 34.17
11 ( 3%) 29.55
13 ( 4%) 32.87
15 ( 4%) 27.23
17 ( 4%) 24.76
19 ( 4%) 27.45
21 ( 4%) 26.26
23 ( 4%) 20.49
25 ( 4%) 17.00
27 ( 4%) 24.14
29 ( 3%) 19.37
31 ( 3%) 22.02
33 ( 2%) 17.14
35 ( 2%) 14.38
37 ( 2%) 15.38
39 ( 3%) 13.16
41 ( 3%) 13.42
43 ( 2%) 12.32
45 ( 2%) 16.07
47 ( 2%) 14.39
49 ( 2%) 16.90
51 ( 2%) 10.61
53 ( 2%) 14.18
55 ( 2%)  9.24
57 ( 2%) 10.49
59 ( 2%) 11.21
61 ( 1%) 15.62
63 ( 0%) 11.43
65 ( 0%) 11.11
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 20.56
) (91%) 20.56
* (87%) 17.76
+ (84%) 19.98
- (77%) 22.97
/ (76%) 20.77
0 (52%) 23.63
1 (60%) 19.04
2 (61%) 20.10
3 (62%) 20.07
4 (61%) 19.44
5 (62%) 19.63
6 (62%) 19.37
7 (63%) 19.08
8 (64%) 18.44
9 (63%) 17.94
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 80.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 90.00
result accuracy by result:
0 (21%) 52.38
1 (10%) 36.33
2 ( 4%) 34.85
3 ( 2%) 31.11
4 ( 2%) 27.07
5 ( 2%) 32.00
6 ( 2%) 38.26
7 ( 2%) 39.82
8 ( 2%) 32.48
9 ( 1%) 44.19
result accuracy by generalization:
1 (22.45%) 47.18
2 (22.96%) 35.64
3 (22.53%)  3.80
4 (15.82%) 21.81
5 (16.24%)  4.52
error cases:
1 ( [-1] [-1] 1 None
1 ) [-1] [-1] 1 None
3 2 [-1] [-1] 3 2
3 9 [-1] [-1] 3 9
9 2 [-1] [-1] 9 2
5*9 3*9 [1, -1, 1] [1, -1, 1] 45 3
5-0 6-0 [1, -1, 1] [1, -1, 1] 5 6
4*6 4*6 [1, -1, 1] [1, -1, 1] 24 4
6*4 6*4 [1, -1, 1] [1, -1, 1] 24 6
3*5 3*5 [1, -1, 1] [1, -1, 1] 15 3
val (Perception Acc=90.90, Head Acc=100.00, Result Acc=23.82)
Epoch time: 6m 11s
------------------------------
Epoch 10/99 (max_len=3, data=2170)
Train acc: 89.35 (abduce 99.72)
Hit samples:  2164  Ave length:  2.08
Symbols:  15 [(0, 308), (1, 316), (2, 324), (3, 347), (4, 342), (5, 351), (6, 339), (7, 337), (8, 327), (9, 336), (10, 284), (11, 326), (12, 325), (13, 226), (15, 4)]
Head:  [((-1,), 1000), ((1, -1, 1), 1164)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 6), 12), 3), (((8, 2), 16), 3), (((8, 3), 24), 3), (((5, 3), 15), 3), (((9, 7), 63), 3), (((7, 5), 35), 2), (((4, 9), 36), 2), (((7, 6), 42), 2), (((8, 5), 40), 2), (((5, 7), 35), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((4, 9), 1), 3), (((5, 8), 1), 3), (((3, 7), 1), 3), (((9, 2), 2), 3), (((4, 7), 1), 3), (((5, 6), 1), 3), (((2, 4), 1), 3), (((0, 9), 0), 3), (((9, 3), 3), 3), (((3, 2), 1), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.46
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.88
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 88.75 (abduce 91.38)
Hit samples:  1983  Ave length:  1.99
Symbols:  14 [(0, 308), (1, 315), (2, 292), (3, 299), (4, 301), (5, 300), (6, 290), (7, 285), (8, 285), (9, 291), (10, 284), (11, 331), (12, 158), (13, 210)]
Head:  [((-1,), 1000), ((1, -1, 1), 983)]
Learn perception with 1983 samples for 100 iterations, 0.9407444922765257, 0.9300842632657709, 4391, 12 epochs, take 26 sec.
Epoch time: 5m 54s
------------------------------
Epoch 11/99 (max_len=3, data=2170)
Train acc: 89.08 (abduce 99.86)
Hit samples:  2167  Ave length:  2.08
Symbols:  14 [(0, 308), (1, 319), (2, 326), (3, 341), (4, 343), (5, 352), (6, 336), (7, 337), (8, 332), (9, 341), (10, 283), (11, 330), (12, 330), (13, 223)]
Head:  [((-1,), 1000), ((1, -1, 1), 1167)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 5), 10), 3), (((6, 5), 30), 3), (((9, 3), 27), 3), (((8, 4), 32), 3), (((4, 5), 20), 3), (((6, 2), 12), 2), (((8, 9), 72), 2), (((3, 4), 12), 2), (((9, 5), 45), 2), (((5, 8), 40), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((5, 8), 1), 4), (((1, 7), 1), 3), (((2, 2), 1), 3), (((3, 6), 1), 3), (((2, 8), 1), 3), (((2, 3), 1), 3), (((9, 1), 2), 3), (((5, 5), 1), 3), (((3, 3), 1), 2), (((7, 1), 7), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 0.99
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.85
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.35 (abduce 91.38)
Hit samples:  1983  Ave length:  1.99
Symbols:  14 [(0, 308), (1, 315), (2, 292), (3, 300), (4, 301), (5, 301), (6, 290), (7, 284), (8, 285), (9, 290), (10, 284), (11, 332), (12, 158), (13, 209)]
Head:  [((-1,), 1000), ((1, -1, 1), 983)]
Learn perception with 1983 samples for 100 iterations, 0.9407444922765257, 0.9335003416078342, 4391, 12 epochs, take 27 sec.
Epoch time: 5m 55s
------------------------------
Epoch 12/99 (max_len=3, data=2170)
Train acc: 88.98 (abduce 99.72)
Hit samples:  2164  Ave length:  2.08
Symbols:  15 [(0, 309), (1, 315), (2, 324), (3, 345), (4, 342), (5, 349), (6, 337), (7, 333), (8, 332), (9, 342), (10, 281), (11, 329), (12, 328), (13, 225), (15, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1164)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 6), 30), 3), (((2, 6), 12), 3), (((8, 5), 40), 3), (((9, 5), 45), 3), (((9, 9), 81), 2), (((4, 9), 36), 2), (((5, 5), 25), 2), (((3, 4), 12), 2), (((2, 9), 18), 2), (((8, 7), 56), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((4, 9), 1), 4), (((0, 5), 0), 3), (((9, 3), 3), 3), (((2, 9), 1), 3), (((5, 8), 1), 3), (((1, 8), 1), 3), (((3, 3), 1), 3), (((1, 2), 1), 3), (((0, 2), 0), 3), (((9, 4), 3), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 0.99
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) $0))))))))) 0.85
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.72 (abduce 91.43)
Hit samples:  1984  Ave length:  1.99
Symbols:  14 [(0, 308), (1, 314), (2, 292), (3, 302), (4, 301), (5, 301), (6, 291), (7, 284), (8, 285), (9, 290), (10, 284), (11, 331), (12, 159), (13, 210)]
Head:  [((-1,), 1000), ((1, -1, 1), 984)]
Learn perception with 1984 samples for 100 iterations, 0.9402834008097166, 0.9328477122695197, 4393, 12 epochs, take 27 sec.
Epoch time: 5m 55s
------------------------------
Epoch 13/99 (max_len=3, data=2170)
Train acc: 89.03 (abduce 99.86)
Hit samples:  2167  Ave length:  2.08
Symbols:  15 [(0, 308), (1, 315), (2, 327), (3, 347), (4, 343), (5, 348), (6, 341), (7, 333), (8, 331), (9, 341), (10, 285), (11, 327), (12, 333), (13, 221), (15, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1167)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((3, 7), 21), 3), (((5, 6), 30), 3), (((8, 8), 64), 3), (((8, 6), 48), 3), (((4, 7), 28), 3), (((6, 2), 12), 3), (((4, 5), 20), 3), (((6, 4), 24), 2), (((8, 7), 56), 2), (((4, 8), 32), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((3, 4), 1), 4), (((2, 3), 1), 4), (((8, 7), 2), 4), (((0, 3), 0), 4), (((5, 5), 1), 3), (((5, 6), 1), 3), (((2, 8), 1), 3), (((2, 7), 1), 3), (((2, 4), 1), 3), (((9, 1), 9), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 0.99
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.44
Symbol-13: fn (lambda (lambda (if0 $1 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $1)) $0))))))) 0.90
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.77 (abduce 91.38)
Hit samples:  1983  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 314), (2, 290), (3, 301), (4, 299), (5, 300), (6, 292), (7, 286), (8, 287), (9, 290), (10, 284), (11, 333), (12, 158), (13, 208)]
Head:  [((-1,), 1000), ((1, -1, 1), 983)]
Learn perception with 1983 samples for 100 iterations, 0.9415041782729805, 0.9369164199498975, 4391, 12 epochs, take 26 sec.
Epoch time: 5m 50s
------------------------------
Epoch 14/99 (max_len=3, data=2170)
Train acc: 89.48 (abduce 99.82)
Hit samples:  2166  Ave length:  2.08
Symbols:  15 [(0, 310), (1, 316), (2, 319), (3, 343), (4, 345), (5, 347), (6, 341), (7, 334), (8, 336), (9, 341), (10, 286), (11, 324), (12, 330), (13, 225), (15, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1166)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((4, 9), 36), 3), (((9, 4), 36), 3), (((2, 9), 18), 3), (((9, 3), 27), 3), (((7, 2), 14), 2), (((5, 8), 40), 2), (((9, 6), 54), 2), (((7, 9), 63), 2), (((4, 8), 1), 2), (((4, 8), 32), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((3, 9), 1), 3), (((5, 8), 1), 3), (((1, 5), 1), 3), (((4, 4), 1), 3), (((0, 5), 0), 3), (((4, 9), 1), 3), (((7, 6), 2), 3), (((0, 6), 0), 2), (((9, 3), 3), 2), (((7, 3), 3), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (if0 $1 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $1)) $0))))))) 0.88
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.86 (abduce 91.38)
Hit samples:  1983  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 314), (2, 290), (3, 300), (4, 299), (5, 299), (6, 293), (7, 287), (8, 287), (9, 290), (10, 284), (11, 330), (12, 158), (13, 211)]
Head:  [((-1,), 1000), ((1, -1, 1), 983)]
Learn perception with 1983 samples for 100 iterations, 0.9430235502658901, 0.9337280801639718, 4391, 12 epochs, take 26 sec.
              precision    recall  f1-score   support

           0       0.96      0.99      0.98      4016
           1       0.71      0.79      0.75      5142
           2       0.94      0.95      0.94      5321
           3       0.95      0.96      0.95      5241
           4       0.96      0.93      0.94      5279
           5       0.95      0.96      0.95      5383
           6       0.96      0.97      0.97      5427
           7       0.94      0.93      0.93      5462
           8       0.98      0.97      0.97      5453
           9       0.98      0.96      0.97      5476
           +       1.00      0.98      0.99     13199
           -       0.96      0.99      0.97     10734
           *       0.93      1.00      0.96     13491
           /       0.98      0.88      0.93      9876
           (       0.74      0.97      0.84     21081
           )       0.94      0.61      0.74     21081

    accuracy                           0.91    141662
   macro avg       0.93      0.93      0.92    141662
weighted avg       0.92      0.91      0.90    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  281    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  286    3    0    2    0    1    1    0    0    0    0    0    0    16   47
2    0    2  356    2    0    0    4    1    0    1    0    0    3    0     1    0
3    1    1    1  354    0    3    0    0    3    2    0    0    0    0     0    0
4    0    1    2    0  345    0    1   14    0    2    0    1    0    0     0    0
5    4    0    0    2    0  364    2    2    0    0    0    0    0    0     4    0
6    2    0    0    0    0    7  373    0    0    0    0    0    0    0     0    0
7    0   10    2    0    5    0    0  358    2    0    2    0    0    0     0    2
8    0    0    2    7    0    0    0    2  372    0    0    0    0    0     0    0
9    0    0    4    0    4    6    2    0    0  369    0    0    0    0     0    0
+    0    1    0    0    0    0    0    0    0    0  915   13    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  752    1    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0    0
/    0    0    0    0    0    0    0    0    0    0    0   16   64  615     0    0
(    0   29    2    0    0    2    4    0    0    0    0    2    0    0  1444    4
)    2   70    4    6    0    0    0    2    0    0    0    0    0    8   483  910
result accuracy by length:
1 ( 2%) 95.00
3 ( 2%) 71.00
5 ( 2%) 43.41
7 ( 4%) 33.19
9 ( 4%) 35.68
11 ( 3%) 29.55
13 ( 4%) 33.80
15 ( 4%) 30.20
17 ( 4%) 24.27
19 ( 4%) 25.00
21 ( 4%) 26.26
23 ( 4%) 22.44
25 ( 4%) 17.00
27 ( 4%) 24.63
29 ( 3%) 17.28
31 ( 3%) 19.64
33 ( 2%) 15.71
35 ( 2%) 15.07
37 ( 2%) 12.82
39 ( 3%) 15.79
41 ( 3%) 13.42
43 ( 2%) 14.49
45 ( 2%) 11.61
47 ( 2%) 13.64
49 ( 2%) 13.38
51 ( 2%)  9.09
53 ( 2%) 12.69
55 ( 2%)  5.04
57 ( 2%) 12.59
59 ( 2%)  8.41
61 ( 1%) 17.19
63 ( 0%)  8.57
65 ( 0%) 22.22
67 ( 0%)  0.00
result accuracy by symbol:
( (91%) 20.27
) (91%) 20.27
* (87%) 17.55
+ (84%) 19.67
- (77%) 22.47
/ (76%) 20.48
0 (52%) 22.66
1 (60%) 18.57
2 (61%) 19.47
3 (62%) 19.48
4 (61%) 18.54
5 (62%) 18.62
6 (62%) 18.72
7 (63%) 19.28
8 (64%) 17.96
9 (63%) 18.14
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 80.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 90.00
result accuracy by result:
0 (21%) 50.00
1 (10%) 36.14
2 ( 4%) 37.37
3 ( 2%) 28.15
4 ( 2%) 28.57
5 ( 2%) 39.00
6 ( 2%) 36.52
7 ( 2%) 38.05
8 ( 2%) 29.06
9 ( 1%) 47.67
result accuracy by generalization:
1 (22.45%) 46.82
2 (22.96%) 36.09
3 (22.53%)  3.80
4 (15.82%) 20.13
5 (16.24%)  4.52
error cases:
1 ( [-1] [-1] 1 None
1 ) [-1] [-1] 1 None
3 1 [-1] [-1] 3 1
3 9 [-1] [-1] 3 9
9 2 [-1] [-1] 9 2
5*9 3*9 [1, -1, 1] [1, -1, 1] 45 3
5-0 6-0 [1, -1, 1] [1, -1, 1] 5 6
4*6 4*6 [1, -1, 1] [1, -1, 1] 24 4
6*4 6*4 [1, -1, 1] [1, -1, 1] 24 6
3*5 3*5 [1, -1, 1] [1, -1, 1] 15 3
val (Perception Acc=90.55, Head Acc=100.00, Result Acc=23.57)
Epoch time: 6m 5s
------------------------------
Epoch 15/99 (max_len=3, data=2170)
Train acc: 90.09 (abduce 99.86)
Hit samples:  2167  Ave length:  2.08
Symbols:  15 [(0, 310), (1, 311), (2, 323), (3, 341), (4, 341), (5, 348), (6, 341), (7, 337), (8, 337), (9, 344), (10, 284), (11, 327), (12, 330), (13, 226), (15, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1167)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 8), 64), 3), (((6, 2), 12), 3), (((2, 5), 10), 3), (((3, 6), 18), 3), (((9, 6), 54), 3), (((7, 6), 42), 3), (((6, 6), 36), 2), (((8, 7), 56), 2), (((9, 3), 27), 2), (((5, 6), 30), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((8, 6), 2), 4), (((4, 9), 1), 4), (((4, 8), 1), 3), (((1, 9), 1), 3), (((1, 8), 1), 3), (((6, 3), 2), 3), (((9, 1), 2), 3), (((5, 8), 1), 3), (((5, 9), 1), 3), (((3, 8), 1), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (if0 $1 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $1)) $0))))))) 0.91
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.76 (abduce 91.38)
Hit samples:  1983  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 313), (2, 289), (3, 300), (4, 300), (5, 298), (6, 294), (7, 288), (8, 287), (9, 290), (10, 284), (11, 331), (12, 157), (13, 211)]
Head:  [((-1,), 1000), ((1, -1, 1), 983)]
Learn perception with 1983 samples for 100 iterations, 0.943783236262345, 0.9346539162112932, 4392, 12 epochs, take 26 sec.
Epoch time: 5m 53s
------------------------------
Epoch 16/99 (max_len=3, data=2170)
Train acc: 89.71 (abduce 99.77)
Hit samples:  2165  Ave length:  2.08
Symbols:  15 [(0, 308), (1, 312), (2, 323), (3, 345), (4, 342), (5, 347), (6, 341), (7, 337), (8, 332), (9, 343), (10, 284), (11, 323), (12, 324), (13, 233), (15, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1165)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 4), 32), 3), (((5, 5), 25), 3), (((2, 5), 10), 3), (((8, 7), 56), 3), (((3, 9), 27), 3), (((5, 6), 30), 2), (((9, 9), 81), 2), (((2, 7), 14), 2), (((7, 6), 42), 2), (((6, 9), 54), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((0, 3), 0), 5), (((6, 4), 2), 5), (((9, 6), 2), 4), (((3, 9), 1), 4), (((8, 9), 1), 3), (((5, 2), 3), 3), (((9, 1), 2), 3), (((2, 6), 1), 3), (((5, 7), 1), 2), (((9, 1), 9), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (if0 $1 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $1)) $0))))))) 0.88
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.67 (abduce 91.43)
Hit samples:  1984  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 313), (2, 289), (3, 301), (4, 299), (5, 299), (6, 294), (7, 288), (8, 287), (9, 291), (10, 284), (11, 330), (12, 157), (13, 213)]
Head:  [((-1,), 1000), ((1, -1, 1), 984)]
Learn perception with 1984 samples for 100 iterations, 0.9438259109311741, 0.9344709897610921, 4395, 12 epochs, take 26 sec.
Epoch time: 5m 49s
------------------------------
Epoch 17/99 (max_len=3, data=2170)
Train acc: 89.85 (abduce 99.86)
Hit samples:  2167  Ave length:  2.08
Symbols:  15 [(0, 308), (1, 314), (2, 322), (3, 345), (4, 336), (5, 349), (6, 341), (7, 339), (8, 337), (9, 343), (10, 283), (11, 329), (12, 333), (13, 221), (15, 1)]
Head:  [((-1,), 1000), ((1, -1, 1), 1167)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 6), 12), 3), (((4, 7), 28), 3), (((9, 8), 72), 3), (((6, 5), 30), 3), (((3, 7), 21), 2), (((5, 3), 15), 2), (((5, 6), 30), 2), (((5, 7), 35), 2), (((6, 2), 12), 2), (((7, 7), 49), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((5, 9), 1), 4), (((4, 8), 1), 3), (((3, 3), 1), 3), (((3, 7), 1), 3), (((1, 8), 1), 3), (((4, 9), 1), 2), (((4, 2), 2), 2), (((7, 5), 2), 2), (((0, 5), 0), 2), (((0, 9), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.44
Symbol-13: fn (lambda (lambda (if0 $1 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $1)) $0))))))) 0.90
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.90 (abduce 91.43)
Hit samples:  1984  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 313), (2, 290), (3, 300), (4, 298), (5, 299), (6, 294), (7, 288), (8, 288), (9, 291), (10, 284), (11, 330), (12, 157), (13, 213)]
Head:  [((-1,), 1000), ((1, -1, 1), 984)]
Learn perception with 1984 samples for 100 iterations, 0.9435728744939271, 0.9376564277588169, 4395, 12 epochs, take 26 sec.
Epoch time: 5m 49s
------------------------------
Epoch 18/99 (max_len=3, data=2170)
Train acc: 90.09 (abduce 99.72)
Hit samples:  2164  Ave length:  2.08
Symbols:  14 [(0, 308), (1, 312), (2, 326), (3, 342), (4, 342), (5, 348), (6, 343), (7, 337), (8, 329), (9, 342), (10, 284), (11, 328), (12, 329), (13, 222)]
Head:  [((-1,), 1000), ((1, -1, 1), 1164)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 5), 40), 3), (((4, 9), 36), 3), (((2, 5), 10), 3), (((9, 5), 45), 3), (((5, 9), 45), 3), (((8, 9), 72), 3), (((8, 4), 32), 2), (((4, 4), 16), 2), (((4, 8), 32), 2), (((4, 5), 20), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((9, 1), 2), 5), (((4, 9), 1), 4), (((0, 6), 0), 4), (((2, 6), 1), 3), (((5, 8), 1), 3), (((5, 9), 1), 3), (((0, 9), 0), 3), (((3, 8), 1), 3), (((6, 4), 2), 3), (((3, 9), 1), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (if0 $0 0 $1))) 0.45
Symbol-13: fn (lambda (lambda (if0 $1 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $1)) $0))))))) 0.91
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 89.67 (abduce 91.43)
Hit samples:  1984  Ave length:  1.99
Symbols:  14 [(0, 307), (1, 313), (2, 291), (3, 300), (4, 298), (5, 299), (6, 294), (7, 288), (8, 287), (9, 291), (10, 284), (11, 328), (12, 159), (13, 213)]
Head:  [((-1,), 1000), ((1, -1, 1), 984)]
Learn perception with 1984 samples for 100 iterations, 0.9435728744939271, 0.9380833143637606, 4393, 12 epochs, take 26 sec.
Epoch time: 5m 50s
------------------------------
Epoch 19/99 (max_len=3, data=2170)
Train acc: 90.00 (abduce 99.77)
Hit samples:  2165  Ave length:  2.08
Symbols:  14 [(0, 309), (1, 313), (2, 325), (3, 342), (4, 340), (5, 347), (6, 341), (7, 338), (8, 334), (9, 342), (10, 285), (11, 326), (12, 323), (13, 230)]
Head:  [((-1,), 1000), ((1, -1, 1), 1165)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((6, 8), 48), 3), (((8, 6), 48), 3), (((4, 3), 12), 3), (((9, 5), 45), 3), (((4, 5), 20), 3), (((8, 9), 72), 3), (((6, 9), 54), 3), (((7, 7), 49), 3), (((7, 4), 28), 2), (((5, 7), 35), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((5, 6), 1), 6), (((1, 6), 1), 5), (((0, 1), 0), 4), (((4, 7), 1), 4), (((6, 4), 2), 3), (((9, 1), 2), 3), (((2, 2), 1), 3), (((5, 2), 3), 3), (((2, 7), 1), 2), (((7, 3), 3), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.69
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.91
Symbol-14: None 0.00
Symbol-15: None 0.00
Train acc: 93.57 (abduce 99.95)
Hit samples:  2169  Ave length:  2.08
Symbols:  14 [(0, 328), (1, 346), (2, 322), (3, 337), (4, 337), (5, 341), (6, 334), (7, 336), (8, 324), (9, 333), (10, 284), (11, 330), (12, 315), (13, 240)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169)]
Learn perception with 2169 samples for 100 iterations, 0.9536276902595962, 0.9468106786223762, 4907, 11 epochs, take 27 sec.
              precision    recall  f1-score   support

           0       0.94      1.00      0.97      4016
           1       0.63      0.83      0.72      5142
           2       0.92      0.95      0.94      5321
           3       0.98      0.95      0.96      5241
           4       0.95      0.94      0.95      5279
           5       0.95      0.99      0.97      5383
           6       0.96      0.97      0.97      5427
           7       0.95      0.94      0.94      5462
           8       0.98      0.97      0.98      5453
           9       0.99      0.95      0.97      5476
           +       0.99      0.98      0.99     13199
           -       0.98      0.99      0.98     10734
           *       0.98      0.99      0.99     13491
           /       0.95      0.98      0.97      9876
           (       0.75      0.95      0.84     21081
           )       0.96      0.60      0.74     21081

    accuracy                           0.91    141662
   macro avg       0.93      0.94      0.93    141662
weighted avg       0.92      0.91      0.91    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  282    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  301    1    0    0    0    0    2    0    0    0    0    0    2    15   36
2    1    4  356    2    0    0    2    2    0    1    0    0    1    0     0    0
3    4    5    0  352    0    1    0    0    3    0    0    0    0    0     0    0
4    0    6    2    0  350    0    0    8    0    0    0    1    0    0     0    0
5    2    0    2    0    0  375    0    0    0    0    0    0    0    0     0    0
6    2    0    0    0    0    7  373    0    0    0    0    0    0    0     0    0
7    2    0    7    0    5    0    0  361    0    0    5    0    0    0     0    2
8    0    0    2    5    0    0    0    2  374    0    0    0    0    0     0    0
9    2    0    4    0    8    4    2    0    0  365    0    0    0    0     0    0
+    0    0    0    0    1    0    0    0    0    0  914   14    0    0     0    0
-    0    2    0    0    0    0    0    0    0    0    1  751    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  946    5     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0   16  680     0    0
(    2   52    0    0    0    2    6    0    0    0    0    2    0    4  1417    2
)    0  103    8    0    0    4    2    4    0    0    0    0    0   18   448  898
result accuracy by length:
1 ( 2%) 97.00
3 ( 2%) 91.00
5 ( 2%) 88.37
7 ( 4%) 74.24
9 ( 4%) 66.83
11 ( 3%) 63.07
13 ( 4%) 52.31
15 ( 4%) 48.51
17 ( 4%) 47.57
19 ( 4%) 40.20
21 ( 4%) 34.85
23 ( 4%) 38.05
25 ( 4%) 28.00
27 ( 4%) 29.56
29 ( 3%) 30.37
31 ( 3%) 20.83
33 ( 2%) 25.00
35 ( 2%) 25.34
37 ( 2%) 22.22
39 ( 3%) 14.47
41 ( 3%) 15.44
43 ( 2%) 17.39
45 ( 2%) 11.61
47 ( 2%) 13.64
49 ( 2%) 14.79
51 ( 2%) 12.12
53 ( 2%) 16.42
55 ( 2%)  6.72
57 ( 2%) 11.19
59 ( 2%)  8.41
61 ( 1%)  7.81
63 ( 0%)  5.71
65 ( 0%) 11.11
67 ( 0%)  0.00
result accuracy by symbol:
( (91%) 30.99
) (91%) 30.99
* (87%) 30.97
+ (84%) 30.08
- (77%) 28.87
/ (76%) 28.74
0 (52%) 25.39
1 (60%) 25.37
2 (61%) 27.67
3 (62%) 28.75
4 (61%) 28.49
5 (62%) 28.65
6 (62%) 29.17
7 (63%) 28.25
8 (64%) 28.79
9 (63%) 29.73
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 90.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 90.00
result accuracy by result:
0 (21%) 34.10
1 (10%) 37.27
2 ( 4%) 41.41
3 ( 2%) 45.19
4 ( 2%) 36.84
5 ( 2%) 41.00
6 ( 2%) 48.70
7 ( 2%) 50.44
8 ( 2%) 37.61
9 ( 1%) 52.33
result accuracy by generalization:
1 (22.45%) 56.09
2 (22.96%) 42.67
3 (22.53%) 42.03
4 (15.82%) 14.58
5 (16.24%) 10.93
error cases:
1 ) [-1] [-1] 1 None
3 1 [-1] [-1] 3 1
9 2 [-1] [-1] 9 2
0+3 0-3 [1, -1, 1] [1, -1, 1] 3 0
6+3 0+3 [1, -1, 1] [1, -1, 1] 9 3
8/3 8*3 [1, -1, 1] [1, -1, 1] 3 24
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
9+6 4+6 [1, -1, 1] [1, -1, 1] 15 10
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
5+5 0+5 [1, -1, 1] [1, -1, 1] 10 5
val (Perception Acc=91.04, Head Acc=100.00, Result Acc=35.94)
Epoch time: 6m 35s
------------------------------
Epoch 20/99 (max_len=7, data=3387)
Train acc: 87.40 (abduce 94.30)
Hit samples:  3194  Ave length:  3.38
Symbols:  16 [(0, 601), (1, 640), (2, 653), (3, 698), (4, 682), (5, 674), (6, 668), (7, 701), (8, 643), (9, 654), (10, 879), (11, 961), (12, 893), (13, 674), (14, 529), (15, 258)]
Head:  [((-1,), 1000), ((1, -1, 1), 1167), ((1, 3, 1, -1, 3), 333), ((1, -1, 3, 1, 3), 108), ((1, -1, 4, 4, 1, 4, 4), 283), ((2, 2, 5, 2, 2, -1, 5), 110), ((1, 3, 1, -1, 5, 3, 5), 83), ((1, 3, 1, 5, 3, -1, 5), 76), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 14)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 7), 0), 6), (((0, 2), 0), 5), (((0, 1), 0), 4), (((0, 3), 0), 4), (((0, 9), 0), 4), (((0, 5), 0), 3), (((0, 8), 0), 3), (((6, 0), 0), 2), (((3, 0), 0), 2), (((0, 6), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.94
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.94
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.91
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.97
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 87.48 (abduce 98.94)
Hit samples:  3351  Ave length:  3.53
Symbols:  16 [(0, 666), (1, 741), (2, 683), (3, 723), (4, 725), (5, 711), (6, 705), (7, 744), (8, 697), (9, 699), (10, 963), (11, 1038), (12, 922), (13, 820), (14, 674), (15, 332)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 359), ((1, -1, 3, 1, 3), 110), ((1, -1, 4, 4, 1, 4, 4), 363), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 87), ((1, 3, 1, 5, 3, -1, 5), 86), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3351 samples for 100 iterations, 0.9482394663514312, 5 epochs, take 26 sec.
Epoch time: 5m 49s
------------------------------
Epoch 21/99 (max_len=7, data=3387)
Train acc: 95.01 (abduce 98.55)
Hit samples:  3338  Ave length:  3.53
Symbols:  16 [(0, 654), (1, 727), (2, 688), (3, 719), (4, 718), (5, 710), (6, 706), (7, 746), (8, 699), (9, 695), (10, 958), (11, 1031), (12, 909), (13, 819), (14, 672), (15, 323)]
Head:  [((-1,), 1000), ((1, -1, 1), 1165), ((1, 3, 1, -1, 3), 356), ((1, -1, 3, 1, 3), 110), ((1, -1, 4, 4, 1, 4, 4), 361), ((2, 2, 5, 2, 2, -1, 5), 135), ((1, 3, 1, -1, 5, 3, 5), 88), ((1, 3, 1, 5, 3, -1, 5), 86), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 0.99
Train acc: 94.95 (abduce 99.62)
Hit samples:  3374  Ave length:  3.56
Symbols:  16 [(0, 662), (1, 753), (2, 692), (3, 728), (4, 731), (5, 718), (6, 710), (7, 758), (8, 706), (9, 711), (10, 978), (11, 1044), (12, 910), (13, 863), (14, 694), (15, 338)]
Head:  [((-1,), 1000), ((1, -1, 1), 1168), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 376), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 90), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3374 samples for 100 iterations, 0.9507335778592865, 5 epochs, take 26 sec.
Epoch time: 0m 31s
------------------------------
Epoch 22/99 (max_len=7, data=3387)
Train acc: 96.45 (abduce 99.50)
Hit samples:  3370  Ave length:  3.55
Symbols:  16 [(0, 655), (1, 756), (2, 692), (3, 721), (4, 733), (5, 711), (6, 717), (7, 754), (8, 704), (9, 712), (10, 974), (11, 1039), (12, 887), (13, 881), (14, 694), (15, 338)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 359), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 375), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, 5, 3, -1, 5), 85), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.97
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.78 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 667), (1, 756), (2, 691), (3, 729), (4, 733), (5, 719), (6, 713), (7, 763), (8, 711), (9, 712), (10, 983), (11, 1043), (12, 911), (13, 875), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3382 samples for 100 iterations, 0.951262039189638, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 23/99 (max_len=7, data=3387)
Train acc: 97.39 (abduce 99.65)
Hit samples:  3375  Ave length:  3.56
Symbols:  16 [(0, 664), (1, 753), (2, 692), (3, 723), (4, 729), (5, 718), (6, 715), (7, 757), (8, 711), (9, 710), (10, 976), (11, 1033), (12, 910), (13, 877), (14, 693), (15, 338)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 376), ((2, 2, 5, 2, 2, -1, 5), 139), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 87), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.44 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 667), (1, 754), (2, 691), (3, 729), (4, 734), (5, 719), (6, 713), (7, 765), (8, 710), (9, 712), (10, 983), (11, 1042), (12, 908), (13, 879), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3382 samples for 100 iterations, 0.9522583859182996, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 24/99 (max_len=7, data=3387)
Train acc: 97.80 (abduce 99.82)
Hit samples:  3381  Ave length:  3.56
Symbols:  16 [(0, 667), (1, 750), (2, 691), (3, 732), (4, 732), (5, 717), (6, 710), (7, 766), (8, 713), (9, 712), (10, 982), (11, 1040), (12, 905), (13, 882), (14, 696), (15, 340)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.71 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 667), (1, 754), (2, 691), (3, 727), (4, 738), (5, 719), (6, 712), (7, 761), (8, 712), (9, 713), (10, 981), (11, 1045), (12, 911), (13, 875), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3382 samples for 100 iterations, 0.952507472600465, 5 epochs, take 27 sec.
              precision    recall  f1-score   support

           0       0.96      0.99      0.98      4016
           1       0.79      0.94      0.86      5142
           2       0.96      0.97      0.96      5321
           3       0.99      0.97      0.98      5241
           4       0.99      0.95      0.97      5279
           5       0.97      0.98      0.98      5383
           6       0.98      0.98      0.98      5427
           7       0.96      0.97      0.97      5462
           8       0.99      0.98      0.99      5453
           9       0.99      0.97      0.98      5476
           +       1.00      0.99      0.99     13199
           -       0.99      1.00      0.99     10734
           *       0.98      0.97      0.98     13491
           /       0.95      0.98      0.96      9876
           (       0.73      0.96      0.83     21081
           )       0.99      0.63      0.77     21081

    accuracy                           0.92    141662
   macro avg       0.95      0.95      0.95    141662
weighted avg       0.94      0.92      0.92    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  281    0    0    0    0    0    0    1    0    0    0    0    0    0     0    0
1    0  340    1    0    0    0    0    1    0    0    0    0    0    0    10    6
2    0    2  364    2    0    0    0    1    0    0    0    0    0    0     0    0
3    2    3    0  359    0    0    0    0    1    0    0    0    0    0     0    0
4    0    4    2    0  352    0    1    6    0    1    0    1    0    0     0    0
5    2    0    0    0    0  373    0    2    0    0    0    0    0    0     2    0
6    0    0    0    0    0    7  375    0    0    0    0    0    0    0     0    0
7    2    2    5    0    0    0    0  374    0    0    0    0    0    0     0    0
8    2    0    2    0    0    0    2    0  377    0    0    0    0    0     0    0
9    0    0    4    0    2    2    0    2    0  376    0    0    0    0     0    0
+    0    2    0    0    0    0    0    0    0    0  921    6    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  754    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  922   29     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0   16  680     0    0
(    0   45    0    0    0    0    2    0    0    0    0    2    0    4  1427    6
)    0   26    0    0    0    0    0    0    0    0    0    0    0    2   516  942
result accuracy by length:
1 ( 2%) 98.00
3 ( 2%) 91.00
5 ( 2%) 90.70
7 ( 4%) 83.41
9 ( 4%) 77.39
11 ( 3%) 76.70
13 ( 4%) 62.96
15 ( 4%) 68.32
17 ( 4%) 67.96
19 ( 4%) 59.31
21 ( 4%) 53.54
23 ( 4%) 52.20
25 ( 4%) 46.50
27 ( 4%) 49.26
29 ( 3%) 50.26
31 ( 3%) 39.29
33 ( 2%) 46.43
35 ( 2%) 44.52
37 ( 2%) 37.61
39 ( 3%) 38.82
41 ( 3%) 34.23
43 ( 2%) 39.13
45 ( 2%) 33.04
47 ( 2%) 33.33
49 ( 2%) 28.87
51 ( 2%) 35.61
53 ( 2%) 34.33
55 ( 2%) 25.21
57 ( 2%) 27.97
59 ( 2%) 24.30
61 ( 1%) 28.12
63 ( 0%) 28.57
65 ( 0%) 11.11
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 48.81
) (91%) 48.81
* (87%) 47.71
+ (84%) 47.85
- (77%) 46.93
/ (76%) 46.68
0 (52%) 42.58
1 (60%) 44.85
2 (61%) 46.21
3 (62%) 46.39
4 (61%) 46.27
5 (62%) 46.03
6 (62%) 46.85
7 (63%) 46.85
8 (64%) 45.99
9 (63%) 47.57
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 90.00
result accuracy by result:
0 (21%) 48.95
1 (10%) 56.74
2 ( 4%) 57.07
3 ( 2%) 55.56
4 ( 2%) 54.14
5 ( 2%) 55.00
6 ( 2%) 62.61
7 ( 2%) 64.60
8 ( 2%) 58.97
9 ( 1%) 67.44
result accuracy by generalization:
1 (22.45%) 68.18
2 (22.96%) 58.76
3 (22.53%) 59.06
4 (15.82%) 35.87
5 (16.24%) 28.52
error cases:
3 1 [-1] [-1] 3 1
9 2 [-1] [-1] 9 2
0+3 0-3 [1, -1, 1] [1, -1, 1] 3 0
0/2 7/2 [1, -1, 1] [1, -1, 1] 0 4
2*4 2/4 [1, -1, 1] [1, -1, 1] 8 1
8/3 8*3 [1, -1, 1] [1, -1, 1] 3 24
9+7 977 [1, -1, 1] [1, -1, 1] 16 None
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
5+5 0+5 [1, -1, 1] [1, -1, 1] 10 5
val (Perception Acc=92.27, Head Acc=100.00, Result Acc=52.41)
Epoch time: 1m 8s
------------------------------
Epoch 25/99 (max_len=7, data=3387)
Train acc: 97.90 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 668), (1, 752), (2, 692), (3, 728), (4, 737), (5, 716), (6, 708), (7, 764), (8, 713), (9, 715), (10, 981), (11, 1044), (12, 911), (13, 875), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.97 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 691), (3, 727), (4, 738), (5, 718), (6, 714), (7, 762), (8, 712), (9, 712), (10, 981), (11, 1042), (12, 909), (13, 880), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3382 samples for 100 iterations, 0.9530056459647958, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 26/99 (max_len=7, data=3387)
Train acc: 98.06 (abduce 99.91)
Hit samples:  3384  Ave length:  3.56
Symbols:  16 [(0, 661), (1, 756), (2, 692), (3, 725), (4, 735), (5, 723), (6, 714), (7, 763), (8, 715), (9, 716), (10, 981), (11, 1039), (12, 911), (13, 883), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.95 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 691), (3, 727), (4, 739), (5, 719), (6, 712), (7, 761), (8, 712), (9, 713), (10, 981), (11, 1043), (12, 911), (13, 877), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3382 samples for 100 iterations, 0.9527565592826304, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 27/99 (max_len=7, data=3387)
Train acc: 97.85 (abduce 99.79)
Hit samples:  3380  Ave length:  3.56
Symbols:  16 [(0, 664), (1, 755), (2, 690), (3, 727), (4, 741), (5, 720), (6, 708), (7, 759), (8, 713), (9, 709), (10, 982), (11, 1035), (12, 897), (13, 892), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 87), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.96 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 691), (3, 727), (4, 740), (5, 719), (6, 710), (7, 762), (8, 712), (9, 713), (10, 981), (11, 1041), (12, 909), (13, 881), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3382 samples for 100 iterations, 0.9530886748588508, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 28/99 (max_len=7, data=3387)
Train acc: 97.71 (abduce 99.73)
Hit samples:  3378  Ave length:  3.56
Symbols:  16 [(0, 663), (1, 756), (2, 690), (3, 726), (4, 742), (5, 716), (6, 707), (7, 756), (8, 712), (9, 714), (10, 980), (11, 1034), (12, 910), (13, 878), (14, 697), (15, 339)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 87), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.54 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 691), (3, 726), (4, 741), (5, 719), (6, 710), (7, 760), (8, 714), (9, 713), (10, 982), (11, 1040), (12, 909), (13, 881), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3382 samples for 100 iterations, 0.9529226170707407, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 29/99 (max_len=7, data=3387)
Train acc: 98.06 (abduce 99.82)
Hit samples:  3381  Ave length:  3.56
Symbols:  16 [(0, 670), (1, 754), (2, 692), (3, 723), (4, 741), (5, 716), (6, 707), (7, 754), (8, 717), (9, 717), (10, 982), (11, 1035), (12, 911), (13, 880), (14, 696), (15, 340)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.95 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 667), (1, 754), (2, 691), (3, 727), (4, 739), (5, 719), (6, 711), (7, 762), (8, 715), (9, 712), (10, 982), (11, 1040), (12, 908), (13, 884), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.9531159239897103, 5 epochs, take 27 sec.
              precision    recall  f1-score   support

           0       0.96      1.00      0.98      4016
           1       0.77      0.93      0.84      5142
           2       0.95      0.97      0.96      5321
           3       0.99      0.97      0.98      5241
           4       0.99      0.94      0.96      5279
           5       0.98      0.98      0.98      5383
           6       0.98      0.99      0.98      5427
           7       0.95      0.97      0.96      5462
           8       0.99      0.98      0.99      5453
           9       1.00      0.97      0.98      5476
           +       1.00      0.99      0.99     13199
           -       0.99      1.00      0.99     10734
           *       0.98      0.98      0.98     13491
           /       0.97      0.98      0.97      9876
           (       0.73      0.96      0.83     21081
           )       0.99      0.63      0.77     21081

    accuracy                           0.92    141662
   macro avg       0.95      0.95      0.95    141662
weighted avg       0.94      0.92      0.92    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  338    1    0    0    0    0    1    0    0    0    0    0    0    12    6
2    0    1  365    1    0    0    0    1    0    0    0    0    0    0     0    0
3    2    3    0  358    0    2    0    0    1    0    0    0    0    0     0    0
4    0    4    2    0  350    0    2    9    0    0    0    1    0    0     0    0
5    2    0    0    0    0  373    0    2    0    0    0    0    0    0     2    0
6    0    0    0    0    0    4  378    0    0    0    0    0    0    0     0    0
7    2    2    5    0    0    0    0  374    0    0    0    0    0    0     0    0
8    2    0    2    0    0    0    2    0  377    0    0    0    0    0     0    0
9    0    0    4    0    2    2    0    2    0  376    0    0    0    0     0    0
+    0    1    0    0    0    0    0    1    0    0  923    4    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  754    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  934   17     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0   16  680     0    0
(    0   56    0    0    0    0    2    0    0    0    0    2    0    0  1423    4
)    2   31    2    0    0    0    0    0    0    0    0    0    0    2   506  944
result accuracy by length:
1 ( 2%) 98.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 82.53
9 ( 4%) 77.89
11 ( 3%) 77.84
13 ( 4%) 63.43
15 ( 4%) 67.82
17 ( 4%) 68.45
19 ( 4%) 58.82
21 ( 4%) 53.03
23 ( 4%) 50.73
25 ( 4%) 45.50
27 ( 4%) 46.80
29 ( 3%) 49.74
31 ( 3%) 42.86
33 ( 2%) 45.00
35 ( 2%) 41.78
37 ( 2%) 41.03
39 ( 3%) 36.18
41 ( 3%) 37.58
43 ( 2%) 37.68
45 ( 2%) 36.61
47 ( 2%) 31.06
49 ( 2%) 30.28
51 ( 2%) 29.55
53 ( 2%) 34.33
55 ( 2%) 22.69
57 ( 2%) 20.28
59 ( 2%) 21.50
61 ( 1%) 26.56
63 ( 0%) 17.14
65 ( 0%) 11.11
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 48.00
) (91%) 48.00
* (87%) 47.04
+ (84%) 47.13
- (77%) 46.17
/ (76%) 45.75
0 (52%) 41.56
1 (60%) 43.81
2 (61%) 45.28
3 (62%) 46.03
4 (61%) 44.98
5 (62%) 45.41
6 (62%) 45.80
7 (63%) 45.62
8 (64%) 45.19
9 (63%) 46.36
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 90.00
result accuracy by result:
0 (21%) 48.19
1 (10%) 55.43
2 ( 4%) 57.07
3 ( 2%) 55.56
4 ( 2%) 53.38
5 ( 2%) 57.00
6 ( 2%) 62.61
7 ( 2%) 63.72
8 ( 2%) 58.97
9 ( 1%) 68.60
result accuracy by generalization:
1 (22.45%) 68.73
2 (22.96%) 58.13
3 (22.53%) 58.70
4 (15.82%) 33.16
5 (16.24%) 27.64
error cases:
3 1 [-1] [-1] 3 1
9 2 [-1] [-1] 9 2
0+3 0-3 [1, -1, 1] [1, -1, 1] 3 0
8/3 8*3 [1, -1, 1] [1, -1, 1] 3 24
9+7 977 [1, -1, 1] [1, -1, 1] 16 None
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
5+5 0+5 [1, -1, 1] [1, -1, 1] 10 5
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*9+7 4*9+2 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 43 38
val (Perception Acc=92.39, Head Acc=100.00, Result Acc=51.73)
Epoch time: 0m 50s
------------------------------
Epoch 30/99 (max_len=7, data=3387)
Train acc: 97.77 (abduce 99.82)
Hit samples:  3381  Ave length:  3.56
Symbols:  16 [(0, 668), (1, 755), (2, 692), (3, 721), (4, 735), (5, 719), (6, 710), (7, 766), (8, 716), (9, 710), (10, 979), (11, 1033), (12, 910), (13, 885), (14, 696), (15, 338)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 139), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.92 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 691), (3, 727), (4, 740), (5, 719), (6, 711), (7, 761), (8, 715), (9, 713), (10, 982), (11, 1041), (12, 910), (13, 881), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.9527840013276907, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 31/99 (max_len=7, data=3387)
Train acc: 97.89 (abduce 99.82)
Hit samples:  3381  Ave length:  3.56
Symbols:  16 [(0, 663), (1, 753), (2, 693), (3, 724), (4, 742), (5, 718), (6, 710), (7, 761), (8, 714), (9, 713), (10, 983), (11, 1039), (12, 904), (13, 882), (14, 697), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.97 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 667), (1, 754), (2, 691), (3, 727), (4, 742), (5, 719), (6, 711), (7, 758), (8, 715), (9, 713), (10, 982), (11, 1044), (12, 909), (13, 879), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.952369098000166, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 32/99 (max_len=7, data=3387)
Train acc: 98.26 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 662), (1, 754), (2, 690), (3, 727), (4, 742), (5, 719), (6, 715), (7, 758), (8, 715), (9, 713), (10, 982), (11, 1036), (12, 910), (13, 884), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 87), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.77 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 665), (1, 754), (2, 692), (3, 726), (4, 742), (5, 719), (6, 712), (7, 759), (8, 715), (9, 713), (10, 983), (11, 1044), (12, 909), (13, 878), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.9525350593311759, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 33/99 (max_len=7, data=3387)
Train acc: 98.09 (abduce 99.79)
Hit samples:  3380  Ave length:  3.56
Symbols:  16 [(0, 657), (1, 755), (2, 691), (3, 724), (4, 741), (5, 717), (6, 711), (7, 763), (8, 716), (9, 711), (10, 982), (11, 1041), (12, 908), (13, 875), (14, 698), (15, 340)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 87), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.66 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 692), (3, 726), (4, 741), (5, 719), (6, 712), (7, 760), (8, 715), (9, 712), (10, 983), (11, 1042), (12, 910), (13, 879), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.9527840013276907, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 34/99 (max_len=7, data=3387)
Train acc: 98.06 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 672), (1, 751), (2, 691), (3, 724), (4, 737), (5, 718), (6, 712), (7, 759), (8, 716), (9, 711), (10, 982), (11, 1040), (12, 904), (13, 883), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 86), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.57 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 692), (3, 726), (4, 742), (5, 719), (6, 713), (7, 761), (8, 714), (9, 710), (10, 983), (11, 1042), (12, 907), (13, 882), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.9530329433242054, 5 epochs, take 27 sec.
              precision    recall  f1-score   support

           0       0.96      1.00      0.98      4016
           1       0.79      0.93      0.86      5142
           2       0.95      0.97      0.96      5321
           3       0.99      0.97      0.98      5241
           4       0.98      0.95      0.96      5279
           5       0.97      0.98      0.98      5383
           6       0.97      0.99      0.98      5427
           7       0.96      0.97      0.97      5462
           8       0.99      0.98      0.99      5453
           9       1.00      0.97      0.99      5476
           +       1.00      0.99      0.99     13199
           -       0.99      1.00      0.99     10734
           *       1.00      0.98      0.99     13491
           /       0.96      1.00      0.98      9876
           (       0.73      0.96      0.83     21081
           )       0.99      0.64      0.78     21081

    accuracy                           0.93    141662
   macro avg       0.95      0.95      0.95    141662
weighted avg       0.94      0.93      0.92    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  339    1    0    0    0    0    1    0    0    0    0    0    0    11    6
2    0    2  364    1    1    0    0    1    0    0    0    0    0    0     0    0
3    2    2    0  358    0    2    0    0    1    0    0    0    0    0     0    0
4    0    3    2    0  353    0    2    8    0    0    0    1    0    0     0    0
5    2    0    0    0    2  371    2    0    0    0    0    0    0    0     2    0
6    0    0    0    0    0    4  378    0    0    0    0    0    0    0     0    0
7    2    2    5    0    0    0    0  374    0    0    0    0    0    0     0    0
8    2    0    2    0    0    0    2    0  377    0    0    0    0    0     0    0
9    0    0    4    0    2    2    0    2    0  376    0    0    0    0     0    0
+    0    1    0    0    0    0    0    1    0    0  923    4    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  754    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  928   23     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0    0
(    0   49    0    0    0    0    2    0    0    0    0    2    0    0  1430    4
)    2   26    2    0    0    0    0    0    0    0    0    0    0    2   502  952
result accuracy by length:
1 ( 2%) 98.00
3 ( 2%) 94.00
5 ( 2%) 91.47
7 ( 4%) 82.53
9 ( 4%) 79.90
11 ( 3%) 78.41
13 ( 4%) 65.28
15 ( 4%) 70.79
17 ( 4%) 69.90
19 ( 4%) 59.80
21 ( 4%) 55.05
23 ( 4%) 53.17
25 ( 4%) 48.50
27 ( 4%) 49.75
29 ( 3%) 53.93
31 ( 3%) 42.26
33 ( 2%) 45.71
35 ( 2%) 45.89
37 ( 2%) 40.17
39 ( 3%) 38.82
41 ( 3%) 38.26
43 ( 2%) 42.75
45 ( 2%) 37.50
47 ( 2%) 34.85
49 ( 2%) 32.39
51 ( 2%) 35.61
53 ( 2%) 38.81
55 ( 2%) 22.69
57 ( 2%) 23.78
59 ( 2%) 24.30
61 ( 1%) 29.69
63 ( 0%) 22.86
65 ( 0%) 11.11
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 50.28
) (91%) 50.28
* (87%) 49.15
+ (84%) 49.31
- (77%) 48.50
/ (76%) 48.44
0 (52%) 43.98
1 (60%) 46.05
2 (61%) 47.41
3 (62%) 48.10
4 (61%) 47.86
5 (62%) 47.75
6 (62%) 48.32
7 (63%) 47.89
8 (64%) 47.77
9 (63%) 48.91
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 90.00
result accuracy by result:
0 (21%) 49.71
1 (10%) 58.61
2 ( 4%) 60.10
3 ( 2%) 58.52
4 ( 2%) 57.14
5 ( 2%) 59.00
6 ( 2%) 65.22
7 ( 2%) 64.60
8 ( 2%) 64.10
9 ( 1%) 72.09
result accuracy by generalization:
1 (22.45%) 70.00
2 (22.96%) 60.98
3 (22.53%) 59.60
4 (15.82%) 36.13
5 (16.24%) 30.65
error cases:
3 1 [-1] [-1] 3 1
9 2 [-1] [-1] 9 2
0+3 0-3 [1, -1, 1] [1, -1, 1] 3 0
9+7 977 [1, -1, 1] [1, -1, 1] 16 None
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
5+5 0+5 [1, -1, 1] [1, -1, 1] 10 5
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*9+7 4*9+2 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 43 38
8/(2*5) 8/(2/5) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 1 8
val (Perception Acc=92.64, Head Acc=100.00, Result Acc=53.84)
Epoch time: 0m 48s
------------------------------
Epoch 35/99 (max_len=7, data=3387)
Train acc: 98.11 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 663), (1, 755), (2, 691), (3, 723), (4, 742), (5, 717), (6, 715), (7, 762), (8, 716), (9, 708), (10, 983), (11, 1035), (12, 911), (13, 881), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 87), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 98.12 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 692), (3, 726), (4, 743), (5, 719), (6, 713), (7, 760), (8, 714), (9, 710), (10, 983), (11, 1042), (12, 908), (13, 881), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.9528669819931956, 5 epochs, take 27 sec.
Epoch time: 0m 32s
------------------------------
Epoch 36/99 (max_len=7, data=3387)
Train acc: 97.80 (abduce 99.82)
Hit samples:  3381  Ave length:  3.56
Symbols:  16 [(0, 671), (1, 752), (2, 691), (3, 722), (4, 744), (5, 718), (6, 711), (7, 760), (8, 712), (9, 708), (10, 982), (11, 1041), (12, 910), (13, 875), (14, 699), (15, 339)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 87), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 98.18 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 692), (3, 726), (4, 742), (5, 719), (6, 713), (7, 761), (8, 714), (9, 710), (10, 983), (11, 1040), (12, 909), (13, 882), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.9528669819931956, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 37/99 (max_len=7, data=3387)
Train acc: 98.12 (abduce 99.85)
Hit samples:  3382  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 691), (3, 722), (4, 743), (5, 719), (6, 713), (7, 760), (8, 716), (9, 708), (10, 982), (11, 1034), (12, 919), (13, 875), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 87), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 98.09 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 692), (3, 726), (4, 743), (5, 719), (6, 713), (7, 760), (8, 714), (9, 710), (10, 983), (11, 1040), (12, 909), (13, 882), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.9531989046552153, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 38/99 (max_len=7, data=3387)
Train acc: 98.06 (abduce 99.79)
Hit samples:  3380  Ave length:  3.56
Symbols:  16 [(0, 660), (1, 755), (2, 691), (3, 724), (4, 741), (5, 718), (6, 714), (7, 762), (8, 713), (9, 708), (10, 982), (11, 1038), (12, 910), (13, 876), (14, 699), (15, 339)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 87), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.95 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 666), (1, 754), (2, 692), (3, 726), (4, 743), (5, 719), (6, 713), (7, 760), (8, 714), (9, 710), (10, 983), (11, 1039), (12, 911), (13, 881), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.9530329433242054, 5 epochs, take 27 sec.
Epoch time: 0m 31s
------------------------------
Epoch 39/99 (max_len=7, data=3387)
Train acc: 97.95 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 671), (1, 753), (2, 691), (3, 725), (4, 743), (5, 719), (6, 709), (7, 762), (8, 712), (9, 710), (10, 983), (11, 1039), (12, 913), (13, 877), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 87), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 97.94 (abduce 99.88)
Hit samples:  3383  Ave length:  3.56
Symbols:  16 [(0, 665), (1, 754), (2, 692), (3, 726), (4, 742), (5, 719), (6, 713), (7, 762), (8, 714), (9, 710), (10, 983), (11, 1040), (12, 908), (13, 883), (14, 699), (15, 341)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Learn perception with 3383 samples for 100 iterations, 0.9527840013276907, 5 epochs, take 27 sec.
              precision    recall  f1-score   support

           0       0.96      1.00      0.98      4016
           1       0.80      0.93      0.86      5142
           2       0.95      0.97      0.96      5321
           3       0.99      0.97      0.98      5241
           4       0.97      0.94      0.96      5279
           5       0.98      0.98      0.98      5383
           6       0.97      0.99      0.98      5427
           7       0.96      0.96      0.96      5462
           8       0.99      0.98      0.98      5453
           9       1.00      0.97      0.99      5476
           +       1.00      0.99      1.00     13199
           -       0.99      1.00      0.99     10734
           *       1.00      0.97      0.98     13491
           /       0.96      1.00      0.98      9876
           (       0.73      0.96      0.83     21081
           )       0.99      0.63      0.77     21081

    accuracy                           0.92    141662
   macro avg       0.95      0.95      0.95    141662
weighted avg       0.94      0.92      0.92    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  282    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  339    1    0    0    0    0    1    0    0    0    0    0    0    11    6
2    0    2  362    1    0    0    0    1    1    0    0    0    1    0     0    0
3    2    2    0  359    0    2    0    0    1    0    0    0    0    0     0    0
4    0    4    2    0  351    0    2    8    0    0    0    1    0    0     0    0
5    0    0    0    0    2  373    2    0    0    0    0    0    0    0     2    0
6    0    0    0    0    0    4  378    0    0    0    0    0    0    0     0    0
7    2    2    5    0    5    0    0  369    0    0    0    0    0    0     0    0
8    2    0    2    0    0    0    2    0  377    0    0    0    0    0     0    0
9    0    0    4    0    2    2    0    2    0  376    0    0    0    0     0    0
+    0    2    0    0    0    0    0    0    0    0  924    4    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  754    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  922   29     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0    0
(    0   45    0    0    0    0    2    0    0    0    0    2    0    0  1434    4
)    2   26    2    0    0    0    0    0    0    0    0    0    0    2   512  942
result accuracy by length:
1 ( 2%) 98.00
3 ( 2%) 94.00
5 ( 2%) 90.70
7 ( 4%) 82.10
9 ( 4%) 79.40
11 ( 3%) 77.27
13 ( 4%) 63.43
15 ( 4%) 69.80
17 ( 4%) 68.45
19 ( 4%) 59.31
21 ( 4%) 56.06
23 ( 4%) 53.17
25 ( 4%) 49.00
27 ( 4%) 50.25
29 ( 3%) 52.36
31 ( 3%) 40.48
33 ( 2%) 45.71
35 ( 2%) 43.15
37 ( 2%) 38.46
39 ( 3%) 38.82
41 ( 3%) 36.91
43 ( 2%) 42.03
45 ( 2%) 35.71
47 ( 2%) 35.61
49 ( 2%) 31.69
51 ( 2%) 34.85
53 ( 2%) 38.06
55 ( 2%) 21.85
57 ( 2%) 24.48
59 ( 2%) 23.36
61 ( 1%) 31.25
63 ( 0%) 22.86
65 ( 0%) 11.11
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 49.65
) (91%) 49.65
* (87%) 48.50
+ (84%) 48.69
- (77%) 47.87
/ (76%) 47.83
0 (52%) 43.05
1 (60%) 45.55
2 (61%) 46.84
3 (62%) 47.61
4 (61%) 46.83
5 (62%) 47.36
6 (62%) 47.93
7 (63%) 46.88
8 (64%) 47.20
9 (63%) 48.34
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 90.00
result accuracy by result:
0 (21%) 49.14
1 (10%) 57.68
2 ( 4%) 59.09
3 ( 2%) 57.78
4 ( 2%) 57.14
5 ( 2%) 60.00
6 ( 2%) 61.74
7 ( 2%) 65.49
8 ( 2%) 63.25
9 ( 1%) 68.60
result accuracy by generalization:
1 (22.45%) 69.55
2 (22.96%) 60.27
3 (22.53%) 58.70
4 (15.82%) 35.61
5 (16.24%) 30.28
error cases:
3 1 [-1] [-1] 3 1
9 2 [-1] [-1] 9 2
0+3 0-3 [1, -1, 1] [1, -1, 1] 3 0
2*4 2/4 [1, -1, 1] [1, -1, 1] 8 1
9+7 977 [1, -1, 1] [1, -1, 1] 16 None
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*9+7 4*9+2 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 43 38
8/(2*5) 8/(2/5) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 1 8
val (Perception Acc=92.46, Head Acc=100.00, Result Acc=53.22)
Epoch time: 0m 48s
------------------------------
Epoch 40/99 (max_len=11, data=4683)
Train acc: 91.81 (abduce 97.01)
Hit samples:  4543  Ave length:  5.19
Symbols:  16 [(0, 1143), (1, 1274), (2, 1245), (3, 1268), (4, 1248), (5, 1237), (6, 1206), (7, 1298), (8, 1193), (9, 1202), (10, 2063), (11, 2071), (12, 1780), (13, 1850), (14, 2347), (15, 1162)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 134), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 103), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 99)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.97
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 91.60 (abduce 99.44)
Hit samples:  4657  Ave length:  5.31
Symbols:  16 [(0, 1204), (1, 1330), (2, 1292), (3, 1323), (4, 1286), (5, 1274), (6, 1271), (7, 1358), (8, 1239), (9, 1240), (10, 2179), (11, 2184), (12, 1825), (13, 1969), (14, 2514), (15, 1261)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Learn perception with 4657 samples for 100 iterations, 0.9481999272697886, 3 epochs, take 32 sec.
Epoch time: 0m 40s
------------------------------
Epoch 41/99 (max_len=11, data=4683)
Train acc: 93.01 (abduce 98.08)
Hit samples:  4593  Ave length:  5.26
Symbols:  16 [(0, 1179), (1, 1289), (2, 1265), (3, 1288), (4, 1266), (5, 1256), (6, 1256), (7, 1330), (8, 1217), (9, 1215), (10, 2121), (11, 2128), (12, 1774), (13, 1938), (14, 2421), (15, 1230)]
Head:  [((-1,), 1000), ((1, -1, 1), 1167), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 108), ((1, -1, 4, 4, 1, 4, 4), 376), ((2, 2, 5, 2, 2, -1, 5), 139), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 137), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 111), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 102)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.97
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.10 (abduce 99.64)
Hit samples:  4666  Ave length:  5.32
Symbols:  16 [(0, 1210), (1, 1337), (2, 1290), (3, 1324), (4, 1293), (5, 1264), (6, 1279), (7, 1365), (8, 1250), (9, 1242), (10, 2191), (11, 2185), (12, 1817), (13, 1992), (14, 2511), (15, 1284)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Learn perception with 4666 samples for 100 iterations, 0.948860433276959, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 42/99 (max_len=11, data=4683)
Train acc: 94.80 (abduce 99.08)
Hit samples:  4640  Ave length:  5.3
Symbols:  16 [(0, 1193), (1, 1317), (2, 1276), (3, 1319), (4, 1281), (5, 1259), (6, 1270), (7, 1357), (8, 1249), (9, 1227), (10, 2166), (11, 2170), (12, 1793), (13, 1976), (14, 2484), (15, 1265)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 90), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 141), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 102)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 94.61 (abduce 99.72)
Hit samples:  4670  Ave length:  5.33
Symbols:  16 [(0, 1206), (1, 1340), (2, 1290), (3, 1327), (4, 1296), (5, 1265), (6, 1276), (7, 1375), (8, 1254), (9, 1244), (10, 2196), (11, 2186), (12, 1813), (13, 2005), (14, 2506), (15, 1293)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 103)]
Learn perception with 4670 samples for 100 iterations, 0.9494210357027983, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 43/99 (max_len=11, data=4683)
Train acc: 95.26 (abduce 99.23)
Hit samples:  4647  Ave length:  5.31
Symbols:  16 [(0, 1196), (1, 1332), (2, 1285), (3, 1318), (4, 1278), (5, 1262), (6, 1268), (7, 1364), (8, 1249), (9, 1232), (10, 2180), (11, 2167), (12, 1824), (13, 1960), (14, 2484), (15, 1274)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 139), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 143), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 102)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 95.45 (abduce 99.81)
Hit samples:  4674  Ave length:  5.33
Symbols:  16 [(0, 1212), (1, 1341), (2, 1289), (3, 1325), (4, 1296), (5, 1267), (6, 1279), (7, 1376), (8, 1255), (9, 1250), (10, 2199), (11, 2191), (12, 1823), (13, 2000), (14, 2513), (15, 1298)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Learn perception with 4674 samples for 100 iterations, 0.9497471301276391, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 44/99 (max_len=11, data=4683)
Train acc: 95.66 (abduce 99.40)
Hit samples:  4655  Ave length:  5.31
Symbols:  16 [(0, 1205), (1, 1324), (2, 1284), (3, 1318), (4, 1295), (5, 1257), (6, 1268), (7, 1374), (8, 1246), (9, 1239), (10, 2182), (11, 2186), (12, 1813), (13, 1969), (14, 2494), (15, 1279)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 95.56 (abduce 99.83)
Hit samples:  4675  Ave length:  5.33
Symbols:  16 [(0, 1214), (1, 1341), (2, 1291), (3, 1329), (4, 1296), (5, 1265), (6, 1279), (7, 1375), (8, 1256), (9, 1249), (10, 2199), (11, 2194), (12, 1825), (13, 1999), (14, 2511), (15, 1302)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Learn perception with 4675 samples for 100 iterations, 0.9503711133400201, 3 epochs, take 32 sec.
              precision    recall  f1-score   support

           0       0.93      1.00      0.96      4016
           1       0.86      0.94      0.89      5142
           2       0.97      0.98      0.98      5321
           3       1.00      0.97      0.99      5241
           4       0.97      0.96      0.97      5279
           5       0.99      0.98      0.99      5383
           6       0.99      0.99      0.99      5427
           7       0.96      0.96      0.96      5462
           8       0.99      0.98      0.98      5453
           9       1.00      0.97      0.99      5476
           +       1.00      0.99      1.00     13199
           -       0.99      1.00      1.00     10734
           *       1.00      0.98      0.99     13491
           /       0.97      1.00      0.99      9876
           (       0.74      0.96      0.83     21081
           )       0.97      0.65      0.78     21081

    accuracy                           0.93    141662
   macro avg       0.96      0.96      0.95    141662
weighted avg       0.94      0.93      0.93    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  339    0    0    0    0    0    0    0    0    0    0    0    0     8   10
2    0    0  368    0    0    0    0    1    0    0    0    0    0    0     0    0
3    2    2    0  360    0    0    0    0    1    0    0    0    0    0     0    0
4    0    0    2    0  358    0    1    7    0    0    0    1    0    0     0    0
5    2    0    0    0    0  373    0    2    0    0    0    0    0    0     2    0
6    2    0    0    0    0    0  378    0    2    0    0    0    0    0     0    0
7    5    5    2    0    2    0    0  369    0    0    0    0    0    0     0    0
8    5    0    2    0    0    0    0    0  377    0    0    0    0    0     0    0
9    0    0    2    0    4    2    0    2    0  376    0    0    0    0     0    0
+    0    0    0    0    1    0    0    1    0    0  925    3    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  756    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  934   17     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0    0
(    2   37    0    0    0    0    2    0    0    0    0    0    0    0  1429   16
)    0   10    0    0    0    0    0    2    0    0    0    0    0    2   502  971
result accuracy by length:
1 ( 2%) 99.00
3 ( 2%) 96.00
5 ( 2%) 89.92
7 ( 4%) 86.46
9 ( 4%) 81.41
11 ( 3%) 82.95
13 ( 4%) 70.83
15 ( 4%) 71.29
17 ( 4%) 68.93
19 ( 4%) 66.18
21 ( 4%) 63.64
23 ( 4%) 57.07
25 ( 4%) 53.00
27 ( 4%) 56.65
29 ( 3%) 59.69
31 ( 3%) 48.81
33 ( 2%) 54.29
35 ( 2%) 45.89
37 ( 2%) 44.44
39 ( 3%) 45.39
41 ( 3%) 47.65
43 ( 2%) 44.93
45 ( 2%) 40.18
47 ( 2%) 42.42
49 ( 2%) 35.21
51 ( 2%) 41.67
53 ( 2%) 50.00
55 ( 2%) 34.45
57 ( 2%) 35.66
59 ( 2%) 28.97
61 ( 1%) 42.19
63 ( 0%) 22.86
65 ( 0%) 33.33
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 55.68
) (91%) 55.68
* (87%) 54.48
+ (84%) 54.65
- (77%) 53.46
/ (76%) 54.30
0 (52%) 49.45
1 (60%) 51.47
2 (61%) 53.49
3 (62%) 53.64
4 (61%) 53.23
5 (62%) 53.42
6 (62%) 53.22
7 (63%) 53.41
8 (64%) 53.92
9 (63%) 54.60
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 54.00
1 (10%) 64.98
2 ( 4%) 66.16
3 ( 2%) 68.15
4 ( 2%) 60.90
5 ( 2%) 64.00
6 ( 2%) 67.83
7 ( 2%) 70.80
8 ( 2%) 63.25
9 ( 1%) 70.93
result accuracy by generalization:
1 (22.45%) 72.64
2 (22.96%) 65.16
3 (22.53%) 64.67
4 (15.82%) 42.97
5 (16.24%) 38.19
error cases:
3 1 [-1] [-1] 3 1
3-7 3-0 [1, -1, 1] [1, -1, 1] 0 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*9+7 4*9+2 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 43 38
1/1+0 1/(+0 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 1 None
4*(3+5) 7*(3+5) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 32 56
0*(7/8) 0*(7/8( [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 1
0*4+5 0*4+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 5 9
val (Perception Acc=93.01, Head Acc=100.00, Result Acc=58.84)
Epoch time: 1m 3s
------------------------------
Epoch 45/99 (max_len=11, data=4683)
Train acc: 96.07 (abduce 99.55)
Hit samples:  4662  Ave length:  5.32
Symbols:  16 [(0, 1217), (1, 1333), (2, 1288), (3, 1324), (4, 1287), (5, 1259), (6, 1271), (7, 1364), (8, 1253), (9, 1244), (10, 2196), (11, 2173), (12, 1844), (13, 1963), (14, 2503), (15, 1289)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 144), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 95.95 (abduce 99.79)
Hit samples:  4673  Ave length:  5.33
Symbols:  16 [(0, 1213), (1, 1340), (2, 1292), (3, 1326), (4, 1295), (5, 1265), (6, 1279), (7, 1373), (8, 1255), (9, 1249), (10, 2197), (11, 2194), (12, 1827), (13, 1993), (14, 2510), (15, 1301)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4673 samples for 100 iterations, 0.9505399654743265, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 46/99 (max_len=11, data=4683)
Train acc: 95.96 (abduce 99.51)
Hit samples:  4660  Ave length:  5.32
Symbols:  16 [(0, 1209), (1, 1336), (2, 1290), (3, 1324), (4, 1296), (5, 1257), (6, 1261), (7, 1368), (8, 1249), (9, 1244), (10, 2190), (11, 2175), (12, 1823), (13, 1985), (14, 2493), (15, 1298)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 95.93 (abduce 99.87)
Hit samples:  4677  Ave length:  5.33
Symbols:  16 [(0, 1218), (1, 1341), (2, 1292), (3, 1329), (4, 1296), (5, 1266), (6, 1280), (7, 1375), (8, 1257), (9, 1250), (10, 2201), (11, 2194), (12, 1836), (13, 1993), (14, 2507), (15, 1306)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4677 samples for 100 iterations, 0.9503628563409646, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 47/99 (max_len=11, data=4683)
Train acc: 95.91 (abduce 99.53)
Hit samples:  4661  Ave length:  5.32
Symbols:  16 [(0, 1212), (1, 1340), (2, 1284), (3, 1325), (4, 1294), (5, 1257), (6, 1271), (7, 1364), (8, 1249), (9, 1239), (10, 2187), (11, 2185), (12, 1844), (13, 1952), (14, 2491), (15, 1301)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.07 (abduce 99.89)
Hit samples:  4678  Ave length:  5.33
Symbols:  16 [(0, 1215), (1, 1341), (2, 1293), (3, 1330), (4, 1300), (5, 1268), (6, 1279), (7, 1374), (8, 1258), (9, 1250), (10, 2201), (11, 2196), (12, 1841), (13, 1989), (14, 2506), (15, 1311)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4678 samples for 100 iterations, 0.9507053542802181, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 48/99 (max_len=11, data=4683)
Train acc: 96.24 (abduce 99.59)
Hit samples:  4664  Ave length:  5.32
Symbols:  16 [(0, 1201), (1, 1336), (2, 1290), (3, 1327), (4, 1290), (5, 1260), (6, 1275), (7, 1376), (8, 1253), (9, 1242), (10, 2191), (11, 2186), (12, 1832), (13, 1973), (14, 2492), (15, 1298)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.40 (abduce 99.89)
Hit samples:  4678  Ave length:  5.33
Symbols:  16 [(0, 1215), (1, 1341), (2, 1292), (3, 1330), (4, 1298), (5, 1268), (6, 1280), (7, 1375), (8, 1258), (9, 1251), (10, 2201), (11, 2197), (12, 1840), (13, 1989), (14, 2505), (15, 1312)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4678 samples for 100 iterations, 0.9503446617505611, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 49/99 (max_len=11, data=4683)
Train acc: 96.57 (abduce 99.64)
Hit samples:  4666  Ave length:  5.33
Symbols:  16 [(0, 1198), (1, 1336), (2, 1290), (3, 1326), (4, 1299), (5, 1263), (6, 1275), (7, 1368), (8, 1257), (9, 1248), (10, 2194), (11, 2199), (12, 1851), (13, 1949), (14, 2497), (15, 1302)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 111), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.38 (abduce 99.89)
Hit samples:  4678  Ave length:  5.33
Symbols:  16 [(0, 1214), (1, 1341), (2, 1293), (3, 1330), (4, 1297), (5, 1267), (6, 1281), (7, 1376), (8, 1259), (9, 1250), (10, 2201), (11, 2200), (12, 1840), (13, 1986), (14, 2505), (15, 1312)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4678 samples for 100 iterations, 0.9502244309073421, 3 epochs, take 32 sec.
              precision    recall  f1-score   support

           0       0.96      1.00      0.98      4016
           1       0.84      0.94      0.89      5142
           2       0.97      0.98      0.97      5321
           3       1.00      0.98      0.99      5241
           4       0.97      0.95      0.96      5279
           5       0.99      0.98      0.99      5383
           6       0.99      0.99      0.99      5427
           7       0.96      0.97      0.97      5462
           8       0.99      0.99      0.99      5453
           9       1.00      0.97      0.98      5476
           +       1.00      0.99      1.00     13199
           -       0.99      1.00      1.00     10734
           *       1.00      0.98      0.99     13491
           /       0.97      1.00      0.99      9876
           (       0.74      0.96      0.84     21081
           )       0.98      0.66      0.79     21081

    accuracy                           0.93    141662
   macro avg       0.96      0.96      0.96    141662
weighted avg       0.94      0.93      0.93    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  339    0    0    0    0    0    0    0    0    0    0    0    0     9    8
2    0    1  368    0    0    0    0    1    0    0    0    0    0    0     0    0
3    1    2    0  361    0    0    0    0    1    0    0    0    0    0     0    0
4    0    4    2    0  355    0    1    6    0    0    0    1    0    0     0    0
5    2    0    0    0    0  373    0    2    0    0    0    0    0    0     2    0
6    0    0    0    0    2    0  378    0    2    0    0    0    0    0     0    0
7    2    5    2    0    0    0    0  374    0    0    0    0    0    0     0    0
8    2    0    2    0    0    0    0    0  379    0    0    0    0    0     0    0
9    0    0    2    0    4    2    0    2    0  373    0    0    0    0     0    2
+    0    0    0    0    1    0    0    0    0    0  926    2    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  756    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  934   17     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0    0
(    2   37    0    0    0    0    2    0    0    0    0    0    0    0  1434   12
)    0   12    0    0    0    0    0    2    0    0    0    0    0    2   493  977
result accuracy by length:
1 ( 2%) 99.00
3 ( 2%) 95.00
5 ( 2%) 89.92
7 ( 4%) 86.90
9 ( 4%) 80.40
11 ( 3%) 81.25
13 ( 4%) 72.22
15 ( 4%) 72.28
17 ( 4%) 70.87
19 ( 4%) 65.20
21 ( 4%) 65.66
23 ( 4%) 56.59
25 ( 4%) 55.00
27 ( 4%) 55.17
29 ( 3%) 60.73
31 ( 3%) 48.21
33 ( 2%) 54.29
35 ( 2%) 47.26
37 ( 2%) 45.30
39 ( 3%) 44.74
41 ( 3%) 47.65
43 ( 2%) 47.10
45 ( 2%) 38.39
47 ( 2%) 40.91
49 ( 2%) 32.39
51 ( 2%) 42.42
53 ( 2%) 43.28
55 ( 2%) 33.61
57 ( 2%) 36.36
59 ( 2%) 29.91
61 ( 1%) 40.62
63 ( 0%) 22.86
65 ( 0%) 33.33
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 55.62
) (91%) 55.62
* (87%) 54.31
+ (84%) 54.75
- (77%) 53.60
/ (76%) 54.06
0 (52%) 48.95
1 (60%) 51.64
2 (61%) 53.49
3 (62%) 53.70
4 (61%) 53.13
5 (62%) 53.55
6 (62%) 52.86
7 (63%) 53.28
8 (64%) 53.76
9 (63%) 54.21
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 53.52
1 (10%) 62.92
2 ( 4%) 65.66
3 ( 2%) 68.15
4 ( 2%) 63.16
5 ( 2%) 63.00
6 ( 2%) 68.70
7 ( 2%) 71.68
8 ( 2%) 63.25
9 ( 1%) 70.93
result accuracy by generalization:
1 (22.45%) 73.36
2 (22.96%) 64.71
3 (22.53%) 65.31
4 (15.82%) 42.45
5 (16.24%) 36.93
error cases:
3 1 [-1] [-1] 3 1
3-7 3-0 [1, -1, 1] [1, -1, 1] 0 3
6+9 6+) [1, -1, 1] [1, -1, 1] 15 None
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*9+7 4*9+2 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 43 38
1/1+0 1/(+0 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 1 None
4*(3+5) 7*(3+5) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 32 56
0*(7/8) 0*(7/8( [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 1
val (Perception Acc=93.16, Head Acc=100.00, Result Acc=58.76)
Epoch time: 0m 57s
------------------------------
Epoch 50/99 (max_len=11, data=4683)
Train acc: 96.16 (abduce 99.64)
Hit samples:  4666  Ave length:  5.33
Symbols:  16 [(0, 1198), (1, 1335), (2, 1291), (3, 1323), (4, 1289), (5, 1259), (6, 1283), (7, 1373), (8, 1259), (9, 1249), (10, 2193), (11, 2185), (12, 1859), (13, 1954), (14, 2499), (15, 1303)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 95.86 (abduce 99.89)
Hit samples:  4678  Ave length:  5.33
Symbols:  16 [(0, 1213), (1, 1342), (2, 1292), (3, 1330), (4, 1298), (5, 1267), (6, 1281), (7, 1375), (8, 1258), (9, 1252), (10, 2201), (11, 2203), (12, 1831), (13, 1992), (14, 2505), (15, 1312)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4678 samples for 100 iterations, 0.9503045848028214, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 51/99 (max_len=11, data=4683)
Train acc: 96.40 (abduce 99.59)
Hit samples:  4664  Ave length:  5.32
Symbols:  16 [(0, 1198), (1, 1333), (2, 1288), (3, 1328), (4, 1293), (5, 1257), (6, 1276), (7, 1364), (8, 1259), (9, 1252), (10, 2194), (11, 2191), (12, 1838), (13, 1959), (14, 2495), (15, 1299)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.76 (abduce 99.89)
Hit samples:  4678  Ave length:  5.33
Symbols:  16 [(0, 1212), (1, 1343), (2, 1292), (3, 1330), (4, 1298), (5, 1266), (6, 1282), (7, 1375), (8, 1258), (9, 1252), (10, 2201), (11, 2199), (12, 1833), (13, 1994), (14, 2505), (15, 1312)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4678 samples for 100 iterations, 0.9506652773324784, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 52/99 (max_len=11, data=4683)
Train acc: 96.56 (abduce 99.62)
Hit samples:  4665  Ave length:  5.32
Symbols:  16 [(0, 1202), (1, 1337), (2, 1290), (3, 1326), (4, 1290), (5, 1259), (6, 1271), (7, 1369), (8, 1259), (9, 1252), (10, 2195), (11, 2184), (12, 1841), (13, 1968), (14, 2493), (15, 1305)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 103)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.39 (abduce 99.89)
Hit samples:  4678  Ave length:  5.33
Symbols:  16 [(0, 1212), (1, 1342), (2, 1293), (3, 1330), (4, 1299), (5, 1267), (6, 1281), (7, 1374), (8, 1258), (9, 1252), (10, 2201), (11, 2201), (12, 1828), (13, 1997), (14, 2505), (15, 1312)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4678 samples for 100 iterations, 0.9504648925937801, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 53/99 (max_len=11, data=4683)
Train acc: 96.62 (abduce 99.68)
Hit samples:  4668  Ave length:  5.33
Symbols:  16 [(0, 1203), (1, 1334), (2, 1290), (3, 1327), (4, 1295), (5, 1262), (6, 1271), (7, 1375), (8, 1260), (9, 1248), (10, 2195), (11, 2191), (12, 1816), (13, 1992), (14, 2495), (15, 1304)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.98
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.31 (abduce 99.85)
Hit samples:  4676  Ave length:  5.33
Symbols:  16 [(0, 1212), (1, 1341), (2, 1292), (3, 1329), (4, 1298), (5, 1264), (6, 1280), (7, 1376), (8, 1257), (9, 1251), (10, 2200), (11, 2200), (12, 1827), (13, 1995), (14, 2504), (15, 1310)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4676 samples for 100 iterations, 0.9504732114212384, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 54/99 (max_len=11, data=4683)
Train acc: 96.41 (abduce 99.72)
Hit samples:  4670  Ave length:  5.33
Symbols:  16 [(0, 1205), (1, 1333), (2, 1290), (3, 1328), (4, 1299), (5, 1265), (6, 1279), (7, 1374), (8, 1258), (9, 1244), (10, 2196), (11, 2187), (12, 1823), (13, 1997), (14, 2499), (15, 1305)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.55 (abduce 99.87)
Hit samples:  4677  Ave length:  5.33
Symbols:  16 [(0, 1214), (1, 1342), (2, 1292), (3, 1330), (4, 1298), (5, 1267), (6, 1279), (7, 1373), (8, 1258), (9, 1250), (10, 2199), (11, 2199), (12, 1829), (13, 1996), (14, 2504), (15, 1311)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4677 samples for 100 iterations, 0.9504029509642757, 3 epochs, take 32 sec.
              precision    recall  f1-score   support

           0       0.94      1.00      0.97      4016
           1       0.87      0.93      0.90      5142
           2       0.97      0.98      0.98      5321
           3       1.00      0.98      0.99      5241
           4       0.98      0.97      0.97      5279
           5       0.99      0.98      0.99      5383
           6       0.99      0.99      0.99      5427
           7       0.96      0.99      0.98      5462
           8       0.99      0.97      0.98      5453
           9       1.00      0.97      0.98      5476
           +       1.00      1.00      1.00     13199
           -       0.99      1.00      0.99     10734
           *       1.00      0.98      0.99     13491
           /       0.97      1.00      0.99      9876
           (       0.74      0.96      0.84     21081
           )       0.98      0.66      0.79     21081

    accuracy                           0.93    141662
   macro avg       0.96      0.96      0.96    141662
weighted avg       0.94      0.93      0.93    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  338    0    0    0    0    0    0    0    0    0    0    0    0    10   10
2    0    0  368    0    0    0    0    1    0    0    0    0    0    0     0    0
3    1    2    0  361    0    0    0    0    1    0    0    0    0    0     0    0
4    0    0    2    0  360    0    0    5    0    0    0    1    0    0     0    0
5    2    0    0    0    0  373    0    2    0    0    0    0    0    0     2    0
6    0    0    0    0    2    0  378    0    2    0    0    0    0    0     0    0
7    2    0    2    0    0    0    0  380    0    0    0    0    0    0     0    0
8    7    0    2    0    0    0    0    0  374    0    0    0    0    0     0    0
9    0    0    2    0    4    2    0    2    0  376    0    0    0    0     0    0
+    0    0    0    0    0    0    0    0    0    0  927    2    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  755    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  934   17     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0    0
(    2   35    0    0    0    0    2    0    0    0    0    0    0    0  1434   14
)    0   12    0    0    0    0    0    2    0    0    0    0    0    2   483  988
result accuracy by length:
1 ( 2%) 99.00
3 ( 2%) 96.00
5 ( 2%) 90.70
7 ( 4%) 87.77
9 ( 4%) 80.90
11 ( 3%) 80.68
13 ( 4%) 72.22
15 ( 4%) 71.78
17 ( 4%) 71.36
19 ( 4%) 65.69
21 ( 4%) 65.15
23 ( 4%) 57.56
25 ( 4%) 55.00
27 ( 4%) 56.16
29 ( 3%) 59.16
31 ( 3%) 48.81
33 ( 2%) 55.71
35 ( 2%) 47.26
37 ( 2%) 46.15
39 ( 3%) 46.05
41 ( 3%) 48.99
43 ( 2%) 46.38
45 ( 2%) 39.29
47 ( 2%) 42.42
49 ( 2%) 35.92
51 ( 2%) 43.18
53 ( 2%) 43.28
55 ( 2%) 34.45
57 ( 2%) 36.36
59 ( 2%) 34.58
61 ( 1%) 40.62
63 ( 0%) 22.86
65 ( 0%) 33.33
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 56.13
) (91%) 56.13
* (87%) 54.89
+ (84%) 55.40
- (77%) 53.88
/ (76%) 54.59
0 (52%) 50.00
1 (60%) 52.14
2 (61%) 54.15
3 (62%) 54.30
4 (61%) 53.80
5 (62%) 54.07
6 (62%) 53.45
7 (63%) 53.99
8 (64%) 54.27
9 (63%) 55.01
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 53.05
1 (10%) 63.86
2 ( 4%) 67.17
3 ( 2%) 68.15
4 ( 2%) 64.66
5 ( 2%) 67.00
6 ( 2%) 70.43
7 ( 2%) 72.57
8 ( 2%) 63.25
9 ( 1%) 69.77
result accuracy by generalization:
1 (22.45%) 73.64
2 (22.96%) 65.33
3 (22.53%) 65.22
4 (15.82%) 43.23
5 (16.24%) 38.44
error cases:
3 1 [-1] [-1] 3 1
3-7 3-0 [1, -1, 1] [1, -1, 1] 0 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*9+7 4*9+2 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 43 38
1/1+0 1/(+0 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 1 None
4*(3+5) 7*(3+5) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 32 56
0*(7/8) 0*(7/8( [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 1
0*4+5 0*4+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 5 9
val (Perception Acc=93.32, Head Acc=100.00, Result Acc=59.31)
Epoch time: 0m 56s
------------------------------
Epoch 55/99 (max_len=11, data=4683)
Train acc: 96.19 (abduce 99.57)
Hit samples:  4663  Ave length:  5.32
Symbols:  16 [(0, 1207), (1, 1332), (2, 1292), (3, 1322), (4, 1291), (5, 1258), (6, 1273), (7, 1370), (8, 1248), (9, 1251), (10, 2191), (11, 2192), (12, 1832), (13, 1965), (14, 2496), (15, 1303)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 111), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.54 (abduce 99.89)
Hit samples:  4678  Ave length:  5.33
Symbols:  16 [(0, 1216), (1, 1344), (2, 1292), (3, 1330), (4, 1298), (5, 1266), (6, 1278), (7, 1377), (8, 1256), (9, 1251), (10, 2201), (11, 2204), (12, 1831), (13, 1991), (14, 2505), (15, 1312)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4678 samples for 100 iterations, 0.9501442770118628, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 56/99 (max_len=11, data=4683)
Train acc: 96.23 (abduce 99.57)
Hit samples:  4663  Ave length:  5.32
Symbols:  16 [(0, 1198), (1, 1337), (2, 1287), (3, 1325), (4, 1291), (5, 1258), (6, 1277), (7, 1376), (8, 1254), (9, 1246), (10, 2189), (11, 2190), (12, 1830), (13, 1974), (14, 2493), (15, 1302)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 360), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.61 (abduce 99.87)
Hit samples:  4677  Ave length:  5.33
Symbols:  16 [(0, 1213), (1, 1343), (2, 1292), (3, 1330), (4, 1301), (5, 1267), (6, 1279), (7, 1371), (8, 1256), (9, 1251), (10, 2199), (11, 2198), (12, 1835), (13, 1991), (14, 2504), (15, 1311)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4677 samples for 100 iterations, 0.9504029509642757, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 57/99 (max_len=11, data=4683)
Train acc: 96.57 (abduce 99.70)
Hit samples:  4669  Ave length:  5.33
Symbols:  16 [(0, 1213), (1, 1338), (2, 1294), (3, 1323), (4, 1300), (5, 1261), (6, 1276), (7, 1360), (8, 1256), (9, 1251), (10, 2193), (11, 2200), (12, 1840), (13, 1963), (14, 2498), (15, 1305)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.59 (abduce 99.89)
Hit samples:  4678  Ave length:  5.33
Symbols:  16 [(0, 1214), (1, 1345), (2, 1292), (3, 1330), (4, 1299), (5, 1266), (6, 1279), (7, 1375), (8, 1256), (9, 1252), (10, 2201), (11, 2198), (12, 1831), (13, 1997), (14, 2505), (15, 1312)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4678 samples for 100 iterations, 0.9501442770118628, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 58/99 (max_len=11, data=4683)
Train acc: 96.65 (abduce 99.74)
Hit samples:  4671  Ave length:  5.33
Symbols:  16 [(0, 1196), (1, 1335), (2, 1290), (3, 1331), (4, 1298), (5, 1264), (6, 1279), (7, 1374), (8, 1263), (9, 1248), (10, 2199), (11, 2190), (12, 1818), (13, 1999), (14, 2502), (15, 1307)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.19 (abduce 99.87)
Hit samples:  4677  Ave length:  5.33
Symbols:  16 [(0, 1215), (1, 1345), (2, 1292), (3, 1330), (4, 1299), (5, 1267), (6, 1279), (7, 1371), (8, 1255), (9, 1250), (10, 2198), (11, 2197), (12, 1824), (13, 2004), (14, 2504), (15, 1311)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4677 samples for 100 iterations, 0.9501222886010986, 3 epochs, take 32 sec.
Epoch time: 0m 39s
------------------------------
Epoch 59/99 (max_len=11, data=4683)
Train acc: 96.06 (abduce 99.64)
Hit samples:  4666  Ave length:  5.32
Symbols:  16 [(0, 1205), (1, 1343), (2, 1289), (3, 1325), (4, 1294), (5, 1257), (6, 1277), (7, 1372), (8, 1253), (9, 1242), (10, 2194), (11, 2180), (12, 1828), (13, 1986), (14, 2494), (15, 1301)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 96.43 (abduce 99.87)
Hit samples:  4677  Ave length:  5.33
Symbols:  16 [(0, 1215), (1, 1344), (2, 1291), (3, 1330), (4, 1301), (5, 1267), (6, 1276), (7, 1374), (8, 1256), (9, 1249), (10, 2199), (11, 2196), (12, 1826), (13, 2002), (14, 2504), (15, 1311)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 4677 samples for 100 iterations, 0.9502024778477206, 3 epochs, take 32 sec.
              precision    recall  f1-score   support

           0       0.96      1.00      0.98      4016
           1       0.84      0.94      0.88      5142
           2       0.97      0.98      0.98      5321
           3       1.00      0.98      0.99      5241
           4       0.97      0.97      0.97      5279
           5       0.99      0.98      0.99      5383
           6       0.99      0.99      0.99      5427
           7       0.97      0.99      0.98      5462
           8       0.99      0.99      0.99      5453
           9       1.00      0.97      0.98      5476
           +       1.00      1.00      1.00     13199
           -       0.99      1.00      1.00     10734
           *       1.00      0.98      0.99     13491
           /       0.97      1.00      0.99      9876
           (       0.74      0.96      0.84     21081
           )       0.98      0.66      0.79     21081

    accuracy                           0.93    141662
   macro avg       0.96      0.96      0.96    141662
weighted avg       0.94      0.93      0.93    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    0  340    0    0    0    0    0    0    0    0    0    0    0    0     9    7
2    0    0  368    0    0    0    0    1    0    0    0    0    0    0     0    0
3    1    2    0  361    0    0    0    0    1    0    0    0    0    0     0    0
4    0    0    2    0  360    0    0    5    0    0    0    1    0    0     0    0
5    2    0    0    0    2  373    0    0    0    0    0    0    0    0     2    0
6    0    0    0    0    2    0  378    0    2    0    0    0    0    0     0    0
7    2    0    2    0    0    0    0  380    0    0    0    0    0    0     0    0
8    2    0    2    0    0    0    0    0  379    0    0    0    0    0     0    0
9    0    0    2    0    4    2    0    2    0  373    0    0    0    0     0    2
+    0    0    0    0    0    0    0    0    0    0  927    2    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  755    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  934   17     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0    0
(    2   43    0    0    0    0    2    0    0    0    0    0    0    0  1427   12
)    0   18    0    0    0    0    0    2    0    0    0    0    0    2   487  977
result accuracy by length:
1 ( 2%) 99.00
3 ( 2%) 95.00
5 ( 2%) 90.70
7 ( 4%) 86.03
9 ( 4%) 80.90
11 ( 3%) 81.82
13 ( 4%) 73.15
15 ( 4%) 71.78
17 ( 4%) 70.39
19 ( 4%) 62.75
21 ( 4%) 64.65
23 ( 4%) 56.10
25 ( 4%) 53.00
27 ( 4%) 54.68
29 ( 3%) 59.16
31 ( 3%) 47.62
33 ( 2%) 54.29
35 ( 2%) 45.21
37 ( 2%) 44.44
39 ( 3%) 42.76
41 ( 3%) 46.98
43 ( 2%) 46.38
45 ( 2%) 38.39
47 ( 2%) 41.67
49 ( 2%) 31.69
51 ( 2%) 37.12
53 ( 2%) 41.79
55 ( 2%) 32.77
57 ( 2%) 31.47
59 ( 2%) 31.78
61 ( 1%) 37.50
63 ( 0%) 22.86
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 54.61
) (91%) 54.61
* (87%) 53.43
+ (84%) 53.81
- (77%) 52.57
/ (76%) 52.94
0 (52%) 47.77
1 (60%) 50.64
2 (61%) 52.26
3 (62%) 52.52
4 (61%) 51.67
5 (62%) 52.31
6 (62%) 51.75
7 (63%) 52.44
8 (64%) 52.48
9 (63%) 53.38
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 52.29
1 (10%) 61.24
2 ( 4%) 64.14
3 ( 2%) 68.15
4 ( 2%) 60.90
5 ( 2%) 63.00
6 ( 2%) 67.83
7 ( 2%) 70.80
8 ( 2%) 64.10
9 ( 1%) 70.93
result accuracy by generalization:
1 (22.45%) 72.91
2 (22.96%) 64.00
3 (22.53%) 64.67
4 (15.82%) 39.87
5 (16.24%) 36.56
error cases:
3 1 [-1] [-1] 3 1
3-7 3-0 [1, -1, 1] [1, -1, 1] 0 3
6+9 6+) [1, -1, 1] [1, -1, 1] 15 None
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*9+7 4*9+2 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 43 38
1/1+0 1/(+0 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 1 None
5/(6-0) 5/(6-01 [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 1 None
4*(3+5) 7*(3+5) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 32 56
val (Perception Acc=93.22, Head Acc=100.00, Result Acc=57.88)
Epoch time: 0m 55s
------------------------------
Epoch 60/99 (max_len=15, data=6058)
Train acc: 90.64 (abduce 97.01)
Hit samples:  5877  Ave length:  7.11
Symbols:  16 [(0, 1799), (1, 2013), (2, 2041), (3, 2081), (4, 1976), (5, 1977), (6, 1960), (7, 2092), (8, 1940), (9, 1930), (10, 3700), (11, 3738), (12, 3061), (13, 3426), (14, 5287), (15, 2766)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 90.37 (abduce 99.37)
Hit samples:  6020  Ave length:  7.27
Symbols:  16 [(0, 1905), (1, 2109), (2, 2125), (3, 2155), (4, 2065), (5, 2043), (6, 2033), (7, 2164), (8, 2007), (9, 2012), (10, 3889), (11, 3913), (12, 3214), (13, 3578), (14, 5581), (15, 2965)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6020 samples for 100 iterations, 0.9456099456099456, 2 epochs, take 37 sec.
Epoch time: 0m 53s
------------------------------
Epoch 61/99 (max_len=15, data=6058)
Train acc: 91.09 (abduce 97.89)
Hit samples:  5930  Ave length:  7.2
Symbols:  16 [(0, 1862), (1, 2093), (2, 2074), (3, 2110), (4, 2008), (5, 2001), (6, 1954), (7, 2106), (8, 1974), (9, 1992), (10, 3790), (11, 3826), (12, 3195), (13, 3426), (14, 5427), (15, 2872)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 361), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 375), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 140), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 112), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 102)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 91.48 (abduce 99.54)
Hit samples:  6030  Ave length:  7.28
Symbols:  16 [(0, 1926), (1, 2126), (2, 2117), (3, 2155), (4, 2074), (5, 2048), (6, 2027), (7, 2172), (8, 2010), (9, 2020), (10, 3891), (11, 3931), (12, 3248), (13, 3571), (14, 5597), (15, 2993)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6030 samples for 100 iterations, 0.9456794060037352, 2 epochs, take 37 sec.
Epoch time: 0m 50s
------------------------------
Epoch 62/99 (max_len=15, data=6058)
Train acc: 92.74 (abduce 98.55)
Hit samples:  5970  Ave length:  7.23
Symbols:  16 [(0, 1910), (1, 2075), (2, 2077), (3, 2117), (4, 2043), (5, 2005), (6, 1994), (7, 2151), (8, 1995), (9, 2001), (10, 3824), (11, 3852), (12, 3216), (13, 3500), (14, 5505), (15, 2925)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 103)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 92.17 (abduce 99.55)
Hit samples:  6031  Ave length:  7.28
Symbols:  16 [(0, 1933), (1, 2120), (2, 2116), (3, 2153), (4, 2075), (5, 2044), (6, 2029), (7, 2165), (8, 2012), (9, 2031), (10, 3894), (11, 3927), (12, 3237), (13, 3585), (14, 5600), (15, 2992)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6031 samples for 100 iterations, 0.9452781636417462, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 63/99 (max_len=15, data=6058)
Train acc: 92.83 (abduce 98.81)
Hit samples:  5986  Ave length:  7.25
Symbols:  16 [(0, 1918), (1, 2093), (2, 2094), (3, 2125), (4, 2059), (5, 2028), (6, 1991), (7, 2136), (8, 1999), (9, 2010), (10, 3836), (11, 3898), (12, 3210), (13, 3516), (14, 5530), (15, 2949)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 144), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 112), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 103)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 92.82 (abduce 99.49)
Hit samples:  6027  Ave length:  7.28
Symbols:  16 [(0, 1933), (1, 2123), (2, 2114), (3, 2144), (4, 2068), (5, 2049), (6, 2026), (7, 2166), (8, 2011), (9, 2024), (10, 3886), (11, 3939), (12, 3221), (13, 3581), (14, 5593), (15, 2993)]
Head:  [((-1,), 1000), ((1, -1, 1), 1168), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6027 samples for 100 iterations, 0.9454765106790363, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 64/99 (max_len=15, data=6058)
Train acc: 93.03 (abduce 98.91)
Hit samples:  5992  Ave length:  7.25
Symbols:  16 [(0, 1912), (1, 2089), (2, 2087), (3, 2122), (4, 2054), (5, 2036), (6, 2022), (7, 2153), (8, 2008), (9, 2002), (10, 3848), (11, 3900), (12, 3228), (13, 3510), (14, 5543), (15, 2954)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.21 (abduce 99.67)
Hit samples:  6038  Ave length:  7.29
Symbols:  16 [(0, 1936), (1, 2133), (2, 2119), (3, 2153), (4, 2072), (5, 2049), (6, 2040), (7, 2168), (8, 2022), (9, 2025), (10, 3902), (11, 3937), (12, 3242), (13, 3594), (14, 5609), (15, 3013)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6038 samples for 100 iterations, 0.9454491752624165, 2 epochs, take 37 sec.
              precision    recall  f1-score   support

           0       0.94      1.00      0.97      4016
           1       0.87      0.94      0.90      5142
           2       0.98      0.98      0.98      5321
           3       1.00      0.97      0.99      5241
           4       0.97      0.95      0.96      5279
           5       0.99      0.99      0.99      5383
           6       0.99      0.98      0.98      5427
           7       0.98      0.99      0.98      5462
           8       0.99      0.98      0.98      5453
           9       0.99      0.97      0.98      5476
           +       1.00      1.00      1.00     13199
           -       0.99      1.00      1.00     10734
           *       1.00      0.99      0.99     13491
           /       0.98      1.00      0.99      9876
           (       0.74      0.97      0.84     21081
           )       0.97      0.65      0.78     21081

    accuracy                           0.93    141662
   macro avg       0.96      0.96      0.96    141662
weighted avg       0.94      0.93      0.93    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    1  340    0    0    0    0    0    0    0    0    0    0    0    0    10    7
2    0    2  368    0    0    0    0    0    0    0    0    0    0    0     0    0
3    1    2    0  360    0    1    1    0    1    0    0    0    0    0     0    0
4    0    4    2    0  355    0    0    4    0    2    0    1    0    0     0    0
5    0    0    0    0    2  377    0    0    0    0    0    0    0    0     0    0
6    0    2    0    0    2    0  375    0    2    0    0    0    0    0     0    0
7    2    0    2    0    0    0    0  380    0    0    0    0    0    0     0    0
8    5    0    2    0    0    0    0    0  377    0    0    0    0    0     0    0
9    2    0    0    0    4    2    0    2    0  376    0    0    0    0     0    0
+    0    0    0    0    0    0    0    0    0    0  928    2    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  756    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  940   11     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0    0
(    2   27    0    0    0    0    2    0    0    0    0    0    0    0  1436   20
)    0   14    0    0    0    0    0    2    0    0    0    0    0    0   497  973
result accuracy by length:
1 ( 2%) 99.00
3 ( 2%) 94.00
5 ( 2%) 92.25
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 80.11
13 ( 4%) 74.07
15 ( 4%) 73.76
17 ( 4%) 77.18
19 ( 4%) 65.69
21 ( 4%) 67.68
23 ( 4%) 60.00
25 ( 4%) 59.50
27 ( 4%) 57.14
29 ( 3%) 62.30
31 ( 3%) 52.38
33 ( 2%) 55.00
35 ( 2%) 52.05
37 ( 2%) 47.01
39 ( 3%) 48.68
41 ( 3%) 51.01
43 ( 2%) 54.35
45 ( 2%) 43.75
47 ( 2%) 41.67
49 ( 2%) 37.32
51 ( 2%) 50.00
53 ( 2%) 47.01
55 ( 2%) 36.97
57 ( 2%) 35.66
59 ( 2%) 41.12
61 ( 1%) 46.88
63 ( 0%) 22.86
65 ( 0%) 33.33
67 ( 0%) 66.67
result accuracy by symbol:
( (91%) 58.74
) (91%) 58.74
* (87%) 57.59
+ (84%) 57.95
- (77%) 56.67
/ (76%) 57.44
0 (52%) 52.15
1 (60%) 54.59
2 (61%) 56.25
3 (62%) 57.08
4 (61%) 56.45
5 (62%) 57.06
6 (62%) 56.32
7 (63%) 56.99
8 (64%) 57.13
9 (63%) 57.44
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 55.05
1 (10%) 67.42
2 ( 4%) 70.20
3 ( 2%) 69.63
4 ( 2%) 66.92
5 ( 2%) 65.00
6 ( 2%) 68.70
7 ( 2%) 65.49
8 ( 2%) 67.52
9 ( 1%) 75.58
result accuracy by generalization:
1 (22.45%) 75.09
2 (22.96%) 66.13
3 (22.53%) 68.75
4 (15.82%) 46.32
5 (16.24%) 41.96
error cases:
3 1 [-1] [-1] 3 1
3-7 6-0 [1, -1, 1] [1, -1, 1] 0 6
6+9 6+0 [1, -1, 1] [1, -1, 1] 15 6
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*5 1*5 [1, -1, 1] [1, -1, 1] 20 5
4*9+7 4*9+2 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 43 38
4*(3+5) 7*(3+5) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 32 56
0*(7/8) 0*(7/8( [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 1
val (Perception Acc=93.29, Head Acc=100.00, Result Acc=61.67)
Epoch time: 1m 10s
------------------------------
Epoch 65/99 (max_len=15, data=6058)
Train acc: 92.74 (abduce 98.83)
Hit samples:  5987  Ave length:  7.25
Symbols:  16 [(0, 1909), (1, 2100), (2, 2089), (3, 2135), (4, 2053), (5, 2019), (6, 2007), (7, 2142), (8, 2007), (9, 1996), (10, 3848), (11, 3903), (12, 3213), (13, 3501), (14, 5527), (15, 2960)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 111), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.37 (abduce 99.67)
Hit samples:  6038  Ave length:  7.29
Symbols:  16 [(0, 1932), (1, 2131), (2, 2119), (3, 2156), (4, 2075), (5, 2051), (6, 2042), (7, 2169), (8, 2019), (9, 2026), (10, 3900), (11, 3943), (12, 3248), (13, 3587), (14, 5610), (15, 3012)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6038 samples for 100 iterations, 0.9452975920036347, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 66/99 (max_len=15, data=6058)
Train acc: 93.01 (abduce 98.96)
Hit samples:  5995  Ave length:  7.26
Symbols:  16 [(0, 1920), (1, 2097), (2, 2100), (3, 2130), (4, 2053), (5, 2018), (6, 2023), (7, 2140), (8, 2016), (9, 2013), (10, 3858), (11, 3888), (12, 3276), (13, 3490), (14, 5559), (15, 2964)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 112), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.11 (abduce 99.70)
Hit samples:  6040  Ave length:  7.29
Symbols:  16 [(0, 1926), (1, 2128), (2, 2121), (3, 2157), (4, 2070), (5, 2050), (6, 2042), (7, 2177), (8, 2023), (9, 2035), (10, 3899), (11, 3948), (12, 3261), (13, 3578), (14, 5617), (15, 3014)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6040 samples for 100 iterations, 0.9454888071561549, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 67/99 (max_len=15, data=6058)
Train acc: 92.48 (abduce 98.78)
Hit samples:  5984  Ave length:  7.25
Symbols:  16 [(0, 1909), (1, 2088), (2, 2094), (3, 2128), (4, 2052), (5, 2013), (6, 2015), (7, 2134), (8, 2004), (9, 2001), (10, 3846), (11, 3890), (12, 3206), (13, 3506), (14, 5535), (15, 2955)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 103)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.42 (abduce 99.67)
Hit samples:  6038  Ave length:  7.29
Symbols:  16 [(0, 1927), (1, 2124), (2, 2122), (3, 2154), (4, 2066), (5, 2053), (6, 2040), (7, 2178), (8, 2021), (9, 2030), (10, 3900), (11, 3944), (12, 3246), (13, 3583), (14, 5611), (15, 3013)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6038 samples for 100 iterations, 0.9454694174316096, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 68/99 (max_len=15, data=6058)
Train acc: 93.60 (abduce 99.08)
Hit samples:  6002  Ave length:  7.26
Symbols:  16 [(0, 1929), (1, 2104), (2, 2104), (3, 2136), (4, 2047), (5, 2024), (6, 2016), (7, 2153), (8, 2010), (9, 2015), (10, 3863), (11, 3897), (12, 3272), (13, 3502), (14, 5549), (15, 2973)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 103)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.10 (abduce 99.69)
Hit samples:  6039  Ave length:  7.29
Symbols:  16 [(0, 1943), (1, 2123), (2, 2124), (3, 2156), (4, 2070), (5, 2046), (6, 2044), (7, 2170), (8, 2019), (9, 2030), (10, 3901), (11, 3947), (12, 3249), (13, 3585), (14, 5614), (15, 3012)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6039 samples for 100 iterations, 0.9453818726863943, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 69/99 (max_len=15, data=6058)
Train acc: 93.30 (abduce 98.98)
Hit samples:  5996  Ave length:  7.26
Symbols:  16 [(0, 1930), (1, 2082), (2, 2102), (3, 2140), (4, 2049), (5, 2023), (6, 2040), (7, 2140), (8, 1993), (9, 2012), (10, 3860), (11, 3896), (12, 3256), (13, 3501), (14, 5546), (15, 2972)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 102)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.40 (abduce 99.65)
Hit samples:  6037  Ave length:  7.29
Symbols:  16 [(0, 1937), (1, 2120), (2, 2123), (3, 2157), (4, 2066), (5, 2044), (6, 2046), (7, 2177), (8, 2018), (9, 2033), (10, 3904), (11, 3954), (12, 3231), (13, 3591), (14, 5612), (15, 3006)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6037 samples for 100 iterations, 0.9453190667666235, 2 epochs, take 37 sec.
              precision    recall  f1-score   support

           0       0.92      1.00      0.96      4016
           1       0.87      0.94      0.90      5142
           2       0.98      0.98      0.98      5321
           3       1.00      0.97      0.98      5241
           4       0.96      0.96      0.96      5279
           5       0.99      0.99      0.99      5383
           6       0.99      0.99      0.99      5427
           7       0.97      0.99      0.98      5462
           8       0.99      0.97      0.98      5453
           9       0.99      0.97      0.98      5476
           +       1.00      1.00      1.00     13199
           -       0.99      1.00      1.00     10734
           *       1.00      0.99      0.99     13491
           /       0.98      1.00      0.99      9876
           (       0.74      0.96      0.84     21081
           )       0.97      0.66      0.79     21081

    accuracy                           0.93    141662
   macro avg       0.96      0.96      0.96    141662
weighted avg       0.94      0.93      0.93    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    1  342    1    0    0    0    0    0    0    0    0    0    0    0     8    6
2    0    2  368    0    0    0    0    0    0    0    0    0    0    0     0    0
3    3    2    0  359    0    1    1    0    1    0    0    0    0    0     0    0
4    0    2    2    0  358    0    0    3    0    2    0    1    0    0     0    0
5    2    0    0    0    0  375    0    2    0    0    0    0    0    0     0    0
6    0    0    0    0    2    0  378    0    2    0    0    0    0    0     0    0
7    2    0    2    0    0    0    0  380    0    0    0    0    0    0     0    0
8    7    0    2    0    0    0    0    0  374    0    0    0    0    0     0    0
9    2    0    0    0    6    2    0    2    0  373    0    0    0    0     0    0
+    0    0    0    0    0    0    0    0    0    0  928    2    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  756    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  940   11     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0    0
(    2   33    0    0    4    0    0    0    0    0    0    0    0    0  1423   24
)    0   10    0    0    0    0    0    2    0    0    0    0    0    2   485  988
result accuracy by length:
1 ( 2%) 98.00
3 ( 2%) 93.00
5 ( 2%) 93.02
7 ( 4%) 88.65
9 ( 4%) 80.90
11 ( 3%) 80.11
13 ( 4%) 74.54
15 ( 4%) 72.77
17 ( 4%) 74.27
19 ( 4%) 65.20
21 ( 4%) 68.18
23 ( 4%) 57.07
25 ( 4%) 54.50
27 ( 4%) 58.13
29 ( 3%) 62.83
31 ( 3%) 51.79
33 ( 2%) 55.00
35 ( 2%) 48.63
37 ( 2%) 46.15
39 ( 3%) 49.34
41 ( 3%) 51.01
43 ( 2%) 51.45
45 ( 2%) 43.75
47 ( 2%) 44.70
49 ( 2%) 37.32
51 ( 2%) 43.18
53 ( 2%) 46.27
55 ( 2%) 33.61
57 ( 2%) 37.76
59 ( 2%) 41.12
61 ( 1%) 43.75
63 ( 0%) 22.86
65 ( 0%) 33.33
67 ( 0%) 66.67
result accuracy by symbol:
( (91%) 57.78
) (91%) 57.78
* (87%) 56.64
+ (84%) 57.01
- (77%) 55.72
/ (76%) 56.43
0 (52%) 51.17
1 (60%) 54.02
2 (61%) 55.35
3 (62%) 55.87
4 (61%) 56.02
5 (62%) 55.79
6 (62%) 55.57
7 (63%) 56.09
8 (64%) 56.24
9 (63%) 56.51
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 54.57
1 (10%) 66.10
2 ( 4%) 71.21
3 ( 2%) 67.41
4 ( 2%) 63.91
5 ( 2%) 67.00
6 ( 2%) 66.96
7 ( 2%) 69.03
8 ( 2%) 65.81
9 ( 1%) 74.42
result accuracy by generalization:
1 (22.45%) 73.91
2 (22.96%) 66.22
3 (22.53%) 67.03
4 (15.82%) 45.55
5 (16.24%) 41.21
error cases:
3 1 [-1] [-1] 3 1
2 1 [-1] [-1] 2 1
3-7 6-0 [1, -1, 1] [1, -1, 1] 0 6
6+9 6+0 [1, -1, 1] [1, -1, 1] 15 6
9+9 4+9 [1, -1, 1] [1, -1, 1] 18 13
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*5 1*5 [1, -1, 1] [1, -1, 1] 20 5
4*9+7 4*9+2 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 43 38
val (Perception Acc=93.29, Head Acc=100.00, Result Acc=60.80)
Epoch time: 1m 5s
------------------------------
Epoch 70/99 (max_len=15, data=6058)
Train acc: 93.37 (abduce 99.03)
Hit samples:  5999  Ave length:  7.26
Symbols:  16 [(0, 1921), (1, 2086), (2, 2100), (3, 2131), (4, 2050), (5, 2025), (6, 2030), (7, 2161), (8, 2005), (9, 2010), (10, 3868), (11, 3906), (12, 3212), (13, 3531), (14, 5553), (15, 2970)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 102)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.19 (abduce 99.67)
Hit samples:  6038  Ave length:  7.29
Symbols:  16 [(0, 1942), (1, 2124), (2, 2121), (3, 2153), (4, 2061), (5, 2047), (6, 2042), (7, 2178), (8, 2019), (9, 2033), (10, 3904), (11, 3948), (12, 3229), (13, 3597), (14, 5617), (15, 3009)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Learn perception with 6038 samples for 100 iterations, 0.9451208431764492, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 71/99 (max_len=15, data=6058)
Train acc: 93.17 (abduce 99.01)
Hit samples:  5998  Ave length:  7.26
Symbols:  16 [(0, 1933), (1, 2098), (2, 2108), (3, 2135), (4, 2038), (5, 2021), (6, 2028), (7, 2149), (8, 1995), (9, 2012), (10, 3859), (11, 3900), (12, 3204), (13, 3550), (14, 5557), (15, 2963)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.45 (abduce 99.67)
Hit samples:  6038  Ave length:  7.29
Symbols:  16 [(0, 1942), (1, 2120), (2, 2124), (3, 2151), (4, 2069), (5, 2049), (6, 2040), (7, 2175), (8, 2020), (9, 2030), (10, 3900), (11, 3948), (12, 3225), (13, 3605), (14, 5609), (15, 3009)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6038 samples for 100 iterations, 0.9453607778989458, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 72/99 (max_len=15, data=6058)
Train acc: 93.83 (abduce 99.08)
Hit samples:  6002  Ave length:  7.27
Symbols:  16 [(0, 1918), (1, 2090), (2, 2113), (3, 2154), (4, 2047), (5, 2025), (6, 2015), (7, 2160), (8, 2001), (9, 2022), (10, 3867), (11, 3889), (12, 3233), (13, 3551), (14, 5561), (15, 2972)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.76 (abduce 99.70)
Hit samples:  6040  Ave length:  7.29
Symbols:  16 [(0, 1934), (1, 2129), (2, 2121), (3, 2153), (4, 2064), (5, 2053), (6, 2036), (7, 2179), (8, 2023), (9, 2032), (10, 3903), (11, 3949), (12, 3235), (13, 3593), (14, 5627), (15, 3009)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6040 samples for 100 iterations, 0.9453451407811081, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 73/99 (max_len=15, data=6058)
Train acc: 93.16 (abduce 98.81)
Hit samples:  5986  Ave length:  7.25
Symbols:  16 [(0, 1868), (1, 2091), (2, 2097), (3, 2138), (4, 2044), (5, 2032), (6, 2030), (7, 2138), (8, 2013), (9, 2009), (10, 3842), (11, 3920), (12, 3185), (13, 3519), (14, 5520), (15, 2954)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 111), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.00 (abduce 99.62)
Hit samples:  6035  Ave length:  7.29
Symbols:  16 [(0, 1930), (1, 2123), (2, 2117), (3, 2149), (4, 2070), (5, 2051), (6, 2042), (7, 2166), (8, 2022), (9, 2032), (10, 3900), (11, 3950), (12, 3214), (13, 3599), (14, 5614), (15, 3006)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6035 samples for 100 iterations, 0.9452085938388087, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 74/99 (max_len=15, data=6058)
Train acc: 93.21 (abduce 99.06)
Hit samples:  6001  Ave length:  7.26
Symbols:  16 [(0, 1899), (1, 2101), (2, 2104), (3, 2140), (4, 2064), (5, 2027), (6, 2024), (7, 2143), (8, 2011), (9, 2013), (10, 3858), (11, 3934), (12, 3195), (13, 3533), (14, 5563), (15, 2960)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.42 (abduce 99.64)
Hit samples:  6036  Ave length:  7.29
Symbols:  16 [(0, 1940), (1, 2126), (2, 2125), (3, 2154), (4, 2065), (5, 2049), (6, 2042), (7, 2163), (8, 2017), (9, 2031), (10, 3898), (11, 3959), (12, 3217), (13, 3598), (14, 5622), (15, 3010)]
Head:  [((-1,), 1000), ((1, -1, 1), 1167), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6036 samples for 100 iterations, 0.9451563067975282, 2 epochs, take 37 sec.
              precision    recall  f1-score   support

           0       0.92      1.00      0.96      4016
           1       0.87      0.94      0.90      5142
           2       0.97      0.97      0.97      5321
           3       1.00      0.97      0.99      5241
           4       0.96      0.95      0.96      5279
           5       0.99      0.99      0.99      5383
           6       0.99      0.99      0.99      5427
           7       0.98      0.98      0.98      5462
           8       0.99      0.97      0.98      5453
           9       0.99      0.97      0.98      5476
           +       1.00      1.00      1.00     13199
           -       0.99      1.00      1.00     10734
           *       1.00      0.99      0.99     13491
           /       0.98      1.00      0.99      9876
           (       0.74      0.96      0.84     21081
           )       0.97      0.66      0.78     21081

    accuracy                           0.93    141662
   macro avg       0.96      0.96      0.96    141662
weighted avg       0.94      0.93      0.93    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    2  341    1    0    0    0    0    0    0    0    0    0    0    0     9    5
2    1    3  365    0    0    0    0    1    0    0    0    0    0    0     0    0
3    2    2    0  360    0    0    1    0    1    0    0    0    0    0     0    0
4    0    2    3    0  355    0    0    3    1    2    0    1    0    0     0    0
5    0    0    0    0    2  377    0    0    0    0    0    0    0    0     0    0
6    0    0    0    0    2    0  378    0    2    0    0    0    0    0     0    0
7    5    0    2    0    0    0    0  377    0    0    0    0    0    0     0    0
8    7    0    2    0    0    0    0    0  374    0    0    0    0    0     0    0
9    2    0    0    0    6    2    0    2    0  373    0    0    0    0     0    0
+    0    0    0    0    0    0    0    0    0    0  928    2    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  756    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  940   11     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0    0
(    2   29    2    0    2    0    0    0    0    0    0    0    0    0  1429   22
)    0   14    0    0    0    0    0    2    0    0    0    0    0    2   491  977
result accuracy by length:
1 ( 2%) 98.00
3 ( 2%) 93.00
5 ( 2%) 91.47
7 ( 4%) 87.34
9 ( 4%) 80.40
11 ( 3%) 80.11
13 ( 4%) 74.54
15 ( 4%) 72.77
17 ( 4%) 74.27
19 ( 4%) 63.73
21 ( 4%) 67.68
23 ( 4%) 57.56
25 ( 4%) 57.00
27 ( 4%) 57.14
29 ( 3%) 61.26
31 ( 3%) 50.60
33 ( 2%) 53.57
35 ( 2%) 47.95
37 ( 2%) 44.44
39 ( 3%) 50.00
41 ( 3%) 53.69
43 ( 2%) 50.72
45 ( 2%) 40.18
47 ( 2%) 41.67
49 ( 2%) 35.92
51 ( 2%) 46.21
53 ( 2%) 46.27
55 ( 2%) 36.13
57 ( 2%) 34.27
59 ( 2%) 39.25
61 ( 1%) 43.75
63 ( 0%) 22.86
65 ( 0%) 22.22
67 ( 0%) 66.67
result accuracy by symbol:
( (91%) 57.36
) (91%) 57.36
* (87%) 56.15
+ (84%) 56.58
- (77%) 55.35
/ (76%) 55.85
0 (52%) 50.74
1 (60%) 53.45
2 (61%) 54.65
3 (62%) 55.67
4 (61%) 55.36
5 (62%) 55.57
6 (62%) 55.21
7 (63%) 55.44
8 (64%) 55.67
9 (63%) 55.97
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 54.29
1 (10%) 65.54
2 ( 4%) 69.70
3 ( 2%) 66.67
4 ( 2%) 66.92
5 ( 2%) 62.00
6 ( 2%) 66.09
7 ( 2%) 67.26
8 ( 2%) 64.96
9 ( 1%) 74.42
result accuracy by generalization:
1 (22.45%) 73.91
2 (22.96%) 65.07
3 (22.53%) 66.76
4 (15.82%) 44.77
5 (16.24%) 41.08
error cases:
3 1 [-1] [-1] 3 1
2 1 [-1] [-1] 2 1
3-7 6-0 [1, -1, 1] [1, -1, 1] 0 6
6+9 6+0 [1, -1, 1] [1, -1, 1] 15 6
9+9 4+9 [1, -1, 1] [1, -1, 1] 18 13
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*5 1*5 [1, -1, 1] [1, -1, 1] 20 5
4*9+7 4*9+2 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 43 38
val (Perception Acc=93.19, Head Acc=100.00, Result Acc=60.33)
Epoch time: 1m 5s
------------------------------
Epoch 75/99 (max_len=15, data=6058)
Train acc: 93.01 (abduce 98.99)
Hit samples:  5997  Ave length:  7.26
Symbols:  16 [(0, 1931), (1, 2104), (2, 2100), (3, 2142), (4, 2048), (5, 2019), (6, 2020), (7, 2140), (8, 2002), (9, 2000), (10, 3876), (11, 3905), (12, 3160), (13, 3562), (14, 5539), (15, 2965)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.21 (abduce 99.62)
Hit samples:  6035  Ave length:  7.29
Symbols:  16 [(0, 1939), (1, 2121), (2, 2121), (3, 2146), (4, 2068), (5, 2051), (6, 2039), (7, 2166), (8, 2017), (9, 2036), (10, 3898), (11, 3938), (12, 3226), (13, 3603), (14, 5612), (15, 3008)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6035 samples for 100 iterations, 0.9454409056809657, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 76/99 (max_len=15, data=6058)
Train acc: 93.80 (abduce 98.96)
Hit samples:  5995  Ave length:  7.26
Symbols:  16 [(0, 1902), (1, 2101), (2, 2102), (3, 2130), (4, 2046), (5, 2025), (6, 2030), (7, 2142), (8, 2002), (9, 2030), (10, 3865), (11, 3889), (12, 3222), (13, 3534), (14, 5550), (15, 2959)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 360), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 144), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.99
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.55 (abduce 99.75)
Hit samples:  6043  Ave length:  7.3
Symbols:  16 [(0, 1941), (1, 2131), (2, 2125), (3, 2154), (4, 2068), (5, 2053), (6, 2046), (7, 2171), (8, 2019), (9, 2040), (10, 3905), (11, 3951), (12, 3234), (13, 3610), (14, 5624), (15, 3017)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6043 samples for 100 iterations, 0.9453832021592687, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 77/99 (max_len=15, data=6058)
Train acc: 93.50 (abduce 99.11)
Hit samples:  6004  Ave length:  7.27
Symbols:  16 [(0, 1913), (1, 2096), (2, 2106), (3, 2140), (4, 2060), (5, 2032), (6, 2032), (7, 2149), (8, 2002), (9, 2019), (10, 3874), (11, 3903), (12, 3208), (13, 3554), (14, 5558), (15, 2988)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 111), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.53 (abduce 99.75)
Hit samples:  6043  Ave length:  7.29
Symbols:  16 [(0, 1929), (1, 2124), (2, 2124), (3, 2155), (4, 2071), (5, 2055), (6, 2049), (7, 2175), (8, 2022), (9, 2042), (10, 3903), (11, 3948), (12, 3243), (13, 3604), (14, 5620), (15, 3019)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6043 samples for 100 iterations, 0.9459882494385591, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 78/99 (max_len=15, data=6058)
Train acc: 93.88 (abduce 99.08)
Hit samples:  6002  Ave length:  7.27
Symbols:  16 [(0, 1910), (1, 2098), (2, 2103), (3, 2129), (4, 2052), (5, 2028), (6, 2020), (7, 2159), (8, 2013), (9, 2030), (10, 3864), (11, 3901), (12, 3272), (13, 3496), (14, 5559), (15, 2976)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 111), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.99 (abduce 99.70)
Hit samples:  6040  Ave length:  7.29
Symbols:  16 [(0, 1938), (1, 2117), (2, 2122), (3, 2154), (4, 2070), (5, 2049), (6, 2048), (7, 2171), (8, 2021), (9, 2042), (10, 3908), (11, 3937), (12, 3239), (13, 3604), (14, 5616), (15, 3014)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6040 samples for 100 iterations, 0.9459250851305335, 2 epochs, take 37 sec.
Epoch time: 0m 49s
------------------------------
Epoch 79/99 (max_len=15, data=6058)
Train acc: 93.68 (abduce 98.96)
Hit samples:  5995  Ave length:  7.26
Symbols:  16 [(0, 1907), (1, 2090), (2, 2101), (3, 2129), (4, 2061), (5, 2032), (6, 2023), (7, 2143), (8, 2000), (9, 2023), (10, 3858), (11, 3874), (12, 3250), (13, 3526), (14, 5560), (15, 2964)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.97
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 93.79 (abduce 99.69)
Hit samples:  6039  Ave length:  7.29
Symbols:  16 [(0, 1935), (1, 2124), (2, 2120), (3, 2149), (4, 2070), (5, 2057), (6, 2039), (7, 2171), (8, 2015), (9, 2041), (10, 3904), (11, 3939), (12, 3229), (13, 3606), (14, 5622), (15, 3012)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 6039 samples for 100 iterations, 0.9459723389276224, 2 epochs, take 37 sec.
              precision    recall  f1-score   support

           0       0.92      1.00      0.96      4016
           1       0.91      0.92      0.92      5142
           2       0.95      0.98      0.97      5321
           3       1.00      0.97      0.98      5241
           4       0.96      0.96      0.96      5279
           5       0.99      0.99      0.99      5383
           6       0.99      0.99      0.99      5427
           7       0.98      0.98      0.98      5462
           8       0.99      0.97      0.98      5453
           9       0.99      0.97      0.98      5476
           +       1.00      1.00      1.00     13199
           -       0.99      1.00      1.00     10734
           *       1.00      0.98      0.99     13491
           /       0.97      1.00      0.98      9876
           (       0.74      0.97      0.84     21081
           )       0.97      0.67      0.79     21081

    accuracy                           0.93    141662
   macro avg       0.96      0.96      0.96    141662
weighted avg       0.94      0.93      0.93    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (    )
0  282    0    0    0    0    0    0    0    0    0    0    0    0    0     0    0
1    2  335    1    0    0    0    0    0    0    0    0    0    0    0     9   10
2    1    2  367    0    0    0    0    1    0    0    0    0    0    0     0    0
3    1    3    0  359    0    1    1    0    1    0    0    0    0    0     0    0
4    0    2    3    0  356    0    0    3    0    2    0    1    0    0     0    0
5    0    0    0    0    2  377    0    0    0    0    0    0    0    0     0    0
6    0    0    0    0    2    0  378    0    2    0    0    0    0    0     0    0
7    5    0    2    0    0    0    0  377    0    0    0    0    0    0     0    0
8    5    0    7    0    0    0    0    0  372    0    0    0    0    0     0    0
9    2    0    0    0    6    2    0    2    0  373    0    0    0    0     0    0
+    0    0    0    0    0    0    0    0    0    0  927    2    0    0     0    0
-    0    0    0    0    0    0    0    0    0    0    0  755    0    0     0    0
*    0    0    0    0    0    0    0    0    0    0    0    0  928   23     0    0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0    0
(    4   14    2    0    2    0    0    0    0    0    0    0    0    0  1442   22
)    0    8    0    0    0    0    0    2    0    0    0    0    0    0   483  994
result accuracy by length:
1 ( 2%) 99.00
3 ( 2%) 92.00
5 ( 2%) 90.70
7 ( 4%) 86.46
9 ( 4%) 80.40
11 ( 3%) 79.55
13 ( 4%) 71.30
15 ( 4%) 76.24
17 ( 4%) 76.21
19 ( 4%) 64.71
21 ( 4%) 67.68
23 ( 4%) 58.54
25 ( 4%) 56.50
27 ( 4%) 58.62
29 ( 3%) 62.30
31 ( 3%) 52.38
33 ( 2%) 56.43
35 ( 2%) 52.74
37 ( 2%) 46.15
39 ( 3%) 49.34
41 ( 3%) 49.66
43 ( 2%) 50.72
45 ( 2%) 42.86
47 ( 2%) 44.70
49 ( 2%) 38.03
51 ( 2%) 45.45
53 ( 2%) 44.78
55 ( 2%) 37.82
57 ( 2%) 39.16
59 ( 2%) 49.53
61 ( 1%) 45.31
63 ( 0%) 34.29
65 ( 0%) 33.33
67 ( 0%) 66.67
result accuracy by symbol:
( (91%) 58.61
) (91%) 58.61
* (87%) 57.29
+ (84%) 57.75
- (77%) 56.46
/ (76%) 57.44
0 (52%) 52.19
1 (60%) 54.28
2 (61%) 56.58
3 (62%) 56.75
4 (61%) 56.82
5 (62%) 57.32
6 (62%) 56.06
7 (63%) 56.86
8 (64%) 56.94
9 (63%) 57.25
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 56.00
1 (10%) 68.73
2 ( 4%) 71.72
3 ( 2%) 68.15
4 ( 2%) 69.17
5 ( 2%) 67.00
6 ( 2%) 67.83
7 ( 2%) 69.03
8 ( 2%) 64.10
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 74.73
2 (22.96%) 66.49
3 (22.53%) 66.67
4 (15.82%) 47.48
5 (16.24%) 41.71
error cases:
3 1 [-1] [-1] 3 1
3-7 6-0 [1, -1, 1] [1, -1, 1] 0 6
6+9 6+0 [1, -1, 1] [1, -1, 1] 15 6
1+8 )+8 [1, -1, 1] [1, -1, 1] 9 None
9+9 4+9 [1, -1, 1] [1, -1, 1] 18 13
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*5 1*5 [1, -1, 1] [1, -1, 1] 20 5
7*(6-1) 7*(6-() [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 35 None
val (Perception Acc=93.27, Head Acc=100.00, Result Acc=61.35)
Epoch time: 1m 7s
------------------------------
Epoch 80/99 (max_len=inf, data=11170)
Train acc: 78.92 (abduce 92.81)
Hit samples:  10367  Ave length:  14.18
Symbols:  16 [(0, 5524), (1, 6033), (2, 6171), (3, 6085), (4, 5970), (5, 5978), (6, 5810), (7, 6001), (8, 5868), (9, 5801), (10, 13157), (11, 13054), (12, 10957), (13, 11691), (14, 25488), (15, 13433)]
Head:  [((-1,), 1000), ((1, -1, 1), 1167), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 112), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 6), 0), 4), (((0, 2), 0), 4), (((0, 9), 0), 3), (((0, 5), 0), 3), (((0, 8), 0), 3), (((0, 1), 0), 3), (((0, 7), 0), 3), (((0, 4), 0), 3), (((0, 54), 0), 2), (((1, 1), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 79.04 (abduce 97.88)
Hit samples:  10933  Ave length:  14.66
Symbols:  16 [(0, 6031), (1, 6686), (2, 6687), (3, 6565), (4, 6450), (5, 6442), (6, 6342), (7, 6419), (8, 6339), (9, 6244), (10, 14285), (11, 14469), (12, 11592), (13, 12914), (14, 27988), (15, 14844)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 10933 samples for 100 iterations, 0.9355883141917815, 1 epochs, take 66 sec.
Epoch time: 7m 48s
------------------------------
Epoch 81/99 (max_len=inf, data=11170)
Train acc: 77.56 (abduce 93.39)
Hit samples:  10432  Ave length:  14.31
Symbols:  16 [(0, 5604), (1, 6156), (2, 6296), (3, 6163), (4, 6046), (5, 6062), (6, 5931), (7, 6022), (8, 5929), (9, 5891), (10, 13370), (11, 13446), (12, 10996), (13, 11836), (14, 25854), (15, 13658)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 361), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 372), ((2, 2, 5, 2, 2, -1, 5), 137), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 143), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 110), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 7), 0), 8), (((0, 2), 0), 7), (((0, 5), 0), 7), (((0, 1), 0), 5), (((0, 4), 0), 4), (((0, 11), 0), 4), (((0, 3), 0), 3), (((0, 6), 0), 3), (((0, 16), 0), 2), (((9, 9), 90), 1)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.96
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 78.43 (abduce 97.71)
Hit samples:  10914  Ave length:  14.66
Symbols:  16 [(0, 6022), (1, 6691), (2, 6713), (3, 6553), (4, 6457), (5, 6443), (6, 6309), (7, 6365), (8, 6342), (9, 6217), (10, 14261), (11, 14593), (12, 11444), (13, 12887), (14, 27881), (15, 14854)]
Head:  [((-1,), 1000), ((1, -1, 1), 1168), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 10914 samples for 100 iterations, 0.9347630473905219, 1 epochs, take 66 sec.
Epoch time: 7m 27s
------------------------------
Epoch 82/99 (max_len=inf, data=11170)
Train acc: 78.80 (abduce 94.25)
Hit samples:  10528  Ave length:  14.4
Symbols:  16 [(0, 5613), (1, 6248), (2, 6368), (3, 6259), (4, 6192), (5, 6178), (6, 6031), (7, 6098), (8, 6096), (9, 5883), (10, 13563), (11, 13649), (12, 11122), (13, 12091), (14, 26215), (15, 14006)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 376), ((2, 2, 5, 2, 2, -1, 5), 138), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 143), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 112), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 103)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 4), 0), 5), (((0, 6), 0), 4), (((0, 9), 0), 4), (((0, 5), 0), 3), (((0, 8), 0), 3), (((0, 1), 0), 3), (((0, 11), 0), 2), (((0, 10), 0), 2), (((0, 12), 0), 2), (((0, 3), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 78.96 (abduce 97.98)
Hit samples:  10944  Ave length:  14.69
Symbols:  16 [(0, 5975), (1, 6720), (2, 6695), (3, 6576), (4, 6517), (5, 6506), (6, 6340), (7, 6411), (8, 6403), (9, 6218), (10, 14339), (11, 14653), (12, 11434), (13, 12979), (14, 27992), (15, 14972)]
Head:  [((-1,), 1000), ((1, -1, 1), 1168), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Learn perception with 10944 samples for 100 iterations, 0.935419647856654, 1 epochs, take 66 sec.
Epoch time: 7m 23s
------------------------------
Epoch 83/99 (max_len=inf, data=11170)
Train acc: 79.25 (abduce 94.60)
Hit samples:  10567  Ave length:  14.45
Symbols:  16 [(0, 5570), (1, 6342), (2, 6423), (3, 6352), (4, 6251), (5, 6288), (6, 6069), (7, 6042), (8, 6113), (9, 5918), (10, 13703), (11, 13877), (12, 11109), (13, 12104), (14, 26177), (15, 14369)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 374), ((2, 2, 5, 2, 2, -1, 5), 138), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 142), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 101)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 2), 0), 7), (((0, 9), 0), 5), (((0, 1), 0), 5), (((0, 7), 0), 5), (((0, 15), 0), 3), (((0, 4), 0), 3), (((0, 3), 0), 3), (((0, 6), 0), 2), (((0, 13), 0), 2), (((4, 1), 3), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.96
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 79.12 (abduce 98.16)
Hit samples:  10964  Ave length:  14.7
Symbols:  16 [(0, 5947), (1, 6734), (2, 6727), (3, 6659), (4, 6547), (5, 6553), (6, 6359), (7, 6351), (8, 6387), (9, 6248), (10, 14395), (11, 14739), (12, 11364), (13, 13042), (14, 27808), (15, 15264)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 10964 samples for 100 iterations, 0.9365333531938135, 1 epochs, take 66 sec.
Epoch time: 7m 23s
------------------------------
Epoch 84/99 (max_len=inf, data=11170)
Train acc: 80.94 (abduce 96.23)
Hit samples:  10749  Ave length:  14.56
Symbols:  16 [(0, 5743), (1, 6494), (2, 6583), (3, 6400), (4, 6344), (5, 6389), (6, 6238), (7, 6217), (8, 6255), (9, 6120), (10, 14041), (11, 14041), (12, 11422), (13, 12524), (14, 26993), (15, 14711)]
Head:  [((-1,), 1000), ((1, -1, 1), 1168), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 373), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 90), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 9), 0), 7), (((0, 6), 0), 6), (((0, 2), 0), 5), (((0, 7), 0), 5), (((0, 4), 0), 4), (((1, 5), 0), 3), (((4, 1), 0), 2), (((0, 30), 0), 2), (((0, 8), 0), 2), (((0, 1), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 80.78 (abduce 98.85)
Hit samples:  11042  Ave length:  14.77
Symbols:  16 [(0, 6044), (1, 6801), (2, 6850), (3, 6668), (4, 6566), (5, 6632), (6, 6426), (7, 6474), (8, 6442), (9, 6312), (10, 14568), (11, 14892), (12, 11500), (13, 13206), (14, 28242), (15, 15415)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11042 samples for 100 iterations, 0.9364687986849691, 1 epochs, take 67 sec.
              precision    recall  f1-score   support

           0       0.95      1.00      0.98      4016
           1       0.96      0.96      0.96      5142
           2       0.96      0.99      0.98      5321
           3       1.00      0.97      0.99      5241
           4       0.97      0.96      0.97      5279
           5       0.98      0.99      0.99      5383
           6       0.99      0.99      0.99      5427
           7       1.00      0.99      0.99      5462
           8       0.98      0.99      0.99      5453
           9       0.99      0.97      0.98      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       0.75      0.97      0.85     21081
           )       0.96      0.68      0.80     21081

    accuracy                           0.94    141662
   macro avg       0.97      0.97      0.97    141662
weighted avg       0.95      0.94      0.94    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    1  349    2    0    0    0    0    0    0    0    0    0    0    0     2     4
2    0    1  371    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    2    1  360    0    2    1    0    1    0    0    0    0    0     0     0
4    0    1    3    0  359    0    0    0    1    3    0    1    0    0     0     0
5    0    0    0    0    2  375    2    0    0    0    0    0    0    0     0     0
6    0    0    0    0    2    0  378    0    2    0    0    0    0    0     0     0
7    5    0    0    0    0    0    0  380    0    0    0    0    0    0     0     0
8    0    0    5    0    0    0    0    0  379    0    0    0    0    0     0     0
9    2    0    0    0    4    4    0    0    0  376    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  930    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  756    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    2    4    2    0    0    0    0    0    0    0    0    0    0    0  1446    33
)    0    4    0    0    0    0    0    0    0    0    0    0    0    0   477  1006
result accuracy by length:
1 ( 2%) 99.00
3 ( 2%) 94.00
5 ( 2%) 93.80
7 ( 4%) 91.27
9 ( 4%) 87.94
11 ( 3%) 88.64
13 ( 4%) 77.31
15 ( 4%) 82.18
17 ( 4%) 80.10
19 ( 4%) 77.45
21 ( 4%) 73.74
23 ( 4%) 71.71
25 ( 4%) 67.00
27 ( 4%) 68.47
29 ( 3%) 75.92
31 ( 3%) 64.88
33 ( 2%) 69.29
35 ( 2%) 65.75
37 ( 2%) 65.81
39 ( 3%) 63.16
41 ( 3%) 64.43
43 ( 2%) 60.14
45 ( 2%) 55.36
47 ( 2%) 59.09
49 ( 2%) 50.00
51 ( 2%) 60.61
53 ( 2%) 59.70
55 ( 2%) 56.30
57 ( 2%) 55.94
59 ( 2%) 56.07
61 ( 1%) 60.94
63 ( 0%) 54.29
65 ( 0%) 33.33
67 ( 0%) 66.67
result accuracy by symbol:
( (91%) 69.77
) (91%) 69.77
* (87%) 68.54
+ (84%) 68.98
- (77%) 67.61
/ (76%) 68.95
0 (52%) 63.16
1 (60%) 67.00
2 (61%) 68.11
3 (62%) 68.56
4 (61%) 67.89
5 (62%) 69.04
6 (62%) 67.53
7 (63%) 68.00
8 (64%) 68.66
9 (63%) 68.68
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 63.71
1 (10%) 79.03
2 ( 4%) 78.79
3 ( 2%) 75.56
4 ( 2%) 74.44
5 ( 2%) 71.00
6 ( 2%) 80.00
7 ( 2%) 76.11
8 ( 2%) 71.79
9 ( 1%) 83.72
result accuracy by generalization:
1 (22.45%) 81.00
2 (22.96%) 74.76
3 (22.53%) 78.62
4 (15.82%) 59.87
5 (16.24%) 56.78
error cases:
3 1 [-1] [-1] 3 1
3-7 6-0 [1, -1, 1] [1, -1, 1] 0 6
6+9 6+0 [1, -1, 1] [1, -1, 1] 15 6
9+9 4+9 [1, -1, 1] [1, -1, 1] 18 13
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
0*(7/8) 0*(7/8( [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 1
0*4+5 0*4+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 5 9
4+7+5 2+7+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 16 14
val (Perception Acc=94.04, Head Acc=100.00, Result Acc=71.76)
Epoch time: 7m 42s
------------------------------
Epoch 85/99 (max_len=inf, data=11170)
Train acc: 82.09 (abduce 96.63)
Hit samples:  10794  Ave length:  14.6
Symbols:  16 [(0, 5773), (1, 6541), (2, 6628), (3, 6435), (4, 6355), (5, 6458), (6, 6243), (7, 6341), (8, 6268), (9, 6121), (10, 14137), (11, 14209), (12, 11473), (13, 12538), (14, 27335), (15, 14733)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 111), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 138), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 9), (((0, 7), 0), 5), (((0, 2), 0), 5), (((0, 9), 0), 5), (((0, 6), 0), 5), (((0, 5), 0), 3), (((2, 3), 0), 2), (((0, 3), 0), 2), (((0, 8), 0), 2), (((5, 3), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 81.88 (abduce 98.77)
Hit samples:  11033  Ave length:  14.77
Symbols:  16 [(0, 6037), (1, 6773), (2, 6825), (3, 6640), (4, 6556), (5, 6633), (6, 6421), (7, 6502), (8, 6470), (9, 6312), (10, 14543), (11, 14865), (12, 11484), (13, 13234), (14, 28284), (15, 15338)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11033 samples for 100 iterations, 0.9373239134037578, 1 epochs, take 67 sec.
Epoch time: 7m 14s
------------------------------
Epoch 86/99 (max_len=inf, data=11170)
Train acc: 82.92 (abduce 97.19)
Hit samples:  10856  Ave length:  14.65
Symbols:  16 [(0, 5906), (1, 6590), (2, 6700), (3, 6397), (4, 6331), (5, 6509), (6, 6318), (7, 6391), (8, 6359), (9, 6229), (10, 14274), (11, 14181), (12, 11697), (13, 12709), (14, 27541), (15, 14930)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 139), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 82.54 (abduce 99.10)
Hit samples:  11069  Ave length:  14.79
Symbols:  16 [(0, 6135), (1, 6818), (2, 6826), (3, 6591), (4, 6552), (5, 6668), (6, 6472), (7, 6523), (8, 6488), (9, 6404), (10, 14658), (11, 14903), (12, 11602), (13, 13236), (14, 28446), (15, 15419)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11069 samples for 100 iterations, 0.9377187143110156, 1 epochs, take 68 sec.
Epoch time: 1m 55s
------------------------------
Epoch 87/99 (max_len=inf, data=11170)
Train acc: 81.50 (abduce 96.77)
Hit samples:  10809  Ave length:  14.61
Symbols:  16 [(0, 6049), (1, 6603), (2, 6580), (3, 6180), (4, 6305), (5, 6488), (6, 6277), (7, 6346), (8, 6289), (9, 6198), (10, 14218), (11, 14287), (12, 11481), (13, 12510), (14, 27060), (15, 15088)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 376), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 144), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 6), 0), 8), (((0, 7), 0), 7), (((0, 1), 0), 5), (((0, 9), 0), 4), (((0, 2), 0), 3), (((0, 5), 0), 3), (((0, 8), 0), 3), (((0, 4), 0), 3), (((0, 3), 0), 2), (((0, 16), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 81.37 (abduce 98.79)
Hit samples:  11035  Ave length:  14.76
Symbols:  16 [(0, 6182), (1, 6782), (2, 6794), (3, 6478), (4, 6507), (5, 6654), (6, 6453), (7, 6523), (8, 6450), (9, 6341), (10, 14567), (11, 14879), (12, 11477), (13, 13198), (14, 28026), (15, 15606)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11035 samples for 100 iterations, 0.9371336324631561, 1 epochs, take 67 sec.
Epoch time: 7m 19s
------------------------------
Epoch 88/99 (max_len=inf, data=11170)
Train acc: 81.63 (abduce 97.33)
Hit samples:  10872  Ave length:  14.66
Symbols:  16 [(0, 5999), (1, 6573), (2, 6637), (3, 6422), (4, 6403), (5, 6470), (6, 6319), (7, 6417), (8, 6376), (9, 6226), (10, 14307), (11, 14590), (12, 11258), (13, 12806), (14, 26938), (15, 15639)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 144), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 101)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 81.97 (abduce 98.87)
Hit samples:  11044  Ave length:  14.78
Symbols:  16 [(0, 6139), (1, 6725), (2, 6808), (3, 6621), (4, 6538), (5, 6625), (6, 6433), (7, 6528), (8, 6509), (9, 6354), (10, 14622), (11, 15006), (12, 11367), (13, 13232), (14, 27664), (15, 16077)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11044 samples for 100 iterations, 0.9396133490149956, 1 epochs, take 68 sec.
Epoch time: 1m 58s
------------------------------
Epoch 89/99 (max_len=inf, data=11170)
Train acc: 81.81 (abduce 97.28)
Hit samples:  10866  Ave length:  14.66
Symbols:  16 [(0, 5976), (1, 6600), (2, 6664), (3, 6452), (4, 6395), (5, 6484), (6, 6334), (7, 6365), (8, 6331), (9, 6232), (10, 14339), (11, 14563), (12, 11270), (13, 12784), (14, 26634), (15, 15907)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 102)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 81.60 (abduce 98.94)
Hit samples:  11052  Ave length:  14.78
Symbols:  16 [(0, 6107), (1, 6749), (2, 6821), (3, 6621), (4, 6556), (5, 6638), (6, 6443), (7, 6536), (8, 6479), (9, 6370), (10, 14649), (11, 15028), (12, 11345), (13, 13241), (14, 27336), (15, 16407)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11052 samples for 100 iterations, 0.9413994097694183, 1 epochs, take 68 sec.
              precision    recall  f1-score   support

           0       0.95      1.00      0.97      4016
           1       0.95      0.96      0.96      5142
           2       0.98      0.99      0.98      5321
           3       0.99      0.98      0.99      5241
           4       0.97      0.97      0.97      5279
           5       0.98      0.99      0.98      5383
           6       1.00      0.99      0.99      5427
           7       0.99      0.99      0.99      5462
           8       0.99      0.99      0.99      5453
           9       1.00      0.98      0.99      5476
           +       1.00      1.00      1.00     13199
           -       0.99      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       0.77      0.97      0.86     21081
           )       0.96      0.70      0.81     21081

    accuracy                           0.94    141662
   macro avg       0.97      0.97      0.97    141662
weighted avg       0.95      0.94      0.94    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  282    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    5  349    1    0    0    0    0    0    0    0    0    0    0    0     1     3
2    0    0  372    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    1    0  361    0    3    1    0    1    0    0    0    0    0     0     0
4    0    2    0    0  360    0    0    1    1    0    0    1    0    0     0     0
5    2    0    0    0    2  375    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    2    0  378    0    2    0    0    0    0    0     0     0
7    5    0    0    0    0    0    0  380    0    0    0    0    0    0     0     0
8    0    0    5    0    0    0    0    0  379    0    0    0    0    0     0     0
9    0    0    0    0    4    4    0    0    0  378    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  928    2    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    2  754    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    8    0    0    0    0    0    0    0    0    0    0    0    0  1444    35
)    0    4    0    0    0    0    0    0    0    0    0    0    0    0   437  1046
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 94.00
5 ( 2%) 93.80
7 ( 4%) 92.58
9 ( 4%) 85.43
11 ( 3%) 88.07
13 ( 4%) 77.78
15 ( 4%) 82.67
17 ( 4%) 80.58
19 ( 4%) 76.47
21 ( 4%) 76.26
23 ( 4%) 74.15
25 ( 4%) 65.50
27 ( 4%) 67.98
29 ( 3%) 74.35
31 ( 3%) 63.69
33 ( 2%) 69.29
35 ( 2%) 70.55
37 ( 2%) 68.38
39 ( 3%) 61.84
41 ( 3%) 63.76
43 ( 2%) 60.14
45 ( 2%) 55.36
47 ( 2%) 60.61
49 ( 2%) 54.23
51 ( 2%) 58.33
53 ( 2%) 62.69
55 ( 2%) 59.66
57 ( 2%) 60.84
59 ( 2%) 53.27
61 ( 1%) 59.38
63 ( 0%) 57.14
65 ( 0%) 33.33
67 ( 0%) 66.67
result accuracy by symbol:
( (91%) 70.26
) (91%) 70.26
* (87%) 69.19
+ (84%) 69.46
- (77%) 68.11
/ (76%) 69.85
0 (52%) 64.06
1 (60%) 67.70
2 (61%) 68.67
3 (62%) 69.15
4 (61%) 68.62
5 (62%) 69.34
6 (62%) 68.02
7 (63%) 68.61
8 (64%) 69.11
9 (63%) 69.35
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 64.00
1 (10%) 79.59
2 ( 4%) 80.81
3 ( 2%) 78.52
4 ( 2%) 75.19
5 ( 2%) 72.00
6 ( 2%) 80.00
7 ( 2%) 75.22
8 ( 2%) 76.07
9 ( 1%) 80.23
result accuracy by generalization:
1 (22.45%) 81.27
2 (22.96%) 74.76
3 (22.53%) 79.26
4 (15.82%) 61.29
5 (16.24%) 57.16
error cases:
3-7 6-0 [1, -1, 1] [1, -1, 1] 0 6
9+9 4+9 [1, -1, 1] [1, -1, 1] 18 13
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*5 1*5 [1, -1, 1] [1, -1, 1] 20 5
0*(7/8) 0*(7/8( [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 1
0*4+5 0*4+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 5 9
7/7-5 7/7-0 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 0 1
(4+8)/8 (9+8)/8 [2, 2, 5, 2, 2, -1, 5] [2, 2, 5, 2, 2, -1, 5] 2 3
val (Perception Acc=94.42, Head Acc=100.00, Result Acc=72.24)
Epoch time: 2m 14s
------------------------------
Epoch 90/99 (max_len=inf, data=11170)
Train acc: 81.19 (abduce 96.81)
Hit samples:  10814  Ave length:  14.63
Symbols:  16 [(0, 5995), (1, 6510), (2, 6600), (3, 6370), (4, 6351), (5, 6454), (6, 6311), (7, 6366), (8, 6317), (9, 6151), (10, 14261), (11, 14510), (12, 11138), (13, 12695), (14, 26347), (15, 15864)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 374), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 143), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 111), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 81.20 (abduce 98.90)
Hit samples:  11047  Ave length:  14.77
Symbols:  16 [(0, 6194), (1, 6717), (2, 6803), (3, 6598), (4, 6545), (5, 6637), (6, 6452), (7, 6496), (8, 6501), (9, 6324), (10, 14612), (11, 15093), (12, 11306), (13, 13202), (14, 27167), (15, 16510)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11047 samples for 100 iterations, 0.9409403212856329, 1 epochs, take 68 sec.
Epoch time: 1m 57s
------------------------------
Epoch 91/99 (max_len=inf, data=11170)
Train acc: 81.90 (abduce 96.97)
Hit samples:  10832  Ave length:  14.62
Symbols:  16 [(0, 6021), (1, 6475), (2, 6584), (3, 6409), (4, 6323), (5, 6485), (6, 6281), (7, 6386), (8, 6293), (9, 6239), (10, 14240), (11, 14438), (12, 11240), (13, 12737), (14, 26212), (15, 16053)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 6), 0), 7), (((0, 5), 0), 6), (((0, 9), 0), 5), (((0, 3), 0), 5), (((0, 8), 0), 3), (((48, 1), 0), 2), (((3, 12), 0), 2), (((0, 4), 0), 2), (((7, 1), 0), 2), (((0, 16), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0))))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 82.08 (abduce 99.02)
Hit samples:  11061  Ave length:  14.79
Symbols:  16 [(0, 6165), (1, 6740), (2, 6807), (3, 6645), (4, 6517), (5, 6662), (6, 6448), (7, 6565), (8, 6500), (9, 6390), (10, 14657), (11, 15032), (12, 11446), (13, 13233), (14, 27082), (15, 16758)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 378), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11061 samples for 100 iterations, 0.942382078498231, 1 epochs, take 67 sec.
Epoch time: 7m 15s
------------------------------
Epoch 92/99 (max_len=inf, data=11170)
Train acc: 82.72 (abduce 97.05)
Hit samples:  10840  Ave length:  14.65
Symbols:  16 [(0, 6010), (1, 6510), (2, 6531), (3, 6340), (4, 6330), (5, 6494), (6, 6309), (7, 6467), (8, 6371), (9, 6246), (10, 14242), (11, 14387), (12, 11555), (13, 12575), (14, 25990), (15, 16429)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 139), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 142), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 82.98 (abduce 99.04)
Hit samples:  11063  Ave length:  14.78
Symbols:  16 [(0, 6201), (1, 6735), (2, 6765), (3, 6553), (4, 6503), (5, 6656), (6, 6458), (7, 6594), (8, 6522), (9, 6402), (10, 14633), (11, 14939), (12, 11539), (13, 13205), (14, 26824), (15, 16938)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11063 samples for 100 iterations, 0.9433830681421939, 1 epochs, take 68 sec.
Epoch time: 1m 56s
------------------------------
Epoch 93/99 (max_len=inf, data=11170)
Train acc: 83.03 (abduce 97.10)
Hit samples:  10846  Ave length:  14.64
Symbols:  16 [(0, 5984), (1, 6469), (2, 6558), (3, 6495), (4, 6380), (5, 6439), (6, 6254), (7, 6461), (8, 6324), (9, 6272), (10, 14259), (11, 14368), (12, 11432), (13, 12721), (14, 25393), (15, 17001)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 139), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.96
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 83.17 (abduce 99.15)
Hit samples:  11075  Ave length:  14.79
Symbols:  16 [(0, 6127), (1, 6717), (2, 6754), (3, 6704), (4, 6541), (5, 6654), (6, 6437), (7, 6590), (8, 6526), (9, 6436), (10, 14657), (11, 14979), (12, 11495), (13, 13271), (14, 26207), (15, 17664)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11075 samples for 100 iterations, 0.9426352139424398, 1 epochs, take 68 sec.
Epoch time: 1m 57s
------------------------------
Epoch 94/99 (max_len=inf, data=11170)
Train acc: 83.48 (abduce 97.73)
Hit samples:  10916  Ave length:  14.71
Symbols:  16 [(0, 5958), (1, 6602), (2, 6625), (3, 6589), (4, 6388), (5, 6583), (6, 6247), (7, 6514), (8, 6442), (9, 6336), (10, 14412), (11, 14608), (12, 11516), (13, 12826), (14, 24971), (15, 17965)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 375), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 101)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 82.99 (abduce 99.12)
Hit samples:  11072  Ave length:  14.79
Symbols:  16 [(0, 6122), (1, 6739), (2, 6775), (3, 6668), (4, 6551), (5, 6708), (6, 6389), (7, 6602), (8, 6505), (9, 6430), (10, 14645), (11, 15017), (12, 11504), (13, 13240), (14, 25475), (15, 18422)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11072 samples for 100 iterations, 0.9467556413011624, 1 epochs, take 68 sec.
              precision    recall  f1-score   support

           0       0.92      1.00      0.96      4016
           1       0.93      0.96      0.95      5142
           2       0.97      0.98      0.98      5321
           3       1.00      0.98      0.99      5241
           4       0.98      0.96      0.97      5279
           5       0.98      0.99      0.98      5383
           6       1.00      0.99      0.99      5427
           7       0.98      0.99      0.98      5462
           8       0.99      0.98      0.98      5453
           9       0.99      0.98      0.98      5476
           +       1.00      1.00      1.00     13199
           -       0.99      1.00      1.00     10734
           *       1.00      0.99      1.00     13491
           /       0.99      1.00      1.00      9876
           (       0.81      0.96      0.88     21081
           )       0.96      0.77      0.85     21081

    accuracy                           0.95    141662
   macro avg       0.97      0.97      0.97    141662
weighted avg       0.95      0.95      0.95    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  282    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    5  347    1    0    0    0    0    1    0    0    0    0    0    0     1     3
2    1    0  369    0    0    0    0    0    0    0    0    0    0    0     0     0
3    1    0    0  361    0    3    1    0    1    0    0    0    0    0     0     0
4    3    2    0    0  358    0    0    1    0    3    0    1    0    0     0     0
5    2    0    0    0    0  375    0    2    0    0    0    0    0    0     0     0
6    0    0    0    0    2    0  378    0    2    0    0    0    0    0     0     0
7    5    0    0    0    0    0    0  380    0    0    0    0    0    0     0     0
8    0    0    7    0    0    0    0    0  377    0    0    0    0    0     0     0
9    0    0    0    0    4    4    0    0    0  378    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  928    2    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  756    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  946    5     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    2   14    0    0    0    0    0    0    0    0    0    0    0    0  1425    45
)    2    6    0    0    0    0    0    0    0    0    0    0    0    0   338  1141
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 94.00
5 ( 2%) 93.02
7 ( 4%) 90.83
9 ( 4%) 82.41
11 ( 3%) 85.80
13 ( 4%) 75.00
15 ( 4%) 82.67
17 ( 4%) 77.67
19 ( 4%) 72.06
21 ( 4%) 74.75
23 ( 4%) 69.27
25 ( 4%) 64.00
27 ( 4%) 61.58
29 ( 3%) 71.73
31 ( 3%) 58.33
33 ( 2%) 62.14
35 ( 2%) 65.07
37 ( 2%) 64.96
39 ( 3%) 54.61
41 ( 3%) 59.06
43 ( 2%) 56.52
45 ( 2%) 57.14
47 ( 2%) 56.82
49 ( 2%) 49.30
51 ( 2%) 53.03
53 ( 2%) 53.73
55 ( 2%) 55.46
57 ( 2%) 51.75
59 ( 2%) 50.47
61 ( 1%) 53.12
63 ( 0%) 48.57
65 ( 0%) 33.33
67 ( 0%) 66.67
result accuracy by symbol:
( (91%) 66.26
) (91%) 66.26
* (87%) 65.26
+ (84%) 65.47
- (77%) 64.28
/ (76%) 65.33
0 (52%) 60.00
1 (60%) 63.45
2 (61%) 64.19
3 (62%) 65.15
4 (61%) 64.21
5 (62%) 64.75
6 (62%) 63.93
7 (63%) 64.26
8 (64%) 65.06
9 (63%) 65.36
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 60.76
1 (10%) 76.97
2 ( 4%) 79.29
3 ( 2%) 73.33
4 ( 2%) 69.92
5 ( 2%) 68.00
6 ( 2%) 77.39
7 ( 2%) 71.68
8 ( 2%) 72.65
9 ( 1%) 76.74
result accuracy by generalization:
1 (22.45%) 78.73
2 (22.96%) 72.09
3 (22.53%) 75.36
4 (15.82%) 56.26
5 (16.24%) 52.01
error cases:
3-7 6-0 [1, -1, 1] [1, -1, 1] 0 6
9+9 4+9 [1, -1, 1] [1, -1, 1] 18 13
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*5 1*5 [1, -1, 1] [1, -1, 1] 20 5
0*(7/8) 0*(7/8( [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 1
0*4+5 0*4+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 5 9
7/7-5 7/7-0 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 0 1
4*(0-0) 4*10-0( [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 None
val (Perception Acc=95.06, Head Acc=100.00, Result Acc=68.55)
Epoch time: 2m 14s
------------------------------
Epoch 95/99 (max_len=inf, data=11170)
Train acc: 81.70 (abduce 96.57)
Hit samples:  10787  Ave length:  14.6
Symbols:  16 [(0, 5873), (1, 6440), (2, 6525), (3, 6485), (4, 6331), (5, 6418), (6, 6137), (7, 6361), (8, 6366), (9, 6203), (10, 14203), (11, 14381), (12, 11076), (13, 12681), (14, 23723), (15, 18310)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 363), ((1, -1, 3, 1, 3), 110), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 145), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 100)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 81.71 (abduce 98.79)
Hit samples:  11035  Ave length:  14.75
Symbols:  16 [(0, 6093), (1, 6713), (2, 6743), (3, 6664), (4, 6515), (5, 6634), (6, 6333), (7, 6547), (8, 6505), (9, 6397), (10, 14579), (11, 15007), (12, 11294), (13, 13216), (14, 24606), (15, 18975)]
Head:  [((-1,), 1000), ((1, -1, 1), 1169), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 91), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11035 samples for 100 iterations, 0.9468373244237537, 1 epochs, take 68 sec.
Epoch time: 1m 58s
------------------------------
Epoch 96/99 (max_len=inf, data=11170)
Train acc: 83.97 (abduce 97.91)
Hit samples:  10936  Ave length:  14.73
Symbols:  16 [(0, 6067), (1, 6669), (2, 6672), (3, 6562), (4, 6436), (5, 6547), (6, 6261), (7, 6464), (8, 6430), (9, 6335), (10, 14440), (11, 14516), (12, 11667), (13, 12880), (14, 24294), (15, 18808)]
Head:  [((-1,), 1000), ((1, -1, 1), 1166), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 141), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 144), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 103)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 83.62 (abduce 99.10)
Hit samples:  11070  Ave length:  14.8
Symbols:  16 [(0, 6143), (1, 6770), (2, 6774), (3, 6661), (4, 6550), (5, 6653), (6, 6371), (7, 6583), (8, 6530), (9, 6449), (10, 14617), (11, 14984), (12, 11558), (13, 13251), (14, 24730), (15, 19184)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11070 samples for 100 iterations, 0.9453140261769877, 1 epochs, take 68 sec.
Epoch time: 1m 57s
------------------------------
Epoch 97/99 (max_len=inf, data=11170)
Train acc: 83.79 (abduce 97.48)
Hit samples:  10889  Ave length:  14.7
Symbols:  16 [(0, 5936), (1, 6628), (2, 6620), (3, 6544), (4, 6382), (5, 6532), (6, 6249), (7, 6497), (8, 6392), (9, 6311), (10, 14288), (11, 14462), (12, 11722), (13, 12720), (14, 23974), (15, 18838)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 364), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 137), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 144), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 112), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 103)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 84.09 (abduce 99.34)
Hit samples:  11096  Ave length:  14.81
Symbols:  16 [(0, 6141), (1, 6801), (2, 6773), (3, 6723), (4, 6560), (5, 6681), (6, 6436), (7, 6616), (8, 6520), (9, 6456), (10, 14664), (11, 15006), (12, 11666), (13, 13267), (14, 24666), (15, 19350)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11096 samples for 100 iterations, 0.9462288377980356, 1 epochs, take 68 sec.
Epoch time: 1m 55s
------------------------------
Epoch 98/99 (max_len=inf, data=11170)
Train acc: 83.90 (abduce 97.73)
Hit samples:  10916  Ave length:  14.69
Symbols:  16 [(0, 5994), (1, 6664), (2, 6589), (3, 6555), (4, 6376), (5, 6544), (6, 6311), (7, 6471), (8, 6392), (9, 6310), (10, 14343), (11, 14480), (12, 11647), (13, 12817), (14, 23183), (15, 19700)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 362), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 377), ((2, 2, 5, 2, 2, -1, 5), 140), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 144), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 104)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 84.22 (abduce 99.39)
Hit samples:  11102  Ave length:  14.82
Symbols:  16 [(0, 6155), (1, 6816), (2, 6778), (3, 6677), (4, 6540), (5, 6684), (6, 6485), (7, 6624), (8, 6540), (9, 6473), (10, 14678), (11, 15032), (12, 11638), (13, 13315), (14, 23894), (15, 20205)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11102 samples for 100 iterations, 0.9445828825653056, 1 epochs, take 69 sec.
Epoch time: 1m 56s
------------------------------
Epoch 99/99 (max_len=inf, data=11170)
Train acc: 83.64 (abduce 97.74)
Hit samples:  10918  Ave length:  14.69
Symbols:  16 [(0, 5987), (1, 6637), (2, 6642), (3, 6527), (4, 6373), (5, 6526), (6, 6319), (7, 6505), (8, 6385), (9, 6327), (10, 14375), (11, 14666), (12, 11443), (13, 12818), (14, 22478), (15, 20402)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 112), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 113), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 102)]
Semantics: 16/14/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) ($2 $0 (decr0 $1)) (decr0 $0)))))))))) 0.95
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $1 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (decr0 ($2 $1 (decr0 $0)))))))))) $0 (decr0 $0))))) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Train acc: 83.40 (abduce 99.18)
Hit samples:  11078  Ave length:  14.79
Symbols:  16 [(0, 6158), (1, 6764), (2, 6772), (3, 6656), (4, 6510), (5, 6678), (6, 6438), (7, 6618), (8, 6523), (9, 6431), (10, 14649), (11, 15120), (12, 11423), (13, 13268), (14, 22910), (15, 20980)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 379), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Learn perception with 11078 samples for 100 iterations, 0.9395538688696629, 1 epochs, take 68 sec.
              precision    recall  f1-score   support

           0       0.96      1.00      0.98      4016
           1       0.96      0.96      0.96      5142
           2       0.98      0.98      0.98      5321
           3       1.00      0.98      0.99      5241
           4       0.97      0.98      0.97      5279
           5       0.99      0.99      0.99      5383
           6       1.00      0.99      0.99      5427
           7       0.99      0.99      0.99      5462
           8       0.99      0.99      0.99      5453
           9       1.00      0.98      0.99      5476
           +       1.00      0.99      1.00     13199
           -       0.99      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       0.83      0.95      0.88     21081
           )       0.94      0.80      0.86     21081

    accuracy                           0.96    141662
   macro avg       0.97      0.97      0.97    141662
weighted avg       0.96      0.96      0.95    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    4  348    1    0    0    0    0    0    0    0    0    0    0    0     0     4
2    2    0  369    0    0    0    0    0    0    0    0    0    0    0     0     0
3    1    0    0  361    0    3    1    0    1    0    0    0    0    0     0     0
4    0    2    0    0  363    0    0    0    0    0    0    1    0    0     0     0
5    0    0    0    0    2  377    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    2    0  378    0    2    0    0    0    0    0     0     0
7    2    0    0    0    2    0    0  380    0    0    0    0    0    0     0     0
8    0    0    5    0    0    0    0    0  379    0    0    0    0    0     0     0
9    0    0    0    0    4    2    0    0    0  380    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  926    3    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    1  756    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    4    0    0    0    0    0    0    0    0    0    0    0    0  1407    76
)    0    4    0    0    0    0    0    0    0    0    0    0    0    0   294  1189
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 94.00
5 ( 2%) 95.35
7 ( 4%) 93.01
9 ( 4%) 84.42
11 ( 3%) 86.36
13 ( 4%) 76.85
15 ( 4%) 84.16
17 ( 4%) 80.10
19 ( 4%) 76.47
21 ( 4%) 74.75
23 ( 4%) 74.15
25 ( 4%) 69.50
27 ( 4%) 68.97
29 ( 3%) 76.44
31 ( 3%) 65.48
33 ( 2%) 72.14
35 ( 2%) 69.86
37 ( 2%) 70.94
39 ( 3%) 62.50
41 ( 3%) 65.10
43 ( 2%) 62.32
45 ( 2%) 58.04
47 ( 2%) 56.82
49 ( 2%) 58.45
51 ( 2%) 58.33
53 ( 2%) 58.96
55 ( 2%) 57.98
57 ( 2%) 60.14
59 ( 2%) 57.01
61 ( 1%) 59.38
63 ( 0%) 60.00
65 ( 0%) 33.33
67 ( 0%) 66.67
result accuracy by symbol:
( (91%) 70.75
) (91%) 70.75
* (87%) 69.70
+ (84%) 70.02
- (77%) 68.98
/ (76%) 70.15
0 (52%) 64.96
1 (60%) 68.37
2 (61%) 68.94
3 (62%) 69.77
4 (61%) 69.25
5 (62%) 69.63
6 (62%) 68.61
7 (63%) 69.00
8 (64%) 70.03
9 (63%) 69.80
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 64.38
1 (10%) 80.71
2 ( 4%) 81.31
3 ( 2%) 79.26
4 ( 2%) 75.19
5 ( 2%) 71.00
6 ( 2%) 80.00
7 ( 2%) 76.99
8 ( 2%) 75.21
9 ( 1%) 82.56
result accuracy by generalization:
1 (22.45%) 81.82
2 (22.96%) 74.58
3 (22.53%) 80.53
4 (15.82%) 61.81
5 (16.24%) 57.54
error cases:
3-7 6-0 [1, -1, 1] [1, -1, 1] 0 6
9+9 4+9 [1, -1, 1] [1, -1, 1] 18 13
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 3
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 5
4*5 1*5 [1, -1, 1] [1, -1, 1] 20 5
0*(7/8) 0*(7/8( [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 1
0*4+5 0*4+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 5 9
(1-1)*1 (1-1)*1 [2, 2, 5, 2, 2, -1, 5] [2, 2, 5, 2, 2, -1, 5] 0 1
4*0*1 4*0*1 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 0 1
val (Perception Acc=95.52, Head Acc=100.00, Result Acc=72.76)
Epoch time: 2m 14s
------------------------------
Evaluate on test set...
              precision    recall  f1-score   support

           0       0.95      0.99      0.97     39465
           1       0.98      0.96      0.97     51797
           2       0.99      0.97      0.98     52546
           3       0.99      0.98      0.99     52953
           4       0.99      0.98      0.98     53234
           5       0.99      0.99      0.99     53430
           6       0.99      0.99      0.99     53860
           7       0.99      0.99      0.99     54695
           8       0.99      0.99      0.99     54671
           9       0.98      1.00      0.99     54909
           +       1.00      0.99      1.00    131914
           -       1.00      1.00      1.00    108556
           *       1.00      1.00      1.00    132837
           /       1.00      1.00      1.00     99343
           (       0.83      0.95      0.89    210691
           )       0.94      0.81      0.87    210691

    accuracy                           0.96   1415592
   macro avg       0.98      0.97      0.97   1415592
weighted avg       0.96      0.96      0.96   1415592

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  275    0    0    0    0    0    0    0    1    0    0    0    0    0     0     0
1    3  350    1    0    1    0    0    1    0    0    0    0    0    0     2     3
2    3    0  361    0    0    0    0    0    0    0    0    0    0    0     0     0
3    2    0    0  367    0    2    0    0    0    0    0    0    0    0     0     0
4    2    1    0    0  367    0    0    1    0    3    0    0    0    0     0     0
5    0    0    0    0    1  373    0    0    1    0    0    0    0    0     0     0
6    1    0    0    0    0    1  376    0    0    0    0    0    0    0     0     0
7    1    0    0    0    0    0    0  384    0    0    0    0    0    0     0     0
8    1    0    0    0    0    0    0    0  383    1    0    0    0    0     0     0
9    0    0    0    0    1    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  925    2    2    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  766    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  936    1     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  701     0     0
(    0    4    0    0    0    0    0    0    0    0    0    0    0    0  1415    69
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0   287  1200
result accuracy by length:
1 ( 2%) 98.90
3 ( 2%) 94.87
5 ( 2%) 93.70
7 ( 4%) 91.69
9 ( 4%) 89.37
11 ( 4%) 87.92
13 ( 4%) 85.14
15 ( 4%) 83.99
17 ( 4%) 81.74
19 ( 4%) 80.70
21 ( 4%) 78.36
23 ( 4%) 76.37
25 ( 4%) 74.69
27 ( 4%) 75.09
29 ( 3%) 73.88
31 ( 3%) 74.64
33 ( 2%) 70.78
35 ( 2%) 72.30
37 ( 2%) 66.13
39 ( 2%) 67.94
41 ( 2%) 66.56
43 ( 2%) 65.81
45 ( 2%) 62.64
47 ( 2%) 62.71
49 ( 2%) 63.53
51 ( 2%) 60.84
53 ( 2%) 59.99
55 ( 2%) 59.27
57 ( 2%) 60.00
59 ( 2%) 57.66
61 ( 1%) 56.31
63 ( 0%) 61.43
65 ( 0%) 57.85
67 ( 0%) 62.07
69 ( 0%) 27.27
71 ( 0%) 50.00
result accuracy by symbol:
( (91%) 73.32
) (91%) 73.32
* (87%) 72.15
+ (84%) 73.00
- (78%) 71.90
/ (77%) 72.75
0 (51%) 67.18
1 (60%) 70.49
2 (61%) 71.37
3 (62%) 71.48
4 (62%) 71.57
5 (62%) 72.11
6 (62%) 72.05
7 (63%) 72.03
8 (63%) 72.18
9 (63%) 71.94
result accuracy by digit:
0 ( 0%) 98.00
1 ( 0%) 97.00
2 ( 0%) 100.00
3 ( 0%) 99.00
4 ( 0%) 96.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 99.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 68.02
1 (11%) 82.22
2 ( 3%) 80.08
3 ( 3%) 78.70
4 ( 2%) 78.18
5 ( 2%) 77.73
6 ( 2%) 78.38
7 ( 2%) 77.40
8 ( 2%) 79.36
9 ( 2%) 77.02
result accuracy by generalization:
1 (22.84%) 83.94
2 (23.00%) 77.44
3 (22.36%) 82.31
4 (15.84%) 62.78
5 (15.95%) 61.69
error cases:
7 0 [-1] [-1] 7 0
1 4 [-1] [-1] 1 4
1 2 [-1] [-1] 1 2
1 4 [-1] [-1] 1 4
0 4 [-1] [-1] 0 4
0 8 [-1] [-1] 0 8
4 0 [-1] [-1] 4 0
4 9 [-1] [-1] 4 9
4 1 [-1] [-1] 4 1
4 9 [-1] [-1] 4 9
test (Perception Acc=95.75, Head Acc=100.00, Result Acc=75.18)
