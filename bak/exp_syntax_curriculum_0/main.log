train: 18405 val: 3238 test: 58965
CUDA is available?: True
using cuda?: True
Namespace(curriculum=True, epochs=100, epochs_eval=5, excludes='!', output_dir='./outputs/exp_syntax_curriculum/', perception=False, resume=None, seed=314, semantics=False, syntax=True)
SymbolNet(
  (conv1): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (dropout1): Dropout2d(p=0.25, inplace=False)
  (dropout2): Dropout2d(p=0.5, inplace=False)
  (fc1): Linear(in_features=30976, out_features=128, bias=True)
  (fc2): Linear(in_features=128, out_features=14, bias=True)
)
use ground-truth syntax.
Symbol-00: None 0.00
Symbol-01: None 0.00
Symbol-02: None 0.00
Symbol-03: None 0.00
Symbol-04: None 0.00
Symbol-05: None 0.00
Symbol-06: None 0.00
Symbol-07: None 0.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Curriculum: [(0, 1), (5, 3), (50, 5), (100, inf)]
result accuracy by length:
1 ( 3%)  0.00
3 (12%)  0.00
5 (55%)  0.00
7 (29%)  0.00
result accuracy by symbol:
* (45%)  0.00
+ (45%)  0.00
- (45%)  0.00
/ (42%)  0.00
0 (23%)  0.00
1 (28%)  0.00
2 (29%)  0.00
3 (28%)  0.00
4 (28%)  0.00
5 (28%)  0.00
6 (28%)  0.00
7 (28%)  0.00
8 (27%)  0.00
9 (28%)  0.00
result accuracy by digit:
0 ( 0%)  0.00
1 ( 0%)  0.00
2 ( 0%)  0.00
3 ( 0%)  0.00
4 ( 0%)  0.00
5 ( 0%)  0.00
6 ( 0%)  0.00
7 ( 0%)  0.00
8 ( 0%)  0.00
9 ( 0%)  0.00
result accuracy by res:
0 (24%)  0.00
1 ( 9%)  0.00
2 ( 5%)  0.00
3 ( 5%)  0.00
4 ( 4%)  0.00
5 ( 4%)  0.00
6 ( 4%)  0.00
7 ( 4%)  0.00
8 ( 4%)  0.00
9 ( 4%)  0.00
result accuracy by condition:
long ( 0%)  0.00
seen (58%)  0.00
unseen (41%)  0.00
val (Perception Acc=6.43, Syntax Acc=100.00, Result Acc=0.00)
------------------------------
Epoch 0/99 (max_len=1, data=1000)
Train acc: 0.00 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  14 Counter({3: 84, 11: 80, 0: 78, 6: 78, 9: 76, 1: 76, 4: 75, 10: 74, 13: 70, 2: 69, 12: 65, 5: 60, 8: 59, 7: 56})
Dep:  Counter({(-1,): 1000})
Semantics: 14/0/13 (total/solved/learn).
Symbol-00 (int), Samples:  12,  Counter({((), 0): 12})
Symbol-01 (int), Samples:  12,  Counter({((), 6): 12})
Symbol-02 (int), Samples:  13,  Counter({((), 4): 13})
Symbol-03 (int), Samples:  14,  Counter({((), 0): 14})
Symbol-04 (int), Samples:  13,  Counter({((), 2): 13})
Symbol-05 (int), Samples:  13,  Counter({((), 5): 13})
Symbol-06 (int), Samples:  11,  Counter({((), 7): 11})
Symbol-08 (int), Samples:  10,  Counter({((), 0): 10})
Symbol-09 (int), Samples:  13,  Counter({((), 7): 13})
Symbol-10 (int), Samples:  12,  Counter({((), 4): 12})
Symbol-11 (int), Samples:  11,  Counter({((), 1): 11})
Symbol-12 (int), Samples:  12,  Counter({((), 2): 12})
Symbol-13 (int), Samples:  10,  Counter({((), 5): 10})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: None 0.00
Symbol-07: None 0.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 21s
------------------------------
Epoch 1/99 (max_len=1, data=1000)
Train acc: 5.34 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  14 Counter({13: 105, 2: 100, 1: 100, 6: 100, 4: 100, 5: 100, 11: 100, 0: 100, 3: 65, 12: 40, 7: 32, 10: 25, 9: 18, 8: 15})
Dep:  Counter({(-1,): 1000})
Semantics: 14/7/5 (total/solved/learn).
Symbol-03 (int), Samples:  24,  Counter({((), 8): 24})
Symbol-07 (int), Samples:  14,  Counter({((), 9): 14})
Symbol-10 (int), Samples:  10,  Counter({((), 9): 10})
Symbol-12 (int), Samples:  19,  Counter({((), 3): 19})
Symbol-13 (int), Samples:  40,  Counter({((), 8): 40})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 16s
------------------------------
Epoch 2/99 (max_len=1, data=1000)
Train acc: 6.83 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({2: 100, 12: 100, 6: 100, 4: 100, 1: 100, 5: 100, 7: 100, 11: 100, 0: 100, 3: 100})
Dep:  Counter({(-1,): 1000})
Semantics: 14/10/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 0s
------------------------------
Epoch 3/99 (max_len=1, data=1000)
Train acc: 7.91 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({4: 100, 1: 100, 5: 100, 11: 100, 0: 100, 2: 100, 7: 100, 12: 100, 6: 100, 3: 100})
Dep:  Counter({(-1,): 1000})
Semantics: 14/10/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 0s
------------------------------
Epoch 4/99 (max_len=1, data=1000)
Train acc: 7.53 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({12: 100, 4: 100, 11: 100, 1: 100, 2: 100, 6: 100, 7: 100, 5: 100, 3: 100, 0: 100})
Dep:  Counter({(-1,): 1000})
Learn perception with 1000 samples for 500 iterations, take 141 sec.
result accuracy by length:
1 ( 3%) 89.00
3 (12%)  0.00
5 (55%)  0.00
7 (29%)  0.00
result accuracy by symbol:
* (45%)  0.00
+ (45%)  0.00
- (45%)  0.00
/ (42%)  0.00
0 (23%)  1.29
1 (28%)  0.98
2 (29%)  0.85
3 (28%)  0.88
4 (28%)  1.10
5 (28%)  0.88
6 (28%)  1.10
7 (28%)  1.10
8 (27%)  0.80
9 (28%)  0.98
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 90.00
2 ( 0%) 80.00
3 ( 0%) 80.00
4 ( 0%) 100.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 70.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%)  1.28
1 ( 9%)  2.90
2 ( 5%)  4.19
3 ( 5%)  4.91
4 ( 4%)  6.62
5 ( 4%)  5.16
6 ( 4%)  7.14
7 ( 4%)  6.62
8 ( 4%)  4.79
9 ( 4%)  6.43
result accuracy by condition:
long ( 0%)  0.00
seen (58%)  4.71
unseen (41%)  0.00
val (Perception Acc=19.93, Syntax Acc=100.00, Result Acc=2.75)
Epoch time: 2m 23s
------------------------------
Epoch 5/99 (max_len=3, data=4405)
Train acc: 21.83 (abduce 99.86)
Hit samples:  4399  Ave length:  2.55
Symbols:  14 Counter({10: 1109, 9: 917, 2: 840, 7: 832, 1: 818, 3: 788, 6: 781, 11: 776, 5: 773, 13: 759, 12: 754, 4: 729, 0: 707, 8: 614})
Dep:  Counter({(1, -1, 1): 3399, (-1,): 1000})
Semantics: 14/10/4 (total/solved/learn).
Symbol-08 (int -> int -> int), Samples: 100,  Counter({((1, 4), 1): 2, ((0, 5), 0): 2, ((3, 0), 3): 2, ((6, 2), 12): 2, ((9, 6), 2): 2, ((8, 2), 4): 2, ((9, 5), 14): 2, ((0, 8), 8): 2, ((0, 1), 0): 2, ((5, 4), 10): 2, ((8, 3), 3): 2, ((9, 3), 12): 2, ((5, 1), 5): 2, ((2, 0), 2): 2, ((3, 5), 1): 2, ((8, 1), 8): 2, ((6, 5), 11): 2, ((2, 3), 6): 2, ((3, 8), 1): 2, ((4, 2), 9): 2, ((7, 6), 13): 2, ((7, 5), 35): 2, ((5, 0), 5): 2, ((6, 7), 7): 1, ((1, 1), 2): 1, ((6, 0), 6): 1, ((0, 6), 0): 1, ((9, 0), 9): 1, ((9, 2), 11): 1, ((6, 8), 48): 1, ((0, 7), 0): 1, ((3, 2), 6): 1, ((6, 6), 12): 1, ((0, 9), 0): 1, ((0, 3), 3): 1, ((4, 3), 7): 1, ((6, 4), 24): 1, ((2, 9), 11): 1, ((7, 7), 49): 1, ((2, 7), 1): 1, ((3, 4), 12): 1, ((8, 4), 32): 1, ((1, 0), 0): 1, ((0, 4), 0): 1, ((3, 1), 4): 1, ((5, 7), 12): 1, ((4, 4), 8): 1, ((3, 6), 9): 1, ((5, 9), 24): 1, ((2, 8), 10): 1, ((1, 6), 1): 1, ((5, 6), 1): 1, ((1, 8), 1): 1, ((7, 4), 11): 1, ((2, 5), 7): 1, ((9, 4), 13): 1, ((6, 9), 15): 1, ((4, 7), 12): 1, ((5, 3), 2): 1, ((3, 9), 27): 1, ((7, 9), 16): 1, ((4, 0), 4): 1, ((4, 9), 13): 1, ((5, 2), 3): 1, ((1, 3), 4): 1, ((5, 5), 25): 1, ((6, 3), 18): 1, ((1, 5), 1): 1, ((4, 1), 4): 1, ((3, 3), 9): 1, ((8, 6), 12): 1, ((9, 1), 10): 1, ((4, 5), 20): 1, ((8, 0), 8): 1, ((1, 2), 2): 1, ((2, 4), 1): 1, ((7, 1), 7): 1})
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((0, 8), 0): 2, ((2, 8), 16): 2, ((1, 6), 6): 2, ((5, 0), 0): 2, ((3, 5), 1): 2, ((4, 8), 32): 2, ((8, 7), 2): 2, ((2, 6), 8): 2, ((8, 0), 0): 2, ((7, 4), 11): 2, ((0, 9), 0): 2, ((3, 6), 1): 2, ((4, 6), 1): 2, ((8, 4), 2): 2, ((6, 0), 0): 2, ((9, 5), 2): 2, ((6, 3), 18): 2, ((9, 1), 9): 2, ((1, 4), 1): 2, ((1, 8), 8): 1, ((4, 1), 4): 1, ((1, 2), 8): 1, ((2, 5), 10): 1, ((7, 5), 2): 1, ((3, 1), 4): 1, ((6, 5), 2): 1, ((1, 1), 1): 1, ((5, 5), 10): 1, ((9, 3), 6): 1, ((7, 3), 10): 1, ((3, 7), 6): 1, ((6, 9), 1): 1, ((2, 4), 1): 1, ((3, 3), 9): 1, ((7, 8), 1): 1, ((7, 2), 4): 1, ((3, 0), 3): 1, ((7, 0), 0): 1, ((4, 7), 28): 1, ((4, 2), 6): 1, ((0, 0), 0): 1, ((6, 7), 28): 1, ((7, 6), 2): 1, ((9, 4), 36): 1, ((0, 6), 0): 1, ((1, 5), 5): 1, ((2, 2), 4): 1, ((1, 3), 1): 1, ((9, 0), 0): 1, ((5, 8), 40): 1, ((5, 9), 15): 1, ((5, 2), 3): 1, ((4, 9), 1): 1, ((2, 7), 14): 1, ((1, 9), 1): 1, ((2, 9), 1): 1, ((1, 7), 8): 1, ((5, 3), 8): 1, ((7, 9), 63): 1, ((3, 4), 12): 1, ((0, 4), 0): 1, ((8, 9), 17): 1, ((0, 2), 0): 1, ((3, 9), 1): 1, ((0, 7), 0): 1, ((6, 2), 4): 1, ((8, 6), 2): 1, ((9, 9), 81): 1, ((6, 4), 24): 1, ((9, 6), 45): 1, ((5, 7), 1): 1, ((8, 5), 40): 1, ((8, 8), 1): 1, ((5, 6), 0): 1, ((4, 5), 4): 1, ((8, 2), 6): 1, ((5, 4), 1): 1, ((0, 3), 0): 1, ((9, 2), 5): 1, ((9, 8), 2): 1, ((7, 1), 6): 1})
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((0, 1), 0): 3, ((0, 8), 0): 3, ((5, 3), 2): 2, ((1, 8), 8): 2, ((2, 7), 14): 2, ((6, 6), 12): 2, ((3, 1), 3): 2, ((7, 6), 42): 2, ((0, 2), 0): 2, ((7, 8), 56): 2, ((1, 7), 1): 2, ((8, 5), 40): 2, ((5, 1), 5): 2, ((5, 0), 0): 2, ((7, 0), 0): 2, ((4, 0), 0): 2, ((2, 3), 1): 2, ((0, 3), 0): 2, ((0, 7), 0): 2, ((8, 1), 8): 2, ((1, 5), 5): 2, ((8, 6), 48): 2, ((2, 2), 4): 2, ((8, 4), 32): 2, ((0, 4), 0): 2, ((5, 6), 30): 1, ((9, 1), 9): 1, ((2, 4), 8): 1, ((6, 4), 24): 1, ((9, 8), 72): 1, ((6, 2), 3): 1, ((8, 0), 0): 1, ((9, 3), 27): 1, ((2, 5), 7): 1, ((8, 3), 24): 1, ((7, 4), 28): 1, ((9, 6), 54): 1, ((7, 1), 7): 1, ((3, 6), 18): 1, ((2, 9), 18): 1, ((6, 7), 13): 1, ((4, 4), 8): 1, ((7, 7), 49): 1, ((0, 6), 0): 1, ((6, 8), 48): 1, ((1, 4), 1): 1, ((7, 2), 9): 1, ((8, 8), 64): 1, ((8, 7), 1): 1, ((5, 5), 25): 1, ((6, 1), 6): 1, ((2, 1), 2): 1, ((3, 2), 6): 1, ((5, 9), 45): 1, ((4, 9), 36): 1, ((0, 0), 0): 1, ((7, 9), 1): 1, ((4, 6), 24): 1, ((5, 2), 7): 1, ((1, 2), 2): 1, ((9, 7), 63): 1, ((4, 8), 32): 1, ((3, 8), 24): 1, ((3, 3), 6): 1, ((9, 4), 36): 1, ((4, 3), 12): 1, ((1, 3), 2): 1, ((8, 2), 16): 1, ((9, 0), 0): 1, ((1, 0), 0): 1, ((3, 5), 15): 1, ((9, 5), 14): 1, ((3, 4), 1): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((8, 6), 2): 2, ((2, 9), 1): 2, ((4, 3), 2): 2, ((9, 7), 2): 2, ((9, 3), 3): 2, ((9, 0), 9): 2, ((7, 4), 2): 2, ((1, 6), 1): 2, ((7, 9), 16): 2, ((1, 0), 1): 2, ((3, 5), 8): 2, ((7, 3), 4): 2, ((7, 6), 2): 2, ((1, 3), 4): 2, ((9, 8), 2): 2, ((4, 6), 1): 2, ((0, 5), 0): 2, ((4, 4), 1): 2, ((8, 4), 4): 2, ((8, 9), 1): 2, ((5, 8), 1): 1, ((5, 9), 1): 1, ((8, 3), 11): 1, ((6, 0), 6): 1, ((1, 2), 1): 1, ((0, 3), 3): 1, ((5, 5), 10): 1, ((6, 8), 1): 1, ((2, 5), 1): 1, ((1, 4), 1): 1, ((2, 7), 1): 1, ((5, 2), 7): 1, ((6, 9), 1): 1, ((8, 7), 2): 1, ((9, 6), 2): 1, ((4, 9), 1): 1, ((0, 1), 0): 1, ((7, 2), 4): 1, ((6, 3), 2): 1, ((7, 7), 1): 1, ((6, 7), 15): 1, ((5, 4), 2): 1, ((3, 0), 3): 1, ((3, 4), 7): 1, ((6, 2), 3): 1, ((0, 4), 4): 1, ((0, 0), 0): 1, ((2, 1), 3): 1, ((4, 8), 12): 1, ((0, 7), 0): 1, ((2, 4), 6): 1, ((7, 8), 15): 1, ((3, 6), 1): 1, ((8, 1), 8): 1, ((2, 8), 16): 1, ((6, 6), 1): 1, ((5, 7), 0): 1, ((2, 6), 1): 1, ((9, 5), 14): 1, ((1, 7), 7): 1, ((3, 7), 21): 1, ((5, 6), 1): 1, ((3, 3), 1): 1, ((4, 7), 1): 1, ((0, 9), 0): 1, ((4, 0), 4): 1, ((5, 0), 5): 1, ((8, 5), 2): 1, ((4, 2), 2): 1, ((2, 0), 2): 1, ((4, 5), 1): 1, ((8, 2), 4): 1, ((0, 6), 0): 1, ((3, 9), 1): 1, ((7, 5), 12): 1, ((2, 2), 4): 1, ((7, 1), 1): 1, ((3, 1), 2): 1, ((1, 5), 6): 1, ((9, 2), 5): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 0.44
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 0.54
Epoch time: 13m 46s
------------------------------
Epoch 6/99 (max_len=3, data=4405)
Train acc: 21.57 (abduce 99.95)
Hit samples:  4403  Ave length:  2.55
Symbols:  14 Counter({8: 1163, 13: 1087, 7: 828, 2: 822, 3: 811, 1: 802, 11: 787, 5: 777, 6: 770, 12: 751, 4: 739, 0: 719, 10: 669, 9: 484})
Dep:  Counter({(1, -1, 1): 3403, (-1,): 1000})
100 [((0, 0), 0), ((0, 1), 0), ((0, 2), 0), ((0, 3), 0), ((0, 4), 0), ((0, 5), 0), ((0, 6), 0), ((0, 7), 0), ((0, 8), 0), ((0, 9), 0), ((1, 0), 1), ((1, 1), 2), ((1, 2), 3), ((1, 3), 4), ((1, 4), 5), ((1, 5), 6), ((1, 6), 6), ((1, 7), 8), ((1, 8), 9), ((1, 9), 10), ((2, 0), 2), ((2, 1), 3), ((2, 2), 4), ((2, 3), 5), ((2, 4), 6), ((2, 5), 7), ((2, 6), 8), ((2, 7), 14), ((2, 8), 10), ((2, 9), 5), ((3, 0), 3), ((3, 1), 4), ((3, 2), 5), ((3, 3), 6), ((3, 4), 7), ((3, 5), 8), ((3, 6), 9), ((3, 7), 21), ((3, 8), 11), ((3, 9), 12), ((4, 0), 4), ((4, 1), 5), ((4, 2), 6), ((4, 3), 7), ((4, 4), 8), ((4, 5), 9), ((4, 6), 10), ((4, 7), 11), ((4, 8), 12), ((4, 9), 13), ((5, 0), 5), ((5, 1), 6), ((5, 2), 7), ((5, 3), 8), ((5, 4), 9), ((5, 5), 10), ((5, 6), 11), ((5, 7), 12), ((5, 8), 13), ((5, 9), 14), ((6, 0), 6), ((6, 1), 7), ((6, 2), 8), ((6, 3), 9), ((6, 4), 10), ((6, 5), 11), ((6, 6), 12), ((6, 7), 13), ((6, 8), 14), ((6, 9), 15), ((7, 0), 7), ((7, 1), 8), ((7, 2), 9), ((7, 3), 3), ((7, 4), 11), ((7, 5), 12), ((7, 6), 42), ((7, 7), 14), ((7, 8), 15), ((7, 9), 16), ((8, 0), 8), ((8, 1), 8), ((8, 2), 4), ((8, 3), 11), ((8, 4), 12), ((8, 5), 13), ((8, 6), 14), ((8, 7), 15), ((8, 8), 16), ((8, 9), 17), ((9, 0), 9), ((9, 1), 9), ((9, 2), 7), ((9, 3), 12), ((9, 4), 13), ((9, 5), 14), ((9, 6), 54), ((9, 7), 16), ((9, 8), 17), ((9, 9), 18)]
Semantics: 14/11/3 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((8, 0), 0): 3, ((9, 5), 45): 2, ((0, 9), 9): 2, ((9, 0), 0): 2, ((5, 7), 35): 2, ((6, 8), 48): 2, ((4, 3), 12): 2, ((6, 2), 12): 2, ((4, 9), 36): 2, ((8, 1), 7): 2, ((2, 6), 12): 2, ((9, 2), 18): 2, ((4, 0), 0): 2, ((8, 5), 40): 2, ((2, 1), 2): 2, ((5, 9), 0): 2, ((7, 0), 0): 2, ((1, 7), 7): 2, ((0, 5), 5): 2, ((9, 6), 45): 2, ((9, 1), 9): 2, ((1, 2), 2): 2, ((5, 2), 3): 2, ((5, 6), 30): 2, ((7, 6), 2): 2, ((1, 1), 10): 1, ((8, 2), 16): 1, ((2, 2), 14): 1, ((7, 3), 21): 1, ((1, 6), 6): 1, ((3, 2), 7): 1, ((8, 4), 4): 1, ((4, 5), 0): 1, ((0, 4), 4): 1, ((5, 5), 25): 1, ((4, 8), 0): 1, ((0, 2), 7): 1, ((6, 9), 54): 1, ((3, 3), 15): 1, ((8, 6), 48): 1, ((5, 0), 0): 1, ((6, 6), 2): 1, ((0, 1), 5): 1, ((2, 4), 5): 1, ((1, 9), 9): 1, ((7, 8), 56): 1, ((2, 8), 11): 1, ((7, 4), 28): 1, ((6, 3), 54): 1, ((0, 7), 7): 1, ((2, 7), 7): 1, ((8, 3), 3): 1, ((5, 3), 15): 1, ((0, 8), 8): 1, ((3, 9), 27): 1, ((2, 3), 6): 1, ((5, 8), 40): 1, ((9, 9), 56): 1, ((3, 5), 15): 1, ((6, 5), 30): 1, ((9, 3), 3): 1, ((1, 0), 0): 1, ((5, 1), 4): 1, ((8, 8), 11): 1, ((4, 6), 24): 1, ((4, 4), 16): 1, ((6, 7), 28): 1, ((2, 0), 0): 1, ((7, 2), 14): 1, ((1, 4), 4): 1, ((7, 1), 7): 1, ((4, 7), 6): 1, ((4, 1), 4): 1, ((4, 2), 8): 1})
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((3, 3), 9): 3, ((3, 1), 3): 3, ((3, 0), 0): 2, ((8, 6), 48): 2, ((6, 8), 48): 2, ((1, 9), 9): 2, ((1, 8), 8): 2, ((6, 4), 24): 2, ((9, 7), 63): 2, ((8, 5), 40): 2, ((3, 4), 12): 2, ((2, 0), 0): 2, ((5, 0), 0): 2, ((8, 9), 72): 2, ((6, 1), 6): 2, ((1, 4), 4): 2, ((2, 4), 8): 2, ((9, 6), 54): 2, ((8, 3), 24): 2, ((4, 1), 4): 2, ((1, 6), 6): 1, ((4, 9), 45): 1, ((6, 6), 36): 1, ((8, 7), 56): 1, ((7, 4), 4): 1, ((6, 0), 0): 1, ((0, 6), 11): 1, ((7, 0), 0): 1, ((6, 5), 30): 1, ((1, 2), 2): 1, ((9, 3), 27): 1, ((8, 4), 32): 1, ((0, 8), 16): 1, ((2, 5), 10): 1, ((1, 0), 0): 1, ((3, 6), 18): 1, ((0, 0), 4): 1, ((5, 1), 5): 1, ((7, 2), 1): 1, ((3, 5), 15): 1, ((9, 2), 18): 1, ((5, 3), 15): 1, ((9, 4), 36): 1, ((2, 6), 12): 1, ((5, 2), 10): 1, ((1, 1), 35): 1, ((0, 3), 3): 1, ((3, 8), 24): 1, ((4, 4), 16): 1, ((4, 5), 20): 1, ((8, 2), 16): 1, ((1, 5), 5): 1, ((7, 3), 3): 1, ((4, 3), 2): 1, ((7, 9), 63): 1, ((3, 2), 6): 1, ((0, 9), 14): 1, ((4, 7), 28): 1, ((6, 7), 42): 1, ((8, 8), 64): 1, ((4, 2), 8): 1, ((4, 8), 72): 1, ((7, 1), 7): 1, ((0, 5), 35): 1, ((6, 3), 18): 1, ((7, 7), 49): 1, ((7, 6), 11): 1, ((9, 8), 72): 1, ((8, 1), 7): 1, ((7, 8), 49): 1, ((9, 9), 81): 1, ((2, 2), 42): 1, ((0, 4), 32): 1, ((3, 9), 15): 1, ((5, 8), 40): 1, ((2, 3), 10): 1, ((2, 1), 2): 1, ((9, 0), 0): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((7, 0), 7): 2, ((1, 2), 1): 2, ((5, 6), 1): 2, ((3, 8), 1): 2, ((3, 0), 3): 2, ((7, 5), 2): 2, ((4, 8), 1): 2, ((5, 3), 2): 2, ((9, 0), 9): 2, ((7, 9), 1): 2, ((1, 6), 1): 2, ((4, 0), 4): 2, ((4, 4), 1): 2, ((0, 3), 3): 2, ((7, 4), 2): 2, ((6, 0), 6): 2, ((6, 8), 1): 2, ((3, 9), 1): 2, ((8, 7), 2): 2, ((8, 5), 2): 2, ((2, 8), 1): 2, ((8, 1), 8): 1, ((9, 5), 2): 1, ((0, 6), 6): 1, ((2, 2), 1): 1, ((7, 6), 1): 1, ((2, 6), 1): 1, ((4, 7), 1): 1, ((1, 0), 1): 1, ((4, 3), 1): 1, ((5, 8), 1): 1, ((9, 4), 2): 1, ((5, 1), 7): 1, ((6, 1), 6): 1, ((6, 9), 1): 1, ((9, 1), 9): 1, ((8, 2), 4): 1, ((0, 5), 5): 1, ((6, 6), 1): 1, ((0, 9), 9): 1, ((1, 1), 1): 1, ((6, 3), 2): 1, ((7, 8), 1): 1, ((7, 2), 4): 1, ((2, 5), 1): 1, ((9, 8), 1): 1, ((5, 2), 3): 1, ((1, 7), 1): 1, ((4, 2), 2): 1, ((6, 2), 1): 1, ((3, 2), 1): 1, ((6, 4), 2): 1, ((4, 1), 2): 1, ((2, 0), 2): 1, ((9, 3), 3): 1, ((3, 6), 1): 1, ((0, 2), 2): 1, ((0, 4), 4): 1, ((0, 0), 0): 1, ((8, 6), 2): 1, ((7, 7), 1): 1, ((4, 6), 1): 1, ((2, 3), 1): 1, ((1, 8), 1): 1, ((8, 4), 2): 1, ((1, 4), 1): 1, ((9, 9), 1): 1, ((7, 1), 7): 1, ((2, 7), 1): 1, ((3, 7), 1): 1, ((8, 9), 1): 1, ((7, 3), 3): 1, ((9, 2), 7): 1, ((0, 1), 1): 1, ((9, 6), 2): 1, ((1, 9), 1): 1, ((5, 7), 1): 1, ((2, 4), 1): 1, ((5, 5), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 0.88
Epoch time: 13m 49s
------------------------------
Epoch 7/99 (max_len=3, data=4405)
Train acc: 22.16 (abduce 99.98)
Hit samples:  4404  Ave length:  2.55
Symbols:  14 Counter({13: 1130, 8: 836, 1: 822, 7: 815, 2: 813, 6: 801, 10: 799, 11: 793, 3: 787, 5: 771, 12: 760, 4: 744, 0: 702, 9: 639})
Dep:  Counter({(1, -1, 1): 3404, (-1,): 1000})
Semantics: 14/11/3 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((6, 0), 0): 3, ((1, 8), 8): 3, ((8, 9), 72): 2, ((8, 5), 40): 2, ((6, 7), 42): 2, ((5, 0), 0): 2, ((9, 3), 3): 2, ((4, 5), 20): 2, ((5, 4), 2): 2, ((1, 3), 3): 2, ((3, 1), 3): 2, ((6, 8), 48): 2, ((1, 4), 4): 2, ((5, 6), 30): 2, ((0, 3), 3): 2, ((2, 5), 10): 2, ((4, 9), 36): 2, ((6, 1), 6): 2, ((7, 0), 4): 1, ((2, 4), 2): 1, ((8, 2), 4): 1, ((3, 2), 2): 1, ((1, 9), 9): 1, ((6, 4), 24): 1, ((4, 2), 4): 1, ((4, 6), 0): 1, ((0, 6), 4): 1, ((4, 4), 16): 1, ((7, 4), 28): 1, ((4, 0), 0): 1, ((8, 3), 3): 1, ((2, 6), 12): 1, ((9, 4), 3): 1, ((1, 6), 6): 1, ((1, 7), 7): 1, ((5, 1), 5): 1, ((7, 9), 2): 1, ((5, 5), 2): 1, ((8, 0), 0): 1, ((0, 9), 9): 1, ((1, 0), 0): 1, ((0, 7), 7): 1, ((9, 0), 0): 1, ((7, 1), 28): 1, ((9, 1), 9): 1, ((3, 9), 27): 1, ((7, 8), 63): 1, ((1, 5), 5): 1, ((5, 7), 5): 1, ((2, 1), 2): 1, ((7, 6), 2): 1, ((1, 2), 2): 1, ((8, 6), 48): 1, ((0, 5), 5): 1, ((3, 4), 3): 1, ((6, 9), 54): 1, ((4, 7), 20): 1, ((9, 8), 72): 1, ((8, 8), 64): 1, ((8, 4), 32): 1, ((5, 8), 40): 1, ((2, 3), 6): 1, ((1, 1), 6): 1, ((3, 5), 15): 1, ((8, 7), 56): 1, ((2, 0), 0): 1, ((6, 3), 18): 1, ((6, 6), 36): 1, ((3, 6), 2): 1, ((4, 1), 4): 1, ((7, 7), 49): 1, ((7, 5), 35): 1, ((2, 2), 0): 1, ((6, 2), 4): 1, ((4, 8), 0): 1, ((9, 2), 5): 1, ((9, 5), 1): 1, ((9, 9), 2): 1, ((9, 6), 54): 1, ((0, 1), 8): 1})
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 0), 0): 2, ((7, 6), 42): 2, ((9, 0), 0): 2, ((8, 6), 48): 2, ((1, 9), 9): 2, ((4, 0), 0): 2, ((5, 6), 30): 2, ((3, 4), 12): 2, ((8, 4), 32): 2, ((4, 1), 4): 2, ((9, 9), 81): 2, ((6, 0), 0): 2, ((9, 5), 45): 2, ((8, 2), 16): 2, ((8, 5), 40): 2, ((5, 8), 40): 2, ((7, 0), 0): 2, ((2, 7), 14): 2, ((8, 7), 56): 2, ((9, 3), 27): 2, ((4, 4), 16): 2, ((7, 9), 63): 2, ((9, 4), 36): 1, ((6, 2), 12): 1, ((7, 7), 49): 1, ((5, 1), 5): 1, ((2, 4), 8): 1, ((0, 8), 8): 1, ((6, 6), 36): 1, ((2, 1), 2): 1, ((8, 8), 64): 1, ((3, 2), 6): 1, ((4, 5), 20): 1, ((0, 5), 5): 1, ((0, 6), 6): 1, ((5, 2), 10): 1, ((7, 4), 28): 1, ((1, 6), 6): 1, ((8, 9), 72): 1, ((2, 0), 0): 1, ((3, 9), 27): 1, ((1, 7), 7): 1, ((6, 3), 18): 1, ((6, 9), 54): 1, ((6, 5), 30): 1, ((2, 9), 18): 1, ((0, 9), 9): 1, ((2, 8), 16): 1, ((4, 9), 36): 1, ((1, 4), 4): 1, ((8, 3), 24): 1, ((5, 0), 0): 1, ((2, 3), 6): 1, ((9, 2), 5): 1, ((7, 1), 7): 1, ((9, 7), 63): 1, ((4, 2), 8): 1, ((5, 7), 35): 1, ((4, 8), 32): 1, ((0, 2), 2): 1, ((4, 3), 12): 1, ((1, 3), 3): 1, ((1, 2), 2): 1, ((1, 5), 5): 1, ((1, 8), 8): 1, ((8, 1), 8): 1, ((2, 6), 12): 1, ((7, 3), 21): 1, ((5, 5), 35): 1, ((2, 5), 10): 1, ((0, 7), 7): 1, ((9, 1), 9): 1, ((1, 1), 0): 1, ((3, 6), 18): 1, ((3, 3), 9): 1, ((9, 6), 54): 1, ((0, 3), 3): 1, ((0, 1), 2): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((1, 2), 1): 3, ((5, 5), 1): 2, ((6, 8), 1): 2, ((7, 9), 1): 2, ((9, 9), 1): 2, ((3, 5), 1): 2, ((2, 7), 1): 2, ((1, 3), 1): 2, ((6, 0), 6): 2, ((2, 4), 1): 2, ((6, 9), 1): 2, ((9, 1), 9): 2, ((7, 4), 2): 2, ((3, 4), 1): 2, ((9, 5), 2): 2, ((7, 6), 1): 2, ((8, 8), 1): 2, ((5, 7), 1): 2, ((6, 4), 2): 2, ((4, 2), 2): 1, ((4, 8), 1): 1, ((9, 0), 9): 1, ((6, 5), 2): 1, ((4, 6), 1): 1, ((1, 4), 1): 1, ((9, 8), 1): 1, ((2, 8), 1): 1, ((1, 1), 1): 1, ((2, 3), 1): 1, ((0, 7), 7): 1, ((8, 4), 2): 1, ((8, 3), 1): 1, ((5, 6), 1): 1, ((1, 6), 1): 1, ((9, 4), 5): 1, ((1, 0), 1): 1, ((0, 1), 1): 1, ((8, 0), 8): 1, ((7, 5), 2): 1, ((8, 1), 8): 1, ((0, 9), 9): 1, ((0, 3), 3): 1, ((3, 7), 1): 1, ((5, 8), 1): 1, ((2, 2), 1): 1, ((3, 2), 1): 1, ((6, 1), 6): 1, ((2, 6), 1): 1, ((4, 1), 4): 1, ((3, 0), 3): 1, ((2, 0), 2): 1, ((9, 3), 3): 1, ((5, 3), 2): 1, ((7, 1), 7): 1, ((0, 4), 4): 1, ((8, 6), 2): 1, ((0, 5), 5): 1, ((8, 2), 4): 1, ((0, 6), 6): 1, ((5, 0), 5): 1, ((5, 1), 1): 1, ((4, 7), 1): 1, ((4, 4), 1): 1, ((9, 2), 7): 1, ((0, 0), 0): 1, ((1, 7), 1): 1, ((2, 1), 2): 1, ((1, 9), 1): 1, ((5, 2), 3): 1, ((2, 9), 1): 1, ((4, 3), 1): 1, ((1, 8), 1): 1, ((9, 7), 2): 1, ((6, 6), 1): 1, ((8, 9), 1): 1, ((3, 8), 1): 1, ((7, 7), 1): 1, ((3, 3), 1): 1, ((7, 3), 3): 1, ((4, 9), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 0.84
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 0.96
Epoch time: 13m 50s
------------------------------
Epoch 8/99 (max_len=3, data=4405)
Train acc: 22.11 (abduce 100.00)
Hit samples:  4405  Ave length:  2.55
Symbols:  14 Counter({10: 1151, 13: 1007, 7: 830, 2: 829, 8: 815, 1: 803, 6: 797, 3: 795, 11: 793, 5: 777, 12: 735, 4: 730, 0: 721, 9: 432})
Dep:  Counter({(1, -1, 1): 3405, (-1,): 1000})
100 [((0, 0), 0), ((0, 1), 1), ((0, 2), 2), ((0, 3), 3), ((0, 4), 4), ((0, 5), 5), ((0, 6), 6), ((0, 7), 7), ((0, 8), 8), ((0, 9), 9), ((1, 0), 0), ((1, 1), 1), ((1, 2), 2), ((1, 3), 3), ((1, 4), 4), ((1, 5), 5), ((1, 6), 6), ((1, 7), 7), ((1, 8), 8), ((1, 9), 9), ((2, 0), 0), ((2, 1), 2), ((2, 2), 4), ((2, 3), 6), ((2, 4), 8), ((2, 5), 10), ((2, 6), 12), ((2, 7), 14), ((2, 8), 16), ((2, 9), 18), ((3, 0), 0), ((3, 1), 3), ((3, 2), 6), ((3, 3), 9), ((3, 4), 12), ((3, 5), 15), ((3, 6), 18), ((3, 7), 21), ((3, 8), 24), ((3, 9), 27), ((4, 0), 0), ((4, 1), 4), ((4, 2), 8), ((4, 3), 12), ((4, 4), 16), ((4, 5), 20), ((4, 6), 24), ((4, 7), 28), ((4, 8), 32), ((4, 9), 36), ((5, 0), 0), ((5, 1), 5), ((5, 2), 10), ((5, 3), 15), ((5, 4), 20), ((5, 5), 25), ((5, 6), 30), ((5, 7), 35), ((5, 8), 40), ((5, 9), 45), ((6, 0), 0), ((6, 1), 6), ((6, 2), 12), ((6, 3), 18), ((6, 4), 24), ((6, 5), 30), ((6, 6), 36), ((6, 7), 42), ((6, 8), 48), ((6, 9), 54), ((7, 0), 0), ((7, 1), 7), ((7, 2), 14), ((7, 3), 21), ((7, 4), 28), ((7, 5), 35), ((7, 6), 42), ((7, 7), 49), ((7, 8), 56), ((7, 9), 63), ((8, 0), 0), ((8, 1), 8), ((8, 2), 16), ((8, 3), 24), ((8, 4), 32), ((8, 5), 40), ((8, 6), 48), ((8, 7), 56), ((8, 8), 64), ((8, 9), 72), ((9, 0), 0), ((9, 1), 9), ((9, 2), 18), ((9, 3), 27), ((9, 4), 36), ((9, 5), 45), ((9, 6), 54), ((9, 7), 63), ((9, 8), 72), ((9, 9), 81)]
Semantics: 14/12/2 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((5, 4), 2): 3, ((8, 3), 5): 3, ((9, 3), 3): 3, ((6, 2), 3): 3, ((7, 2), 4): 2, ((9, 4), 5): 2, ((3, 8), 0): 2, ((9, 1), 3): 2, ((8, 1), 7): 2, ((2, 3), 21): 2, ((2, 2), 2): 2, ((6, 1), 12): 2, ((6, 7), 30): 2, ((5, 6), 2): 2, ((1, 9), 12): 2, ((9, 2), 5): 2, ((3, 5), 2): 2, ((9, 8), 2): 2, ((8, 6), 12): 2, ((8, 8), 2): 2, ((2, 4), 11): 2, ((7, 1), 6): 1, ((4, 5), 35): 1, ((1, 2), 6): 1, ((0, 4), 13): 1, ((4, 7), 0): 1, ((7, 5), 21): 1, ((6, 0), 1): 1, ((8, 9), 24): 1, ((2, 7), 10): 1, ((7, 8), 2): 1, ((1, 1), 6): 1, ((7, 9), 7): 1, ((5, 0), 9): 1, ((4, 0), 1): 1, ((7, 0), 14): 1, ((6, 5), 2): 1, ((0, 7), 4): 1, ((1, 8), 3): 1, ((8, 2), 6): 1, ((7, 7), 10): 1, ((3, 3), 21): 1, ((9, 9), 3): 1, ((6, 6), 8): 1, ((4, 1), 1): 1, ((2, 6), 6): 1, ((6, 3), 3): 1, ((4, 3), 2): 1, ((9, 5), 4): 1, ((0, 8), 72): 1, ((5, 7), 10): 1, ((8, 7), 2): 1, ((1, 6), 9): 1, ((0, 5), 7): 1, ((0, 3), 8): 1, ((3, 0), 9): 1, ((3, 9), 14): 1, ((9, 6), 11): 1, ((6, 4), 12): 1, ((7, 6), 2): 1, ((8, 5), 12): 1, ((3, 1), 21): 1, ((4, 4), 5): 1, ((2, 9), 0): 1, ((5, 2), 3): 1, ((3, 6), 12): 1, ((7, 3), 4): 1, ((4, 2), 14): 1, ((8, 0), 48): 1, ((1, 3), 8): 1, ((4, 8), 0): 1, ((8, 4), 16): 1, ((1, 4), 8): 1, ((9, 0), 8): 1, ((5, 9), 3): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((8, 6), 2): 3, ((6, 9), 1): 2, ((1, 9), 1): 2, ((8, 4), 2): 2, ((4, 8), 1): 2, ((8, 0), 8): 2, ((1, 4), 1): 2, ((5, 9), 1): 2, ((2, 7), 1): 2, ((1, 2), 1): 2, ((8, 9), 1): 2, ((9, 7), 2): 2, ((9, 9), 1): 2, ((1, 8), 1): 2, ((1, 3), 1): 2, ((1, 0), 1): 2, ((4, 3), 2): 2, ((6, 8), 1): 2, ((3, 6), 1): 2, ((3, 4), 1): 2, ((7, 4), 2): 2, ((4, 0), 4): 1, ((6, 6), 1): 1, ((0, 5), 1): 1, ((6, 4), 2): 1, ((6, 2), 4): 1, ((7, 3), 2): 1, ((7, 5), 2): 1, ((6, 7), 1): 1, ((8, 5), 2): 1, ((1, 5), 1): 1, ((9, 5), 2): 1, ((5, 5), 1): 1, ((0, 0), 0): 1, ((0, 8), 14): 1, ((1, 7), 1): 1, ((4, 2), 2): 1, ((5, 2), 3): 1, ((4, 4), 1): 1, ((8, 3), 3): 1, ((0, 2), 1): 1, ((3, 9), 1): 1, ((8, 8), 1): 1, ((1, 1), 1): 1, ((0, 6), 11): 1, ((8, 1), 1): 1, ((5, 3), 2): 1, ((3, 7), 1): 1, ((0, 1), 1): 1, ((5, 6), 1): 1, ((8, 2), 4): 1, ((0, 4), 2): 1, ((3, 2), 1): 1, ((9, 1), 8): 1, ((8, 7), 2): 1, ((2, 2), 1): 1, ((9, 6), 2): 1, ((7, 6), 1): 1, ((3, 3), 1): 1, ((2, 0), 1): 1, ((2, 3), 1): 1, ((4, 1), 2): 1, ((6, 3), 2): 1, ((2, 5), 1): 1, ((2, 4), 1): 1, ((2, 9), 1): 1, ((4, 5), 1): 1, ((9, 0), 9): 1, ((4, 9), 1): 1, ((9, 3), 3): 1, ((5, 4), 1): 1, ((7, 8), 1): 1, ((7, 0), 7): 1, ((1, 6), 1): 1, ((4, 7), 1): 1, ((3, 5), 1): 1, ((9, 4), 5): 1, ((3, 8), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 0.87
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 31s
------------------------------
Epoch 9/99 (max_len=3, data=4405)
Train acc: 22.14 (abduce 99.98)
Hit samples:  4404  Ave length:  2.55
Symbols:  14 Counter({13: 1159, 7: 839, 2: 822, 8: 817, 1: 808, 6: 798, 3: 793, 11: 768, 5: 761, 12: 751, 10: 743, 4: 736, 0: 732, 9: 685})
Dep:  Counter({(1, -1, 1): 3404, (-1,): 1000})
Learn perception with 3264 samples for 500 iterations, take 28 sec.
result accuracy by length:
1 ( 3%) 91.00
3 (12%) 55.64
5 (55%) 31.39
7 (29%) 20.95
result accuracy by symbol:
* (45%) 32.24
+ (45%) 35.28
- (45%) 11.56
/ (42%) 31.83
0 (23%) 22.61
1 (28%) 28.59
2 (29%) 30.61
3 (28%) 31.21
4 (28%) 29.89
5 (28%) 30.26
6 (28%) 32.93
7 (28%) 29.64
8 (27%) 32.35
9 (28%) 29.90
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 80.00
3 ( 0%) 90.00
4 ( 0%) 80.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%)  6.15
1 ( 9%) 72.90
2 ( 5%) 49.21
3 ( 5%) 24.54
4 ( 4%) 19.87
5 ( 4%) 32.90
6 ( 4%) 35.71
7 ( 4%) 31.79
8 ( 4%) 37.67
9 ( 4%) 40.71
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 37.94
unseen (41%) 26.19
val (Perception Acc=19.79, Syntax Acc=100.00, Result Acc=33.05)
Epoch time: 0m 34s
------------------------------
Epoch 10/99 (max_len=3, data=4405)
Train acc: 58.95 (abduce 98.18)
Hit samples:  4325  Ave length:  2.54
Symbols:  14 Counter({13: 1242, 8: 1103, 10: 978, 7: 811, 1: 793, 3: 774, 11: 767, 0: 763, 12: 762, 2: 754, 6: 754, 4: 739, 5: 733, 9: 2})
Dep:  Counter({(1, -1, 1): 3325, (-1,): 1000})
Semantics: 14/12/1 (total/solved/learn).
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((6, 4), 2): 3, ((8, 4), 2): 2, ((9, 6), 2): 2, ((6, 8), 1): 2, ((8, 8), 1): 2, ((2, 7), 1): 2, ((5, 6), 1): 2, ((7, 5), 2): 2, ((8, 5), 2): 2, ((9, 7), 2): 2, ((4, 2), 2): 2, ((3, 5), 1): 2, ((4, 4), 1): 2, ((5, 3), 2): 2, ((4, 6), 1): 2, ((5, 2), 3): 2, ((6, 3), 2): 2, ((9, 3), 3): 2, ((4, 7), 1): 2, ((9, 0), 9): 2, ((7, 7), 1): 2, ((1, 4), 1): 1, ((5, 4), 1): 1, ((0, 8), 1): 1, ((0, 1), 1): 1, ((3, 9), 1): 1, ((8, 3), 3): 1, ((7, 9), 1): 1, ((0, 4), 1): 1, ((8, 6), 2): 1, ((5, 7), 1): 1, ((0, 0), 0): 1, ((5, 9), 1): 1, ((2, 0), 2): 1, ((0, 2), 7): 1, ((2, 6), 1): 1, ((1, 8), 1): 1, ((7, 6), 1): 1, ((1, 9), 1): 1, ((1, 1), 1): 1, ((4, 0), 4): 1, ((1, 2), 1): 1, ((6, 7), 1): 1, ((3, 0), 3): 1, ((3, 4), 1): 1, ((9, 4), 3): 1, ((4, 5), 1): 1, ((6, 1), 5): 1, ((3, 1), 2): 1, ((7, 4), 2): 1, ((1, 6), 1): 1, ((7, 0), 7): 1, ((4, 3), 1): 1, ((4, 1), 3): 1, ((0, 7), 1): 1, ((3, 3), 1): 1, ((8, 2), 4): 1, ((1, 3), 1): 1, ((6, 2), 3): 1, ((2, 3), 1): 1, ((6, 5), 1): 1, ((9, 8), 1): 1, ((8, 0), 8): 1, ((1, 5), 1): 1, ((4, 9), 1): 1, ((5, 8), 1): 1, ((5, 1), 4): 1, ((3, 8), 1): 1, ((4, 8), 1): 1, ((7, 8), 1): 1, ((8, 9), 1): 1, ((3, 7), 1): 1, ((2, 8), 1): 1, ((8, 1), 7): 1, ((3, 6), 1): 1, ((6, 6), 1): 1, ((0, 6), 1): 1, ((5, 5), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 0.88
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 24s
------------------------------
Epoch 11/99 (max_len=3, data=4405)
Train acc: 58.83 (abduce 98.43)
Hit samples:  4336  Ave length:  2.54
Symbols:  14 Counter({13: 1234, 8: 1099, 10: 997, 7: 783, 12: 780, 1: 778, 3: 776, 11: 774, 2: 768, 4: 761, 5: 756, 6: 749, 0: 747, 9: 6})
Dep:  Counter({(1, -1, 1): 3336, (-1,): 1000})
Semantics: 14/12/1 (total/solved/learn).
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((4, 2), 2): 3, ((5, 2), 3): 2, ((2, 8), 1): 2, ((5, 4), 1): 2, ((4, 8), 1): 2, ((5, 9), 1): 2, ((1, 8), 1): 2, ((7, 4), 2): 2, ((4, 4), 1): 2, ((3, 8), 1): 2, ((7, 7), 1): 2, ((9, 9), 1): 2, ((6, 4), 2): 2, ((2, 7), 1): 2, ((8, 7), 1): 2, ((7, 5), 2): 2, ((1, 4), 1): 2, ((8, 4), 2): 2, ((6, 0), 6): 2, ((5, 3), 2): 2, ((2, 3), 1): 2, ((1, 5), 1): 2, ((5, 7), 1): 2, ((8, 6), 2): 1, ((7, 1), 6): 1, ((9, 5), 2): 1, ((2, 0), 2): 1, ((1, 1), 1): 1, ((6, 6), 1): 1, ((1, 0), 1): 1, ((6, 7), 1): 1, ((4, 6), 1): 1, ((1, 3), 1): 1, ((5, 1), 4): 1, ((2, 6), 1): 1, ((8, 2), 4): 1, ((5, 8), 1): 1, ((1, 9), 1): 1, ((3, 1), 2): 1, ((9, 4), 5): 1, ((0, 6), 1): 1, ((2, 5), 1): 1, ((4, 7), 1): 1, ((6, 3), 3): 1, ((8, 3), 5): 1, ((9, 8), 1): 1, ((0, 7), 1): 1, ((4, 9), 1): 1, ((3, 6), 1): 1, ((1, 7), 1): 1, ((3, 0), 3): 1, ((5, 6), 1): 1, ((3, 4), 1): 1, ((6, 8), 1): 1, ((9, 6), 2): 1, ((3, 2), 1): 1, ((3, 9), 1): 1, ((2, 2), 1): 1, ((4, 3), 1): 1, ((9, 0), 9): 1, ((4, 1), 3): 1, ((6, 2), 3): 1, ((7, 0), 7): 1, ((1, 6), 1): 1, ((9, 1), 8): 1, ((2, 4), 1): 1, ((0, 9), 1): 1, ((0, 1), 1): 1, ((6, 1), 5): 1, ((7, 6), 1): 1, ((4, 5), 1): 1, ((3, 5), 1): 1, ((1, 2), 1): 1, ((9, 3), 3): 1, ((7, 3), 3): 1, ((9, 2), 5): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 0.88
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 28s
------------------------------
Epoch 12/99 (max_len=3, data=4405)
Train acc: 57.67 (abduce 97.78)
Hit samples:  4307  Ave length:  2.54
Symbols:  14 Counter({13: 1218, 8: 1067, 10: 1018, 1: 793, 7: 791, 12: 779, 3: 774, 11: 765, 0: 760, 2: 752, 4: 742, 6: 735, 5: 723, 9: 4})
Dep:  Counter({(1, -1, 1): 3307, (-1,): 1000})
Semantics: 14/12/1 (total/solved/learn).
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((9, 6), 2): 2, ((3, 1), 2): 2, ((3, 0), 3): 2, ((1, 3), 1): 2, ((1, 9), 1): 2, ((6, 6), 1): 2, ((9, 3), 3): 2, ((4, 6), 1): 2, ((5, 9), 1): 2, ((3, 4), 1): 2, ((6, 0), 6): 2, ((6, 9), 1): 2, ((9, 9), 1): 2, ((4, 8), 1): 2, ((3, 9), 1): 2, ((8, 7), 1): 2, ((9, 7), 2): 2, ((2, 9), 1): 2, ((1, 6), 1): 2, ((2, 3), 1): 2, ((2, 7), 1): 2, ((6, 3), 2): 2, ((8, 9), 1): 2, ((6, 4), 2): 2, ((2, 6), 1): 2, ((7, 6), 1): 1, ((0, 1), 1): 1, ((3, 3), 1): 1, ((3, 5), 1): 1, ((0, 6), 1): 1, ((8, 2), 4): 1, ((4, 7), 1): 1, ((9, 4), 3): 1, ((8, 0), 8): 1, ((4, 5), 1): 1, ((9, 1), 8): 1, ((0, 0), 0): 1, ((7, 5), 2): 1, ((4, 0), 4): 1, ((3, 2), 1): 1, ((4, 9), 1): 1, ((5, 7), 1): 1, ((1, 7), 1): 1, ((6, 1), 5): 1, ((8, 5), 2): 1, ((6, 8), 1): 1, ((0, 2), 1): 1, ((9, 5), 4): 1, ((3, 8), 1): 1, ((2, 4), 1): 1, ((5, 3), 2): 1, ((7, 1), 6): 1, ((2, 5), 1): 1, ((4, 1), 2): 1, ((0, 9), 3): 1, ((4, 3), 1): 1, ((9, 0), 9): 1, ((5, 2), 3): 1, ((7, 0), 7): 1, ((1, 0), 1): 1, ((6, 7), 1): 1, ((8, 6), 2): 1, ((9, 8), 1): 1, ((8, 3), 5): 1, ((4, 2), 2): 1, ((3, 7), 1): 1, ((5, 4), 1): 1, ((2, 8), 1): 1, ((0, 7), 1): 1, ((1, 2), 1): 1, ((8, 8), 1): 1, ((2, 1), 1): 1, ((2, 2), 1): 1, ((5, 6), 1): 1, ((0, 4), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 0.89
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 27s
------------------------------
Epoch 13/99 (max_len=3, data=4405)
Train acc: 60.13 (abduce 98.12)
Hit samples:  4322  Ave length:  2.54
Symbols:  14 Counter({13: 1224, 8: 1083, 10: 1010, 7: 809, 1: 781, 3: 773, 11: 772, 12: 771, 2: 768, 0: 763, 4: 751, 6: 734, 5: 722, 9: 5})
Dep:  Counter({(1, -1, 1): 3322, (-1,): 1000})
Semantics: 14/12/1 (total/solved/learn).
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((5, 6), 1): 2, ((7, 5), 2): 2, ((1, 6), 1): 2, ((6, 4), 2): 2, ((1, 5), 1): 2, ((5, 3), 2): 2, ((4, 2), 2): 2, ((9, 0), 9): 2, ((5, 2), 3): 2, ((6, 5), 1): 2, ((9, 3), 3): 2, ((4, 8), 1): 2, ((3, 6), 1): 2, ((6, 0), 6): 2, ((3, 5), 1): 2, ((7, 9), 1): 2, ((4, 6), 1): 2, ((3, 4), 1): 2, ((1, 3), 1): 2, ((7, 2), 4): 1, ((3, 2), 1): 1, ((5, 9), 1): 1, ((4, 0), 4): 1, ((0, 4), 1): 1, ((1, 8), 1): 1, ((3, 3), 1): 1, ((1, 1), 1): 1, ((9, 4), 5): 1, ((6, 3), 2): 1, ((2, 7), 1): 1, ((0, 2), 1): 1, ((9, 2), 5): 1, ((2, 9), 1): 1, ((2, 2), 1): 1, ((5, 5), 1): 1, ((4, 1), 3): 1, ((5, 1), 4): 1, ((9, 7), 2): 1, ((0, 5), 1): 1, ((5, 0), 5): 1, ((7, 4), 2): 1, ((6, 1), 5): 1, ((9, 6), 2): 1, ((1, 0), 1): 1, ((9, 9), 1): 1, ((8, 1), 7): 1, ((7, 1), 6): 1, ((6, 9), 1): 1, ((7, 3), 3): 1, ((2, 1), 1): 1, ((8, 5), 2): 1, ((4, 9), 1): 1, ((2, 0), 2): 1, ((5, 8), 1): 1, ((7, 8), 1): 1, ((7, 0), 7): 1, ((8, 0), 8): 1, ((3, 7), 1): 1, ((8, 6), 2): 1, ((1, 7), 1): 1, ((2, 5), 1): 1, ((4, 5), 1): 1, ((6, 2), 3): 1, ((0, 6), 1): 1, ((4, 3), 1): 1, ((7, 6), 1): 1, ((7, 7), 1): 1, ((1, 4), 1): 1, ((2, 4), 1): 1, ((2, 8), 1): 1, ((2, 6), 1): 1, ((6, 6), 1): 1, ((2, 3), 1): 1, ((8, 2), 4): 1, ((8, 9), 1): 1, ((8, 3), 5): 1, ((0, 8), 1): 1, ((3, 1), 2): 1, ((3, 0), 3): 1, ((4, 4), 1): 1, ((8, 8), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 0.88
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 20s
------------------------------
Epoch 14/99 (max_len=3, data=4405)
Train acc: 58.90 (abduce 98.25)
Hit samples:  4328  Ave length:  2.54
Symbols:  14 Counter({13: 1231, 8: 1100, 10: 992, 7: 799, 12: 780, 1: 780, 3: 777, 0: 772, 2: 762, 11: 758, 5: 744, 4: 744, 6: 740, 9: 5})
Dep:  Counter({(1, -1, 1): 3328, (-1,): 1000})
Learn perception with 3940 samples for 500 iterations, take 26 sec.
result accuracy by length:
1 ( 3%) 94.00
3 (12%) 57.69
5 (55%) 34.53
7 (29%) 22.61
result accuracy by symbol:
* (45%) 34.77
+ (45%) 39.31
- (45%) 12.38
/ (42%) 33.50
0 (23%) 25.19
1 (28%) 30.98
2 (29%) 33.69
3 (28%) 33.96
4 (28%) 32.09
5 (28%) 32.24
6 (28%) 36.11
7 (28%) 31.94
8 (27%) 33.37
9 (28%) 31.64
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 80.00
3 ( 0%) 90.00
4 ( 0%) 90.00
5 ( 0%) 90.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
result accuracy by res:
0 (24%)  6.79
1 ( 9%) 74.19
2 ( 5%) 49.74
3 ( 5%) 26.99
4 ( 4%) 23.18
5 ( 4%) 36.13
6 ( 4%) 40.00
7 ( 4%) 31.13
8 ( 4%) 38.36
9 ( 4%) 45.71
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 40.69
unseen (41%) 28.49
val (Perception Acc=19.93, Syntax Acc=100.00, Result Acc=35.61)
Epoch time: 0m 31s
------------------------------
Epoch 15/99 (max_len=3, data=4405)
Train acc: 63.98 (abduce 99.07)
Hit samples:  4364  Ave length:  2.54
Symbols:  14 Counter({13: 1190, 8: 1144, 10: 1029, 12: 824, 0: 808, 11: 787, 7: 774, 1: 770, 2: 762, 3: 759, 4: 757, 6: 745, 5: 742, 9: 1})
Dep:  Counter({(1, -1, 1): 3364, (-1,): 1000})
Semantics: 14/12/1 (total/solved/learn).
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((7, 5), 2): 3, ((6, 4), 2): 3, ((9, 7), 2): 3, ((3, 1), 2): 2, ((8, 5), 2): 2, ((6, 6), 1): 2, ((8, 8), 1): 2, ((3, 5), 1): 2, ((1, 8), 1): 2, ((2, 6), 1): 2, ((2, 7), 1): 2, ((3, 8), 1): 2, ((5, 2), 3): 2, ((2, 3), 1): 2, ((6, 0), 6): 2, ((7, 4), 2): 2, ((8, 4), 2): 2, ((5, 6), 1): 2, ((1, 9), 1): 2, ((2, 9), 1): 1, ((0, 2), 1): 1, ((0, 7), 1): 1, ((9, 6), 2): 1, ((1, 3), 1): 1, ((9, 8), 1): 1, ((0, 8), 1): 1, ((8, 3), 3): 1, ((8, 9), 1): 1, ((1, 4), 1): 1, ((8, 1), 7): 1, ((5, 3), 2): 1, ((0, 0), 0): 1, ((2, 5), 1): 1, ((3, 6), 1): 1, ((9, 1), 8): 1, ((7, 0), 7): 1, ((6, 9), 1): 1, ((6, 5), 1): 1, ((9, 2), 7): 1, ((7, 1), 6): 1, ((8, 2), 4): 1, ((7, 6), 1): 1, ((8, 6), 2): 1, ((6, 7), 1): 1, ((3, 7), 1): 1, ((7, 2), 4): 1, ((5, 4), 1): 1, ((8, 7), 1): 1, ((5, 9), 1): 1, ((7, 9), 1): 1, ((5, 8), 1): 1, ((1, 1), 1): 1, ((9, 5), 2): 1, ((6, 3), 2): 1, ((2, 8), 1): 1, ((2, 0), 2): 1, ((4, 8), 1): 1, ((0, 6), 1): 1, ((0, 1), 1): 1, ((1, 2), 1): 1, ((7, 7), 1): 1, ((4, 2), 2): 1, ((6, 1), 2): 1, ((2, 2), 1): 1, ((9, 3), 3): 1, ((4, 7), 1): 1, ((5, 7), 1): 1, ((2, 4), 1): 1, ((4, 4), 1): 1, ((4, 0), 4): 1, ((0, 4), 1): 1, ((3, 3), 1): 1, ((9, 4), 3): 1, ((9, 0), 9): 1, ((1, 6), 1): 1, ((8, 0), 8): 1, ((7, 8), 1): 1, ((3, 4), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 0.90
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 21s
------------------------------
Epoch 16/99 (max_len=3, data=4405)
Train acc: 63.70 (abduce 98.93)
Hit samples:  4358  Ave length:  2.54
Symbols:  14 Counter({13: 1193, 8: 1133, 10: 1029, 0: 806, 12: 789, 11: 777, 4: 777, 1: 774, 3: 768, 7: 760, 5: 760, 6: 754, 2: 751, 9: 3})
Dep:  Counter({(1, -1, 1): 3358, (-1,): 1000})
100 [((0, 0), 0), ((0, 1), 5), ((0, 2), 3), ((0, 3), 6), ((0, 4), 2), ((0, 5), 3), ((0, 6), 1), ((0, 7), 1), ((0, 8), 1), ((0, 9), 1), ((1, 0), 1), ((1, 1), 1), ((1, 2), 1), ((1, 3), 1), ((1, 4), 1), ((1, 5), 1), ((1, 6), 1), ((1, 7), 1), ((1, 8), 1), ((1, 9), 1), ((2, 0), 2), ((2, 1), 1), ((2, 2), 1), ((2, 3), 1), ((2, 4), 1), ((2, 5), 1), ((2, 6), 1), ((2, 7), 1), ((2, 8), 1), ((2, 9), 1), ((3, 0), 3), ((3, 1), 2), ((3, 2), 1), ((3, 3), 1), ((3, 4), 1), ((3, 5), 1), ((3, 6), 1), ((3, 7), 1), ((3, 8), 1), ((3, 9), 1), ((4, 0), 4), ((4, 1), 3), ((4, 2), 2), ((4, 3), 1), ((4, 4), 1), ((4, 5), 1), ((4, 6), 1), ((4, 7), 1), ((4, 8), 1), ((4, 9), 1), ((5, 0), 5), ((5, 1), 2), ((5, 2), 3), ((5, 3), 2), ((5, 4), 1), ((5, 5), 1), ((5, 6), 1), ((5, 7), 1), ((5, 8), 1), ((5, 9), 1), ((6, 0), 6), ((6, 1), 5), ((6, 2), 3), ((6, 3), 2), ((6, 4), 2), ((6, 5), 1), ((6, 6), 1), ((6, 7), 1), ((6, 8), 1), ((6, 9), 1), ((7, 0), 7), ((7, 1), 6), ((7, 2), 5), ((7, 3), 3), ((7, 4), 2), ((7, 5), 2), ((7, 6), 1), ((7, 7), 1), ((7, 8), 1), ((7, 9), 1), ((8, 0), 8), ((8, 1), 7), ((8, 2), 4), ((8, 3), 3), ((8, 4), 2), ((8, 5), 2), ((8, 6), 2), ((8, 7), 1), ((8, 8), 1), ((8, 9), 1), ((9, 0), 9), ((9, 1), 8), ((9, 2), 5), ((9, 3), 3), ((9, 4), 3), ((9, 5), 2), ((9, 6), 2), ((9, 7), 2), ((9, 8), 1), ((9, 9), 1)]
Semantics: 14/13/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 0m 2s
------------------------------
Epoch 17/99 (max_len=3, data=4405)
Train acc: 63.20 (abduce 99.14)
Hit samples:  4367  Ave length:  2.54
Symbols:  14 Counter({8: 1120, 10: 1029, 13: 890, 0: 812, 11: 802, 4: 787, 12: 781, 7: 778, 1: 764, 2: 764, 5: 762, 3: 761, 6: 723, 9: 328})
Dep:  Counter({(1, -1, 1): 3367, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 3), 3): 6, ((9, 2), 5): 5, ((5, 2), 3): 4, ((4, 1), 10): 3, ((9, 4), 3): 3, ((6, 6), 9): 3, ((7, 2), 4): 3, ((7, 4), 13): 2, ((8, 4), 4): 2, ((0, 2), 5): 2, ((8, 2), 4): 2, ((2, 7), 13): 2, ((3, 9), 11): 2, ((4, 3), 2): 2, ((8, 5), 3): 2, ((4, 9), 28): 2, ((6, 5), 2): 2, ((7, 1), 6): 2, ((8, 3), 3): 2, ((2, 5), 14): 2, ((4, 8), 0): 1, ((0, 1), 3): 1, ((3, 7), 0): 1, ((9, 0), 1): 1, ((9, 8), 2): 1, ((6, 2), 4): 1, ((0, 5), 4): 1, ((8, 7), 2): 1, ((5, 5), 3): 1, ((9, 9), 3): 1, ((0, 4), 3): 1, ((7, 3), 3): 1, ((5, 3), 3): 1, ((0, 9), 2): 1, ((1, 9), 0): 1, ((5, 7), 2): 1, ((3, 3), 8): 1, ((5, 1), 3): 1, ((9, 5), 4): 1, ((3, 8), 72): 1, ((1, 7), 12): 1, ((0, 3), 2): 1, ((5, 9), 24): 1, ((4, 7), 4): 1, ((3, 5), 0): 1, ((0, 8), 3): 1, ((1, 3), 0): 1, ((4, 2), 1): 1, ((8, 9), 3): 1, ((4, 6), 0): 1, ((6, 1), 0): 1, ((6, 7), 0): 1, ((2, 2), 42): 1, ((8, 8), 40): 1, ((0, 0), 4): 1, ((3, 2), 2): 1, ((6, 3), 3): 1, ((9, 6), 0): 1, ((2, 3), 3): 1, ((3, 4), 0): 1, ((8, 0), 2): 1, ((3, 0), 21): 1, ((1, 6), 3): 1, ((7, 6), 56): 1, ((0, 7), 4): 1, ((7, 8), 3): 1, ((3, 6), 12): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 43s
------------------------------
Epoch 18/99 (max_len=3, data=4405)
Train acc: 63.74 (abduce 99.14)
Hit samples:  4367  Ave length:  2.54
Symbols:  14 Counter({8: 1141, 10: 1021, 13: 881, 0: 804, 4: 789, 11: 784, 2: 784, 12: 783, 7: 772, 3: 763, 1: 760, 6: 748, 5: 747, 9: 324})
Dep:  Counter({(1, -1, 1): 3367, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 3), 3): 7, ((6, 2), 3): 5, ((2, 6), 35): 4, ((5, 2), 3): 3, ((8, 2), 4): 3, ((8, 5), 3): 3, ((7, 3), 3): 3, ((8, 7), 2): 2, ((9, 5), 4): 2, ((3, 1), 5): 2, ((3, 8), 0): 2, ((9, 2), 5): 2, ((1, 2), 8): 2, ((8, 4), 4): 2, ((9, 4), 3): 2, ((8, 3), 3): 2, ((9, 9), 16): 1, ((5, 8), 10): 1, ((4, 4), 0): 1, ((6, 9), 28): 1, ((5, 3), 1): 1, ((9, 8), 15): 1, ((2, 3), 7): 1, ((5, 6), 9): 1, ((9, 7), 4): 1, ((0, 2), 5): 1, ((5, 4), 10): 1, ((7, 9), 3): 1, ((2, 7), 0): 1, ((1, 4), 0): 1, ((0, 5), 20): 1, ((3, 4), 10): 1, ((1, 8), 0): 1, ((1, 7), 10): 1, ((4, 1), 3): 1, ((3, 9), 0): 1, ((0, 0), 11): 1, ((6, 3), 3): 1, ((4, 3), 2): 1, ((4, 5), 25): 1, ((3, 6), 12): 1, ((7, 8), 11): 1, ((7, 5), 56): 1, ((2, 8), 5): 1, ((8, 1), 7): 1, ((9, 0), 4): 1, ((6, 6), 3): 1, ((3, 3), 25): 1, ((0, 1), 2): 1, ((8, 8), 0): 1, ((4, 6), 0): 1, ((3, 5), 18): 1, ((4, 9), 16): 1, ((9, 1), 8): 1, ((1, 1), 0): 1, ((0, 6), 5): 1, ((8, 9), 13): 1, ((9, 6), 3): 1, ((7, 1), 6): 1, ((7, 7), 4): 1, ((7, 6), 2): 1, ((7, 2), 4): 1, ((6, 4), 1): 1, ((6, 7), 3): 1, ((5, 7), 3): 1, ((2, 4), 25): 1, ((7, 4), 3): 1, ((2, 5), 32): 1, ((1, 3), 10): 1, ((4, 7), 0): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 43s
------------------------------
Epoch 19/99 (max_len=3, data=4405)
Train acc: 62.62 (abduce 98.96)
Hit samples:  4359  Ave length:  2.54
Symbols:  14 Counter({8: 1120, 10: 1031, 13: 879, 0: 806, 12: 796, 4: 794, 11: 790, 7: 777, 1: 767, 3: 762, 2: 749, 5: 742, 6: 735, 9: 329})
Dep:  Counter({(1, -1, 1): 3359, (-1,): 1000})
Learn perception with 4030 samples for 500 iterations, take 25 sec.
result accuracy by length:
1 ( 3%) 95.00
3 (12%) 57.95
5 (55%) 33.18
7 (29%) 22.30
result accuracy by symbol:
* (45%) 34.77
+ (45%) 37.97
- (45%) 12.18
/ (42%) 32.05
0 (23%) 25.19
1 (28%) 30.33
2 (29%) 32.41
3 (28%) 33.08
4 (28%) 31.43
5 (28%) 31.69
6 (28%) 34.25
7 (28%) 31.61
8 (27%) 32.35
9 (28%) 30.23
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 90.00
4 ( 0%) 90.00
5 ( 0%) 90.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
result accuracy by res:
0 (24%)  7.56
1 ( 9%) 72.90
2 ( 5%) 50.79
3 ( 5%) 25.15
4 ( 4%) 24.50
5 ( 4%) 31.61
6 ( 4%) 40.00
7 ( 4%) 29.80
8 ( 4%) 36.99
9 ( 4%) 45.00
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 39.68
unseen (41%) 28.04
val (Perception Acc=20.00, Syntax Acc=100.00, Result Acc=34.84)
Epoch time: 0m 31s
------------------------------
Epoch 20/99 (max_len=3, data=4405)
Train acc: 68.92 (abduce 99.48)
Hit samples:  4382  Ave length:  2.54
Symbols:  14 Counter({8: 1155, 10: 1046, 13: 886, 0: 832, 12: 796, 4: 785, 11: 775, 1: 774, 2: 773, 7: 767, 3: 759, 6: 753, 5: 750, 9: 295})
Dep:  Counter({(1, -1, 1): 3382, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((7, 3), 3): 5, ((8, 2), 4): 4, ((6, 2), 3): 4, ((9, 1), 14): 4, ((9, 3), 3): 3, ((9, 2), 5): 3, ((2, 6), 35): 2, ((9, 4), 3): 2, ((8, 4), 4): 2, ((8, 3), 5): 2, ((5, 0), 8): 2, ((8, 7), 2): 2, ((7, 2), 4): 2, ((3, 7), 63): 2, ((5, 1), 3): 2, ((7, 6), 2): 2, ((6, 3), 3): 2, ((6, 5), 2): 2, ((5, 2), 3): 2, ((2, 1), 11): 2, ((9, 6), 3): 2, ((5, 8), 24): 2, ((0, 9), 45): 2, ((1, 5), 4): 2, ((9, 5), 4): 2, ((7, 8), 0): 1, ((6, 7), 28): 1, ((5, 7), 2): 1, ((5, 4), 2): 1, ((7, 1), 4): 1, ((4, 6), 3): 1, ((0, 0), 5): 1, ((3, 0), 14): 1, ((0, 2), 40): 1, ((3, 2), 7): 1, ((3, 8), 0): 1, ((7, 9), 3): 1, ((2, 4), 14): 1, ((6, 9), 0): 1, ((2, 2), 0): 1, ((3, 4), 11): 1, ((8, 6), 0): 1, ((0, 4), 5): 1, ((7, 7), 3): 1, ((1, 3), 0): 1, ((0, 1), 5): 1, ((1, 0), 4): 1, ((4, 5), 0): 1, ((4, 4), 5): 1, ((3, 9), 0): 1, ((6, 1), 1): 1, ((9, 8), 36): 1, ((8, 1), 7): 1, ((9, 9), 6): 1, ((1, 9), 3): 1, ((4, 0), 6): 1, ((6, 8), 0): 1, ((5, 5), 20): 1, ((5, 3), 25): 1, ((1, 2), 5): 1, ((1, 4), 35): 1, ((3, 3), 0): 1, ((6, 6), 6): 1, ((8, 5), 3): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 42s
------------------------------
Epoch 21/99 (max_len=3, data=4405)
Train acc: 68.27 (abduce 99.27)
Hit samples:  4373  Ave length:  2.54
Symbols:  14 Counter({8: 1159, 10: 1044, 13: 900, 0: 842, 4: 814, 12: 804, 11: 770, 3: 768, 2: 760, 7: 758, 1: 756, 5: 739, 6: 735, 9: 270})
Dep:  Counter({(1, -1, 1): 3373, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((8, 3), 3): 5, ((0, 2), 5): 4, ((7, 3), 27): 4, ((7, 6), 2): 4, ((5, 2), 3): 4, ((8, 1), 7): 3, ((8, 2), 4): 3, ((9, 4), 3): 3, ((9, 0), 14): 3, ((2, 6), 35): 3, ((9, 5), 4): 2, ((9, 3), 3): 2, ((7, 5), 3): 2, ((3, 2), 7): 2, ((5, 4), 2): 2, ((6, 3), 3): 2, ((3, 9), 18): 2, ((7, 2), 4): 2, ((6, 1), 5): 2, ((7, 1), 3): 2, ((1, 7), 12): 2, ((2, 2), 3): 2, ((9, 6), 3): 2, ((2, 5), 30): 1, ((1, 4), 0): 1, ((2, 0), 27): 1, ((0, 7), 4): 1, ((3, 5), 0): 1, ((3, 3), 0): 1, ((3, 4), 5): 1, ((7, 9), 36): 1, ((7, 8), 2): 1, ((4, 3), 2): 1, ((2, 1), 8): 1, ((9, 8), 4): 1, ((2, 4), 7): 1, ((8, 9), 0): 1, ((1, 9), 5): 1, ((9, 2), 5): 1, ((8, 5), 3): 1, ((6, 8), 64): 1, ((0, 5), 3): 1, ((2, 8), 3): 1, ((4, 8), 28): 1, ((4, 4), 2): 1, ((4, 5), 0): 1, ((8, 8), 2): 1, ((0, 9), 3): 1, ((3, 1), 15): 1, ((2, 9), 0): 1, ((4, 9), 0): 1, ((8, 6), 1): 1, ((9, 1), 8): 1, ((1, 0), 2): 1, ((1, 3), 6): 1, ((5, 6), 12): 1, ((5, 3), 3): 1, ((1, 8), 0): 1, ((8, 4), 1): 1, ((4, 1), 3): 1, ((3, 8), 0): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 40s
------------------------------
Epoch 22/99 (max_len=3, data=4405)
Train acc: 67.81 (abduce 99.30)
Hit samples:  4374  Ave length:  2.54
Symbols:  14 Counter({8: 1134, 10: 1062, 13: 892, 0: 833, 12: 806, 4: 789, 11: 784, 1: 778, 7: 760, 2: 759, 3: 757, 6: 757, 5: 725, 9: 286})
Dep:  Counter({(1, -1, 1): 3374, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((8, 3), 3): 5, ((4, 3), 2): 4, ((5, 2), 3): 4, ((7, 2), 4): 4, ((9, 3), 3): 3, ((8, 2), 4): 3, ((6, 2), 3): 3, ((7, 6), 2): 3, ((3, 7), 2): 3, ((0, 2), 9): 3, ((9, 5), 4): 3, ((2, 9), 5): 2, ((7, 9), 0): 2, ((6, 3), 3): 2, ((3, 1), 5): 2, ((7, 4), 3): 2, ((0, 0), 14): 2, ((0, 8), 2): 2, ((9, 4), 3): 2, ((7, 3), 3): 2, ((0, 6), 3): 1, ((2, 1), 0): 1, ((0, 9), 10): 1, ((1, 8), 0): 1, ((2, 5), 3): 1, ((7, 8), 3): 1, ((3, 3), 0): 1, ((6, 7), 8): 1, ((8, 6), 5): 1, ((0, 7), 5): 1, ((4, 4), 5): 1, ((3, 6), 2): 1, ((9, 2), 5): 1, ((3, 4), 10): 1, ((4, 7), 14): 1, ((3, 9), 11): 1, ((9, 6), 3): 1, ((2, 2), 3): 1, ((7, 7), 0): 1, ((3, 0), 4): 1, ((5, 7), 14): 1, ((0, 4), 3): 1, ((6, 6), 3): 1, ((2, 4), 7): 1, ((8, 9), 2): 1, ((3, 2), 2): 1, ((5, 8), 24): 1, ((9, 7), 3): 1, ((1, 4), 0): 1, ((1, 2), 4): 1, ((8, 1), 7): 1, ((0, 5), 2): 1, ((5, 6), 0): 1, ((8, 4), 4): 1, ((4, 1), 3): 1, ((3, 5), 2): 1, ((2, 3), 15): 1, ((7, 5), 4): 1, ((9, 1), 14): 1, ((6, 8), 0): 1, ((8, 5), 3): 1, ((6, 1), 5): 1, ((1, 7), 12): 1, ((8, 7), 2): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 45s
------------------------------
Epoch 23/99 (max_len=3, data=4405)
Train acc: 68.54 (abduce 99.52)
Hit samples:  4384  Ave length:  2.54
Symbols:  14 Counter({8: 1165, 10: 1038, 13: 887, 0: 835, 4: 791, 11: 788, 12: 784, 3: 777, 1: 773, 7: 770, 2: 767, 5: 747, 6: 736, 9: 294})
Dep:  Counter({(1, -1, 1): 3384, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 3), 3): 7, ((9, 2), 5): 5, ((9, 4), 3): 4, ((6, 2), 3): 4, ((8, 4), 4): 3, ((7, 2), 4): 3, ((7, 3), 3): 3, ((2, 0), 7): 2, ((8, 5), 3): 2, ((2, 3), 15): 2, ((0, 4), 2): 2, ((3, 2), 2): 2, ((2, 9), 8): 2, ((3, 9), 11): 2, ((8, 3), 3): 2, ((5, 2), 3): 2, ((4, 4), 5): 2, ((6, 3), 3): 2, ((7, 6), 2): 2, ((9, 1), 4): 2, ((6, 1), 5): 2, ((8, 2), 4): 2, ((4, 1), 3): 2, ((2, 7), 28): 1, ((5, 6), 14): 1, ((3, 6), 10): 1, ((4, 2), 9): 1, ((3, 5), 2): 1, ((7, 7), 3): 1, ((3, 1), 7): 1, ((4, 3), 27): 1, ((7, 9), 8): 1, ((6, 8), 54): 1, ((2, 2), 0): 1, ((9, 6), 3): 1, ((1, 3), 0): 1, ((7, 5), 9): 1, ((6, 6), 0): 1, ((0, 5), 2): 1, ((7, 8), 3): 1, ((5, 7), 2): 1, ((0, 1), 2): 1, ((2, 6), 3): 1, ((6, 5), 2): 1, ((0, 9), 3): 1, ((4, 7), 12): 1, ((7, 1), 28): 1, ((1, 4), 0): 1, ((7, 0), 3): 1, ((4, 6), 0): 1, ((0, 7), 4): 1, ((6, 9), 0): 1, ((6, 0), 16): 1, ((3, 7), 0): 1, ((2, 4), 3): 1, ((0, 3), 2): 1, ((8, 7), 2): 1, ((3, 0), 8): 1, ((1, 1), 0): 1, ((8, 9), 0): 1, ((7, 4), 3): 1, ((9, 0), 16): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 45s
------------------------------
Epoch 24/99 (max_len=3, data=4405)
Train acc: 68.18 (abduce 99.36)
Hit samples:  4377  Ave length:  2.54
Symbols:  14 Counter({8: 1152, 10: 1057, 13: 912, 0: 830, 12: 807, 4: 798, 11: 785, 1: 774, 2: 766, 3: 764, 7: 754, 6: 740, 5: 736, 9: 256})
Dep:  Counter({(1, -1, 1): 3377, (-1,): 1000})
Learn perception with 4121 samples for 500 iterations, take 26 sec.
result accuracy by length:
1 ( 3%) 92.00
3 (12%) 55.13
5 (55%) 32.96
7 (29%) 21.89
result accuracy by symbol:
* (45%) 33.67
+ (45%) 36.90
- (45%) 11.63
/ (42%) 32.77
0 (23%) 25.45
1 (28%) 30.33
2 (29%) 32.73
3 (28%) 32.86
4 (28%) 31.65
5 (28%) 30.70
6 (28%) 33.04
7 (28%) 29.42
8 (27%) 32.23
9 (28%) 29.79
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 90.00
4 ( 0%) 90.00
5 ( 0%) 90.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 70.00
result accuracy by res:
0 (24%)  8.46
1 ( 9%) 70.97
2 ( 5%) 50.26
3 ( 5%) 25.15
4 ( 4%) 25.83
5 ( 4%) 32.90
6 ( 4%) 39.29
7 ( 4%) 31.13
8 ( 4%) 36.99
9 ( 4%) 40.00
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 38.89
unseen (41%) 27.52
val (Perception Acc=20.19, Syntax Acc=100.00, Result Acc=34.16)
Epoch time: 0m 31s
------------------------------
Epoch 25/99 (max_len=3, data=4405)
Train acc: 71.33 (abduce 99.61)
Hit samples:  4388  Ave length:  2.54
Symbols:  14 Counter({8: 1166, 10: 1082, 13: 902, 0: 866, 4: 810, 12: 794, 11: 783, 7: 770, 1: 768, 2: 766, 3: 750, 6: 737, 5: 732, 9: 238})
Dep:  Counter({(1, -1, 1): 3388, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((7, 3), 3): 8, ((5, 2), 3): 5, ((7, 2), 4): 4, ((9, 2), 7): 4, ((8, 3), 3): 4, ((6, 3), 3): 4, ((9, 3), 3): 3, ((2, 6), 35): 3, ((0, 4), 2): 3, ((5, 7), 10): 3, ((8, 2), 4): 3, ((9, 4), 3): 3, ((5, 6), 18): 3, ((3, 2), 2): 2, ((2, 4), 0): 2, ((9, 6), 3): 2, ((4, 0), 5): 2, ((0, 9), 14): 2, ((9, 5), 1): 2, ((2, 5), 4): 2, ((9, 8), 36): 2, ((8, 6), 0): 2, ((2, 7), 0): 1, ((3, 5), 27): 1, ((1, 6), 4): 1, ((6, 4), 4): 1, ((4, 5), 2): 1, ((9, 1), 5): 1, ((7, 0), 2): 1, ((8, 1), 7): 1, ((6, 5), 2): 1, ((8, 5), 3): 1, ((6, 9), 11): 1, ((0, 5), 7): 1, ((4, 3), 3): 1, ((4, 4), 6): 1, ((3, 1), 5): 1, ((5, 4), 2): 1, ((7, 6), 3): 1, ((0, 3), 5): 1, ((2, 1), 4): 1, ((7, 9), 3): 1, ((6, 2), 3): 1, ((4, 1), 10): 1, ((7, 1), 4): 1, ((5, 3), 3): 1, ((0, 7), 2): 1, ((0, 1), 8): 1, ((7, 7), 0): 1, ((9, 0), 6): 1, ((0, 2), 3): 1, ((1, 3), 0): 1, ((1, 4), 0): 1, ((4, 6), 0): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 47s
------------------------------
Epoch 26/99 (max_len=3, data=4405)
Train acc: 70.63 (abduce 99.66)
Hit samples:  4390  Ave length:  2.54
Symbols:  14 Counter({8: 1157, 10: 1080, 13: 918, 0: 875, 12: 813, 4: 806, 11: 783, 3: 767, 1: 764, 7: 760, 2: 749, 5: 735, 6: 728, 9: 235})
Dep:  Counter({(1, -1, 1): 3390, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((6, 2), 3): 5, ((9, 3), 3): 5, ((3, 9), 14): 5, ((9, 8), 36): 5, ((6, 3), 3): 4, ((9, 4), 3): 4, ((5, 2), 3): 3, ((8, 3), 3): 3, ((8, 2), 4): 3, ((9, 6), 3): 3, ((6, 0), 8): 2, ((9, 1), 8): 2, ((7, 2), 4): 2, ((2, 3), 3): 2, ((0, 3), 2): 2, ((7, 1), 6): 2, ((7, 3), 3): 2, ((9, 2), 5): 2, ((3, 5), 35): 2, ((4, 2), 5): 2, ((0, 2), 5): 2, ((5, 6), 40): 2, ((9, 5), 4): 2, ((8, 5), 3): 2, ((6, 4), 48): 2, ((7, 4), 3): 1, ((3, 8), 0): 1, ((0, 4), 3): 1, ((3, 2), 7): 1, ((7, 5), 3): 1, ((5, 1), 4): 1, ((8, 9), 0): 1, ((1, 9), 5): 1, ((7, 9), 3): 1, ((3, 3), 0): 1, ((2, 5), 3): 1, ((5, 0), 36): 1, ((1, 3), 0): 1, ((1, 1), 0): 1, ((7, 7), 2): 1, ((6, 6), 2): 1, ((3, 1), 6): 1, ((5, 5), 2): 1, ((1, 7), 12): 1, ((1, 4), 0): 1, ((4, 1), 3): 1, ((4, 3), 2): 1, ((5, 7), 3): 1, ((3, 7), 0): 1, ((8, 1), 72): 1, ((1, 2), 64): 1, ((4, 7), 0): 1, ((9, 9), 5): 1, ((2, 9), 0): 1, ((5, 9), 20): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 50s
------------------------------
Epoch 27/99 (max_len=3, data=4405)
Train acc: 71.85 (abduce 99.52)
Hit samples:  4384  Ave length:  2.54
Symbols:  14 Counter({8: 1182, 10: 1083, 13: 896, 0: 868, 4: 807, 12: 791, 2: 776, 11: 774, 1: 765, 3: 758, 7: 756, 5: 741, 6: 732, 9: 223})
Dep:  Counter({(1, -1, 1): 3384, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((8, 2), 4): 5, ((5, 9), 0): 5, ((7, 3), 3): 5, ((9, 3), 3): 5, ((5, 4), 3): 4, ((5, 6), 0): 4, ((6, 2), 3): 4, ((7, 0), 3): 3, ((7, 2), 4): 3, ((6, 3), 3): 3, ((8, 4), 4): 3, ((9, 2), 5): 3, ((7, 4), 0): 3, ((9, 6), 3): 2, ((4, 3), 3): 2, ((2, 1), 35): 2, ((8, 3), 3): 2, ((9, 4), 3): 2, ((8, 9), 3): 2, ((5, 2), 3): 2, ((9, 0), 14): 2, ((4, 9), 12): 2, ((7, 1), 1): 2, ((4, 4), 2): 2, ((8, 5), 3): 2, ((1, 8), 0): 1, ((1, 1), 0): 1, ((3, 4), 5): 1, ((4, 1), 3): 1, ((7, 5), 3): 1, ((3, 5), 0): 1, ((0, 8), 2): 1, ((6, 7), 0): 1, ((1, 3), 6): 1, ((6, 8), 3): 1, ((4, 6), 3): 1, ((3, 7), 0): 1, ((0, 4), 2): 1, ((2, 2), 3): 1, ((0, 1), 3): 1, ((6, 5), 3): 1, ((8, 0), 9): 1, ((7, 9), 0): 1, ((9, 8), 2): 1, ((0, 9), 14): 1, ((9, 5), 4): 1, ((0, 7), 3): 1, ((9, 1), 3): 1, ((2, 5), 3): 1, ((5, 1), 4): 1, ((3, 9), 11): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 54s
------------------------------
Epoch 28/99 (max_len=3, data=4405)
Train acc: 70.23 (abduce 99.57)
Hit samples:  4386  Ave length:  2.54
Symbols:  14 Counter({8: 1161, 10: 1069, 13: 915, 0: 869, 4: 802, 12: 796, 11: 789, 1: 781, 2: 759, 3: 756, 7: 752, 5: 736, 6: 732, 9: 241})
Dep:  Counter({(1, -1, 1): 3386, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((6, 2), 3): 7, ((9, 1), 14): 6, ((7, 3), 3): 6, ((0, 2), 3): 5, ((8, 3), 3): 4, ((5, 2), 3): 3, ((9, 6), 3): 3, ((7, 2), 4): 3, ((9, 2), 5): 3, ((8, 2), 4): 2, ((4, 0), 5): 2, ((7, 4), 3): 2, ((2, 6), 35): 2, ((8, 4), 4): 2, ((0, 4), 2): 2, ((2, 4), 3): 2, ((7, 8), 3): 2, ((5, 1), 4): 2, ((0, 5), 15): 2, ((9, 4), 3): 2, ((9, 3), 3): 2, ((8, 5), 3): 2, ((6, 3), 3): 2, ((2, 2), 0): 1, ((4, 5), 0): 1, ((0, 0), 13): 1, ((3, 1), 5): 1, ((7, 0), 8): 1, ((3, 7), 0): 1, ((7, 5), 3): 1, ((6, 7), 8): 1, ((1, 1), 8): 1, ((4, 6), 0): 1, ((3, 2), 2): 1, ((3, 8), 27): 1, ((6, 6), 0): 1, ((9, 7), 81): 1, ((1, 7), 12): 1, ((7, 1), 4): 1, ((6, 0), 2): 1, ((6, 5), 3): 1, ((7, 7), 0): 1, ((0, 3), 5): 1, ((8, 1), 7): 1, ((2, 0), 1): 1, ((3, 0), 14): 1, ((7, 6), 2): 1, ((3, 5), 0): 1, ((2, 1), 7): 1, ((7, 9), 0): 1, ((4, 8), 0): 1, ((4, 4), 3): 1, ((8, 6), 24): 1, ((6, 9), 7): 1, ((3, 9), 11): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 40s
------------------------------
Epoch 29/99 (max_len=3, data=4405)
Train acc: 72.10 (abduce 99.66)
Hit samples:  4390  Ave length:  2.54
Symbols:  14 Counter({8: 1193, 10: 1058, 13: 908, 0: 863, 11: 798, 4: 789, 2: 783, 12: 783, 1: 774, 3: 755, 7: 751, 5: 749, 6: 735, 9: 231})
Dep:  Counter({(1, -1, 1): 3390, (-1,): 1000})
Learn perception with 4159 samples for 500 iterations, take 26 sec.
result accuracy by length:
1 ( 3%) 93.00
3 (12%) 54.36
5 (55%) 32.68
7 (29%) 22.10
result accuracy by symbol:
* (45%) 33.67
+ (45%) 36.56
- (45%) 11.22
/ (42%) 32.27
0 (23%) 26.74
1 (28%) 30.98
2 (29%) 31.46
3 (28%) 32.75
4 (28%) 31.10
5 (28%) 29.50
6 (28%) 32.82
7 (28%) 30.63
8 (27%) 32.46
9 (28%) 30.12
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 90.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 70.00
result accuracy by res:
0 (24%)  9.49
1 ( 9%) 68.39
2 ( 5%) 47.64
3 ( 5%) 25.77
4 ( 4%) 25.17
5 ( 4%) 30.97
6 ( 4%) 35.00
7 ( 4%) 27.81
8 ( 4%) 37.67
9 ( 4%) 43.57
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 38.41
unseen (41%) 27.82
val (Perception Acc=20.16, Syntax Acc=100.00, Result Acc=34.00)
Epoch time: 0m 30s
------------------------------
Epoch 30/99 (max_len=3, data=4405)
Train acc: 74.92 (abduce 99.64)
Hit samples:  4389  Ave length:  2.54
Symbols:  14 Counter({8: 1225, 10: 1071, 13: 905, 0: 872, 11: 811, 4: 807, 12: 797, 2: 782, 1: 760, 5: 743, 6: 742, 3: 735, 7: 729, 9: 188})
Dep:  Counter({(1, -1, 1): 3389, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((7, 3), 3): 10, ((9, 1), 14): 5, ((2, 6), 35): 5, ((8, 7), 3): 3, ((6, 3), 3): 3, ((6, 2), 3): 3, ((8, 3), 5): 3, ((9, 3), 3): 3, ((9, 4), 3): 3, ((7, 6), 2): 3, ((9, 8), 2): 3, ((8, 4), 4): 3, ((8, 5), 3): 3, ((9, 5), 4): 2, ((7, 4), 3): 2, ((7, 2), 4): 2, ((1, 2), 5): 2, ((5, 2), 3): 2, ((5, 7), 49): 2, ((3, 9), 11): 2, ((1, 6), 0): 2, ((6, 1), 0): 2, ((8, 2), 4): 2, ((0, 1), 5): 2, ((0, 9), 36): 1, ((2, 0), 3): 1, ((1, 8), 27): 1, ((7, 5), 1): 1, ((5, 8), 3): 1, ((8, 6), 3): 1, ((0, 3), 6): 1, ((9, 6), 3): 1, ((8, 1), 7): 1, ((4, 2), 7): 1, ((0, 4), 3): 1, ((6, 6), 64): 1, ((4, 1), 3): 1, ((2, 5), 3): 1, ((4, 9), 2): 1, ((7, 7), 11): 1, ((3, 4), 0): 1, ((8, 0), 2): 1, ((5, 6), 3): 1, ((1, 1), 9): 1, ((2, 4), 3): 1, ((7, 1), 6): 1, ((6, 7), 0): 1, ((3, 3), 15): 1, ((3, 1), 5): 1, ((8, 9), 6): 1, ((7, 9), 0): 1, ((6, 5), 0): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 56s
------------------------------
Epoch 31/99 (max_len=3, data=4405)
Train acc: 73.70 (abduce 99.57)
Hit samples:  4386  Ave length:  2.54
Symbols:  14 Counter({8: 1212, 10: 1078, 13: 892, 0: 878, 11: 806, 12: 801, 4: 783, 2: 780, 1: 762, 5: 750, 3: 741, 7: 741, 6: 730, 9: 204})
Dep:  Counter({(1, -1, 1): 3386, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((8, 3), 3): 8, ((7, 3), 3): 7, ((9, 6), 3): 4, ((9, 4), 3): 4, ((5, 5), 8): 3, ((8, 2), 4): 3, ((6, 2), 3): 3, ((6, 5), 2): 3, ((7, 2), 4): 3, ((7, 4), 3): 3, ((6, 3), 3): 3, ((0, 4), 13): 3, ((5, 4), 2): 2, ((8, 4), 3): 2, ((9, 2), 5): 2, ((9, 5), 4): 2, ((9, 8), 2): 2, ((3, 1), 5): 2, ((5, 2), 3): 2, ((8, 0), 12): 2, ((2, 6), 35): 2, ((9, 0), 14): 2, ((3, 9), 11): 2, ((0, 2), 4): 1, ((0, 1), 5): 1, ((6, 1), 5): 1, ((8, 1), 7): 1, ((7, 0), 9): 1, ((4, 2), 5): 1, ((4, 5), 2): 1, ((4, 3), 2): 1, ((0, 6), 2): 1, ((8, 7), 2): 1, ((2, 3), 42): 1, ((2, 4), 5): 1, ((9, 7), 0): 1, ((0, 9), 45): 1, ((6, 7), 0): 1, ((9, 1), 5): 1, ((0, 3), 6): 1, ((5, 1), 4): 1, ((5, 9), 0): 1, ((3, 5), 0): 1, ((8, 6), 3): 1, ((9, 9), 0): 1, ((1, 1), 0): 1, ((6, 4), 4): 1, ((1, 7), 0): 1, ((3, 4), 72): 1, ((5, 7), 0): 1, ((5, 3), 25): 1, ((2, 2), 3): 1, ((4, 1), 3): 1, ((6, 0), 30): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 45s
------------------------------
Epoch 32/99 (max_len=3, data=4405)
Train acc: 75.54 (abduce 99.70)
Hit samples:  4392  Ave length:  2.54
Symbols:  14 Counter({8: 1204, 10: 1070, 13: 916, 0: 871, 11: 816, 12: 800, 4: 793, 2: 775, 1: 771, 3: 747, 6: 742, 7: 737, 5: 732, 9: 202})
Dep:  Counter({(1, -1, 1): 3392, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 1), 14): 8, ((9, 4), 3): 7, ((8, 3), 3): 7, ((7, 2), 4): 7, ((8, 5), 3): 4, ((7, 6), 2): 4, ((7, 3), 3): 4, ((2, 3), 15): 4, ((6, 8), 28): 3, ((9, 3), 3): 3, ((0, 8), 40): 3, ((3, 9), 11): 3, ((6, 1), 3): 2, ((2, 6), 35): 2, ((6, 3), 3): 2, ((6, 2), 3): 2, ((6, 9), 2): 2, ((4, 1), 3): 2, ((5, 2), 3): 2, ((3, 1), 5): 2, ((0, 4), 2): 1, ((9, 2), 5): 1, ((2, 7), 3): 1, ((5, 0), 27): 1, ((3, 3), 2): 1, ((5, 6), 0): 1, ((7, 1), 3): 1, ((8, 1), 7): 1, ((3, 4), 0): 1, ((4, 2), 7): 1, ((5, 1), 3): 1, ((1, 3), 0): 1, ((8, 2), 4): 1, ((5, 3), 1): 1, ((8, 6), 3): 1, ((4, 5), 0): 1, ((2, 5), 0): 1, ((3, 8), 42): 1, ((9, 6), 3): 1, ((4, 6), 0): 1, ((0, 2), 3): 1, ((0, 5), 3): 1, ((2, 2), 0): 1, ((8, 4), 4): 1, ((3, 7), 0): 1, ((3, 0), 1): 1, ((7, 9), 3): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 58s
------------------------------
Epoch 33/99 (max_len=3, data=4405)
Train acc: 73.52 (abduce 99.77)
Hit samples:  4395  Ave length:  2.54
Symbols:  14 Counter({8: 1215, 10: 1079, 13: 903, 0: 879, 11: 818, 12: 791, 4: 788, 2: 780, 1: 762, 3: 751, 5: 747, 7: 738, 6: 736, 9: 198})
Dep:  Counter({(1, -1, 1): 3395, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((7, 2), 4): 12, ((9, 3), 3): 7, ((5, 2), 3): 6, ((7, 3), 3): 6, ((3, 4), 11): 4, ((7, 4), 3): 4, ((9, 6), 3): 3, ((9, 4), 3): 3, ((8, 3), 3): 3, ((4, 3), 3): 3, ((2, 6), 35): 3, ((6, 3), 3): 2, ((8, 2), 6): 2, ((3, 9), 10): 2, ((1, 7), 48): 2, ((0, 4), 2): 2, ((7, 6), 2): 2, ((7, 5), 3): 2, ((8, 5), 3): 2, ((8, 1), 7): 1, ((0, 1), 6): 1, ((2, 8), 0): 1, ((9, 5), 4): 1, ((4, 1), 3): 1, ((2, 3), 27): 1, ((7, 1), 6): 1, ((5, 5), 7): 1, ((5, 6), 0): 1, ((5, 1), 1): 1, ((4, 4), 5): 1, ((6, 4), 4): 1, ((1, 8), 0): 1, ((2, 0), 13): 1, ((4, 8), 10): 1, ((0, 2), 5): 1, ((5, 3), 3): 1, ((9, 7), 3): 1, ((5, 4), 30): 1, ((8, 8), 0): 1, ((8, 4), 3): 1, ((6, 5), 2): 1, ((8, 9), 3): 1, ((6, 1), 1): 1, ((4, 6), 0): 1, ((4, 5), 2): 1, ((2, 2), 5): 1, ((3, 3), 0): 1, ((1, 3), 0): 1, ((3, 2), 7): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 54s
------------------------------
Epoch 34/99 (max_len=3, data=4405)
Train acc: 74.26 (abduce 99.57)
Hit samples:  4386  Ave length:  2.54
Symbols:  14 Counter({8: 1214, 10: 1070, 13: 904, 0: 875, 11: 809, 4: 801, 12: 794, 2: 775, 1: 758, 5: 753, 6: 744, 7: 736, 3: 727, 9: 198})
Dep:  Counter({(1, -1, 1): 3386, (-1,): 1000})
Learn perception with 4188 samples for 500 iterations, take 26 sec.
result accuracy by length:
1 ( 3%) 91.00
3 (12%) 53.33
5 (55%) 31.11
7 (29%) 20.64
result accuracy by symbol:
* (45%) 31.56
+ (45%) 35.08
- (45%) 10.68
/ (42%) 31.76
0 (23%) 24.55
1 (28%) 31.30
2 (29%) 29.86
3 (28%) 30.99
4 (28%) 29.56
5 (28%) 28.07
6 (28%) 31.28
7 (28%) 28.87
8 (27%) 31.32
9 (28%) 28.71
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 90.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 60.00
result accuracy by res:
0 (24%)  8.59
1 ( 9%) 66.45
2 ( 5%) 49.74
3 ( 5%) 25.15
4 ( 4%) 24.50
5 ( 4%) 29.68
6 ( 4%) 36.43
7 ( 4%) 30.46
8 ( 4%) 34.93
9 ( 4%) 40.71
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 37.46
unseen (41%) 25.59
val (Perception Acc=19.53, Syntax Acc=100.00, Result Acc=32.52)
Epoch time: 0m 30s
------------------------------
Epoch 35/99 (max_len=3, data=4405)
Train acc: 77.28 (abduce 99.82)
Hit samples:  4397  Ave length:  2.55
Symbols:  14 Counter({8: 1212, 10: 1068, 13: 911, 0: 888, 11: 806, 4: 795, 2: 789, 12: 788, 1: 761, 5: 751, 7: 744, 6: 742, 3: 730, 9: 206})
Dep:  Counter({(1, -1, 1): 3397, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((8, 2), 4): 7, ((7, 2), 4): 6, ((9, 3), 3): 5, ((6, 3), 3): 5, ((3, 3), 15): 5, ((5, 2), 3): 4, ((9, 4), 3): 4, ((6, 2), 3): 3, ((7, 3), 3): 3, ((7, 4), 3): 3, ((8, 4), 4): 3, ((3, 9), 11): 3, ((2, 3), 3): 2, ((9, 8), 2): 2, ((8, 3), 3): 2, ((2, 8), 40): 2, ((9, 5), 4): 2, ((3, 8), 13): 2, ((0, 3), 9): 2, ((8, 5), 3): 2, ((5, 3), 3): 2, ((2, 5), 3): 1, ((1, 7), 0): 1, ((1, 4), 0): 1, ((3, 7), 0): 1, ((3, 4), 0): 1, ((3, 5), 2): 1, ((6, 1), 5): 1, ((9, 2), 7): 1, ((5, 8), 0): 1, ((4, 4), 2): 1, ((4, 1), 36): 1, ((0, 4), 2): 1, ((0, 2), 4): 1, ((4, 7), 0): 1, ((4, 3), 3): 1, ((2, 0), 1): 1, ((1, 2), 5): 1, ((6, 7), 0): 1, ((7, 9), 0): 1, ((1, 3), 5): 1, ((5, 6), 0): 1, ((0, 5), 2): 1, ((8, 1), 7): 1, ((7, 1), 1): 1, ((9, 6), 3): 1, ((7, 0), 24): 1, ((7, 6), 2): 1, ((9, 1), 7): 1, ((5, 1), 4): 1, ((2, 6), 35): 1, ((8, 7), 2): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 46s
------------------------------
Epoch 36/99 (max_len=3, data=4405)
Train acc: 76.89 (abduce 99.77)
Hit samples:  4395  Ave length:  2.54
Symbols:  14 Counter({8: 1240, 10: 1065, 13: 907, 0: 886, 11: 816, 4: 805, 12: 802, 2: 780, 1: 761, 5: 742, 7: 736, 6: 735, 3: 727, 9: 183})
Dep:  Counter({(1, -1, 1): 3395, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 3), 3): 13, ((7, 3), 3): 6, ((8, 2), 4): 5, ((7, 1), 6): 4, ((8, 3), 3): 4, ((2, 3), 15): 4, ((6, 3), 0): 4, ((7, 4), 3): 3, ((0, 1), 2): 3, ((4, 1), 14): 3, ((5, 2), 3): 3, ((7, 2), 4): 3, ((9, 6), 3): 3, ((9, 7), 3): 2, ((2, 6), 35): 2, ((9, 4), 3): 2, ((0, 0), 17): 2, ((9, 5), 4): 2, ((2, 8), 64): 2, ((0, 3), 27): 2, ((8, 7), 2): 2, ((0, 5), 3): 1, ((8, 5), 3): 1, ((5, 3), 3): 1, ((0, 9), 16): 1, ((0, 8), 40): 1, ((8, 1), 7): 1, ((3, 7), 0): 1, ((6, 5), 2): 1, ((5, 7), 3): 1, ((1, 3), 0): 1, ((8, 6), 3): 1, ((6, 2), 3): 1, ((8, 4), 4): 1, ((6, 1), 5): 1, ((9, 2), 7): 1, ((3, 8), 0): 1, ((4, 3), 3): 1, ((8, 0), 4): 1, ((3, 4), 0): 1, ((5, 1), 4): 1, ((4, 6), 2): 1, ((3, 2), 4): 1, ((5, 6), 0): 1, ((7, 8), 0): 1, ((3, 1), 9): 1, ((6, 9), 0): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 58s
------------------------------
Epoch 37/99 (max_len=3, data=4405)
Train acc: 76.79 (abduce 99.82)
Hit samples:  4397  Ave length:  2.55
Symbols:  14 Counter({8: 1213, 10: 1066, 13: 918, 0: 887, 4: 819, 11: 811, 2: 780, 12: 776, 1: 762, 6: 747, 5: 741, 7: 737, 3: 734, 9: 200})
Dep:  Counter({(1, -1, 1): 3397, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((7, 3), 3): 9, ((7, 2), 4): 6, ((5, 2), 3): 4, ((9, 4), 3): 4, ((8, 5), 3): 4, ((7, 4), 6): 4, ((2, 5), 18): 3, ((8, 2), 4): 3, ((6, 2), 3): 3, ((8, 3), 3): 3, ((9, 3), 3): 3, ((5, 6), 0): 2, ((4, 1), 3): 2, ((8, 4), 4): 2, ((2, 6), 35): 2, ((4, 8), 13): 2, ((0, 2), 5): 2, ((0, 1), 8): 2, ((9, 2), 5): 2, ((5, 7), 3): 1, ((8, 6), 4): 1, ((5, 1), 4): 1, ((5, 9), 3): 1, ((6, 1), 5): 1, ((1, 8), 5): 1, ((7, 5), 4): 1, ((0, 5), 6): 1, ((6, 9), 0): 1, ((0, 6), 3): 1, ((6, 0), 30): 1, ((7, 6), 2): 1, ((1, 4), 0): 1, ((3, 2), 4): 1, ((6, 8), 32): 1, ((3, 7), 0): 1, ((4, 5), 0): 1, ((6, 3), 3): 1, ((9, 8), 2): 1, ((1, 5), 0): 1, ((0, 4), 3): 1, ((5, 3), 3): 1, ((2, 1), 4): 1, ((8, 8), 0): 1, ((3, 4), 0): 1, ((2, 4), 4): 1, ((9, 5), 4): 1, ((4, 3), 2): 1, ((1, 9), 0): 1, ((0, 9), 2): 1, ((6, 7), 0): 1, ((4, 2), 1): 1, ((3, 1), 8): 1, ((8, 1), 7): 1, ((7, 1), 6): 1, ((2, 3), 3): 1, ((0, 3), 6): 1, ((7, 0), 6): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 44s
------------------------------
Epoch 38/99 (max_len=3, data=4405)
Train acc: 76.78 (abduce 99.93)
Hit samples:  4402  Ave length:  2.55
Symbols:  14 Counter({8: 1222, 10: 1076, 13: 908, 0: 894, 11: 821, 4: 802, 12: 794, 2: 774, 1: 755, 6: 746, 7: 742, 5: 740, 3: 736, 9: 196})
Dep:  Counter({(1, -1, 1): 3402, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((8, 2), 4): 9, ((6, 3), 3): 5, ((7, 3), 3): 5, ((7, 2), 4): 5, ((8, 3), 3): 5, ((9, 6), 3): 4, ((5, 2), 3): 4, ((9, 4), 3): 4, ((9, 3), 3): 4, ((2, 6), 35): 4, ((7, 6), 5): 3, ((2, 3), 15): 3, ((9, 5), 4): 3, ((9, 2), 5): 2, ((9, 1), 5): 2, ((9, 9), 56): 2, ((6, 2), 3): 2, ((4, 4), 3): 1, ((8, 1), 7): 1, ((8, 5), 3): 1, ((0, 1), 2): 1, ((4, 0), 6): 1, ((4, 8), 24): 1, ((7, 7), 3): 1, ((5, 4), 2): 1, ((2, 9), 0): 1, ((7, 4), 3): 1, ((6, 8), 0): 1, ((3, 1), 63): 1, ((5, 9), 3): 1, ((4, 6), 0): 1, ((0, 6), 3): 1, ((3, 7), 0): 1, ((5, 8), 0): 1, ((0, 5), 3): 1, ((8, 7), 2): 1, ((7, 1), 6): 1, ((8, 4), 4): 1, ((5, 3), 3): 1, ((2, 4), 4): 1, ((2, 8), 3): 1, ((5, 1), 4): 1, ((7, 5), 4): 1, ((5, 7), 3): 1, ((5, 6), 0): 1, ((6, 1), 5): 1, ((1, 1), 8): 1, ((4, 9), 5): 1, ((2, 5), 4): 1, ((3, 8), 0): 1, ((0, 2), 3): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 56s
------------------------------
Epoch 39/99 (max_len=3, data=4405)
Train acc: 76.75 (abduce 99.77)
Hit samples:  4395  Ave length:  2.54
Symbols:  14 Counter({8: 1231, 10: 1068, 13: 908, 0: 883, 4: 806, 11: 804, 12: 798, 2: 787, 7: 749, 1: 748, 6: 742, 5: 737, 3: 736, 9: 188})
Dep:  Counter({(1, -1, 1): 3395, (-1,): 1000})
Learn perception with 4207 samples for 500 iterations, take 26 sec.
result accuracy by length:
1 ( 3%) 92.00
3 (12%) 54.10
5 (55%) 32.23
7 (29%) 21.06
result accuracy by symbol:
* (45%) 33.20
+ (45%) 36.09
- (45%) 11.43
/ (42%) 31.46
0 (23%) 26.49
1 (28%) 32.61
2 (29%) 31.24
3 (28%) 32.42
4 (28%) 29.89
5 (28%) 27.74
6 (28%) 32.93
7 (28%) 28.87
8 (27%) 30.52
9 (28%) 29.79
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 90.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 70.00
result accuracy by res:
0 (24%)  9.49
1 ( 9%) 66.13
2 ( 5%) 46.60
3 ( 5%) 27.61
4 ( 4%) 24.50
5 ( 4%) 28.39
6 ( 4%) 37.86
7 ( 4%) 32.45
8 ( 4%) 34.93
9 ( 4%) 40.71
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 38.25
unseen (41%) 26.56
val (Perception Acc=19.47, Syntax Acc=100.00, Result Acc=33.38)
Epoch time: 0m 30s
------------------------------
Epoch 40/99 (max_len=3, data=4405)
Train acc: 77.51 (abduce 99.68)
Hit samples:  4391  Ave length:  2.54
Symbols:  14 Counter({8: 1208, 10: 1072, 13: 929, 0: 919, 11: 807, 12: 794, 4: 793, 2: 775, 7: 749, 1: 742, 3: 737, 5: 734, 6: 732, 9: 182})
Dep:  Counter({(1, -1, 1): 3391, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 3), 3): 15, ((9, 4), 3): 8, ((3, 9), 11): 6, ((6, 3), 3): 5, ((7, 3), 3): 5, ((8, 3), 3): 5, ((9, 0), 3): 4, ((9, 1), 14): 3, ((8, 2), 4): 3, ((6, 2), 3): 3, ((2, 6), 35): 3, ((0, 7), 12): 2, ((9, 6), 3): 2, ((5, 5), 7): 2, ((5, 2), 3): 2, ((1, 1), 8): 1, ((5, 6), 0): 1, ((7, 2), 4): 1, ((9, 9), 27): 1, ((1, 2), 4): 1, ((8, 4), 4): 1, ((5, 1), 1): 1, ((3, 4), 4): 1, ((6, 4), 5): 1, ((2, 5), 3): 1, ((1, 7), 0): 1, ((0, 9), 3): 1, ((4, 3), 15): 1, ((0, 5), 2): 1, ((8, 5), 3): 1, ((2, 9), 0): 1, ((1, 4), 3): 1, ((2, 2), 0): 1, ((7, 5), 4): 1, ((5, 7), 3): 1, ((4, 0), 9): 1, ((8, 8), 6): 1, ((7, 6), 2): 1, ((4, 2), 5): 1, ((7, 4), 3): 1, ((3, 5), 4): 1, ((4, 1), 3): 1, ((4, 5), 0): 1, ((7, 1), 6): 1, ((0, 3), 2): 1, ((1, 0), 2): 1, ((0, 8), 3): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 15m 5s
------------------------------
Epoch 41/99 (max_len=3, data=4405)
Train acc: 77.83 (abduce 99.82)
Hit samples:  4397  Ave length:  2.55
Symbols:  14 Counter({8: 1227, 10: 1070, 13: 917, 0: 891, 11: 816, 12: 807, 4: 805, 2: 778, 1: 755, 7: 752, 3: 734, 6: 734, 5: 722, 9: 183})
Dep:  Counter({(1, -1, 1): 3397, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((7, 3), 3): 9, ((9, 3), 3): 8, ((9, 1), 14): 7, ((9, 4), 3): 6, ((6, 2), 3): 5, ((8, 3), 3): 4, ((9, 5), 4): 4, ((0, 2), 5): 4, ((2, 6), 35): 3, ((3, 7), 3): 3, ((9, 6), 3): 3, ((5, 5), 2): 2, ((5, 2), 3): 2, ((0, 1), 8): 2, ((0, 3), 27): 2, ((9, 9), 3): 2, ((6, 1), 5): 1, ((8, 5), 3): 1, ((6, 4), 1): 1, ((7, 6), 2): 1, ((8, 4), 4): 1, ((5, 1), 4): 1, ((4, 8), 2): 1, ((7, 5), 9): 1, ((0, 0), 7): 1, ((8, 9), 0): 1, ((7, 4), 3): 1, ((3, 4), 11): 1, ((5, 7), 3): 1, ((4, 1), 3): 1, ((7, 7), 4): 1, ((6, 8), 3): 1, ((1, 3), 0): 1, ((5, 9), 0): 1, ((1, 1), 6): 1, ((2, 2), 0): 1, ((3, 2), 7): 1, ((7, 1), 6): 1, ((4, 2), 5): 1, ((5, 3), 3): 1, ((7, 2), 4): 1, ((4, 3), 15): 1, ((9, 2), 7): 1, ((2, 1), 4): 1, ((6, 3), 3): 1, ((2, 9), 0): 1, ((8, 8), 3): 1, ((3, 3), 4): 1, ((8, 2), 4): 1, ((5, 6), 3): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 55s
------------------------------
Epoch 42/99 (max_len=3, data=4405)
Train acc: 77.59 (abduce 99.75)
Hit samples:  4394  Ave length:  2.54
Symbols:  14 Counter({8: 1228, 10: 1072, 13: 921, 0: 899, 12: 807, 11: 804, 4: 799, 2: 775, 7: 761, 1: 749, 3: 734, 6: 730, 5: 730, 9: 173})
Dep:  Counter({(1, -1, 1): 3394, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((7, 4), 3): 8, ((9, 4), 3): 7, ((7, 3), 3): 7, ((9, 3), 3): 6, ((5, 2), 3): 6, ((9, 1), 14): 5, ((6, 2), 3): 5, ((2, 6), 35): 4, ((0, 1), 2): 4, ((3, 9), 11): 3, ((6, 3), 3): 3, ((9, 6), 3): 2, ((7, 2), 4): 2, ((8, 4), 4): 2, ((5, 3), 45): 2, ((0, 4), 5): 2, ((0, 6), 12): 2, ((7, 6), 2): 1, ((8, 9), 0): 1, ((0, 5), 3): 1, ((9, 5), 4): 1, ((9, 7), 0): 1, ((1, 3), 0): 1, ((9, 2), 5): 1, ((3, 4), 0): 1, ((5, 6), 0): 1, ((8, 1), 7): 1, ((5, 9), 0): 1, ((7, 1), 6): 1, ((6, 1), 5): 1, ((4, 1), 3): 1, ((2, 3), 3): 1, ((1, 1), 6): 1, ((5, 7), 3): 1, ((4, 3), 15): 1, ((7, 9), 4): 1, ((7, 7), 2): 1, ((8, 5), 3): 1, ((5, 1), 4): 1, ((1, 4), 0): 1, ((6, 4), 4): 1, ((8, 2), 4): 1, ((5, 5), 3): 1, ((6, 6), 3): 1, ((6, 0), 8): 1, ((6, 8), 3): 1, ((2, 4), 3): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 15m 4s
------------------------------
Epoch 43/99 (max_len=3, data=4405)
Train acc: 77.70 (abduce 99.86)
Hit samples:  4399  Ave length:  2.55
Symbols:  14 Counter({8: 1217, 10: 1084, 13: 930, 0: 905, 12: 809, 11: 803, 4: 802, 2: 782, 7: 752, 1: 744, 3: 743, 6: 731, 5: 727, 9: 168})
Dep:  Counter({(1, -1, 1): 3399, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((7, 3), 3): 13, ((3, 9), 11): 8, ((9, 4), 3): 7, ((5, 6), 0): 5, ((8, 4), 4): 4, ((9, 1), 14): 4, ((2, 6), 35): 3, ((0, 0), 2): 3, ((8, 2), 4): 3, ((6, 3), 3): 3, ((9, 3), 3): 3, ((6, 2), 3): 3, ((5, 5), 4): 3, ((5, 4), 16): 3, ((0, 3), 27): 2, ((0, 7), 12): 2, ((4, 3), 2): 2, ((9, 5), 4): 2, ((7, 2), 4): 2, ((8, 3), 3): 2, ((9, 6), 3): 2, ((0, 2), 5): 2, ((7, 4), 3): 2, ((4, 1), 3): 1, ((5, 7), 3): 1, ((3, 1), 6): 1, ((7, 9), 3): 1, ((8, 5), 3): 1, ((5, 2), 3): 1, ((2, 9), 0): 1, ((5, 8), 3): 1, ((4, 2), 3): 1, ((4, 5), 0): 1, ((8, 9), 13): 1, ((5, 1), 4): 1, ((2, 5), 0): 1, ((6, 1), 5): 1, ((0, 5), 3): 1, ((2, 4), 7): 1, ((2, 3), 3): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 15m 8s
------------------------------
Epoch 44/99 (max_len=3, data=4405)
Train acc: 78.00 (abduce 99.86)
Hit samples:  4399  Ave length:  2.55
Symbols:  14 Counter({8: 1230, 10: 1076, 13: 921, 0: 895, 11: 808, 12: 806, 4: 797, 2: 788, 1: 756, 3: 742, 5: 740, 7: 738, 6: 728, 9: 172})
Dep:  Counter({(1, -1, 1): 3399, (-1,): 1000})
Learn perception with 4227 samples for 500 iterations, take 26 sec.
result accuracy by length:
1 ( 3%) 91.00
3 (12%) 53.59
5 (55%) 31.45
7 (29%) 21.06
result accuracy by symbol:
* (45%) 32.17
+ (45%) 35.42
- (45%) 11.02
/ (42%) 31.54
0 (23%) 25.97
1 (28%) 31.30
2 (29%) 30.92
3 (28%) 31.76
4 (28%) 30.88
5 (28%) 27.96
6 (28%) 32.16
7 (28%) 27.77
8 (27%) 30.18
9 (28%) 29.58
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 90.00
6 ( 0%) 90.00
7 ( 0%) 90.00
8 ( 0%) 90.00
9 ( 0%) 70.00
result accuracy by res:
0 (24%)  8.97
1 ( 9%) 66.45
2 ( 5%) 47.64
3 ( 5%) 27.61
4 ( 4%) 25.83
5 ( 4%) 28.39
6 ( 4%) 33.57
7 ( 4%) 30.46
8 ( 4%) 32.88
9 ( 4%) 42.14
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 37.62
unseen (41%) 26.19
val (Perception Acc=19.72, Syntax Acc=100.00, Result Acc=32.86)
Epoch time: 0m 30s
------------------------------
Epoch 45/99 (max_len=3, data=4405)
Train acc: 79.20 (abduce 99.89)
Hit samples:  4400  Ave length:  2.55
Symbols:  14 Counter({8: 1226, 10: 1080, 13: 927, 0: 904, 4: 808, 11: 807, 12: 803, 2: 776, 1: 752, 7: 742, 5: 741, 3: 737, 6: 730, 9: 167})
Dep:  Counter({(1, -1, 1): 3400, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 4), 3): 8, ((6, 1), 24): 6, ((9, 3), 3): 6, ((9, 6), 3): 5, ((5, 2), 3): 5, ((6, 2), 3): 5, ((7, 6), 2): 4, ((8, 5), 3): 3, ((8, 4), 4): 3, ((0, 0), 2): 3, ((8, 2), 4): 3, ((7, 3), 3): 3, ((5, 4), 3): 3, ((7, 5), 3): 2, ((9, 2), 7): 2, ((7, 2), 4): 2, ((6, 7), 2): 2, ((2, 6), 35): 2, ((8, 3), 3): 2, ((7, 4), 3): 2, ((3, 9), 11): 2, ((8, 6), 0): 1, ((9, 1), 8): 1, ((0, 8), 11): 1, ((4, 1), 3): 1, ((2, 1), 8): 1, ((0, 6), 3): 1, ((2, 4), 4): 1, ((7, 1), 6): 1, ((1, 5), 0): 1, ((5, 3), 3): 1, ((6, 0), 24): 1, ((3, 1), 5): 1, ((0, 2), 4): 1, ((6, 3), 3): 1, ((6, 8), 4): 1, ((4, 3), 3): 1, ((4, 6), 3): 1, ((9, 9), 3): 1, ((9, 5), 4): 1, ((3, 7), 0): 1, ((2, 3), 3): 1, ((8, 9), 0): 1, ((4, 5), 0): 1, ((1, 9), 0): 1, ((8, 7), 3): 1, ((2, 5), 4): 1, ((4, 8), 3): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 15m 1s
------------------------------
Epoch 46/99 (max_len=3, data=4405)
Train acc: 80.60 (abduce 99.80)
Hit samples:  4396  Ave length:  2.55
Symbols:  14 Counter({8: 1241, 10: 1081, 0: 917, 13: 909, 11: 814, 12: 804, 4: 794, 2: 767, 1: 755, 5: 746, 3: 735, 7: 733, 6: 727, 9: 165})
Dep:  Counter({(1, -1, 1): 3396, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 3), 3): 10, ((5, 7), 63): 6, ((9, 6), 3): 5, ((8, 5), 3): 4, ((8, 3), 3): 4, ((7, 4), 3): 4, ((8, 2), 4): 4, ((9, 8), 2): 4, ((0, 5), 4): 3, ((9, 5), 4): 3, ((7, 2), 4): 2, ((2, 6), 35): 2, ((7, 6), 2): 2, ((5, 2), 3): 2, ((9, 4), 3): 2, ((0, 2), 4): 2, ((7, 3), 3): 2, ((3, 9), 11): 2, ((6, 6), 3): 2, ((9, 1), 5): 2, ((9, 2), 5): 2, ((6, 1), 5): 2, ((1, 7), 9): 1, ((4, 5), 2): 1, ((4, 8), 3): 1, ((6, 2), 3): 1, ((0, 6), 3): 1, ((7, 1), 3): 1, ((3, 2), 7): 1, ((2, 8), 64): 1, ((4, 2), 1): 1, ((0, 1), 8): 1, ((1, 5), 0): 1, ((4, 1), 3): 1, ((6, 5), 2): 1, ((2, 7), 3): 1, ((3, 0), 1): 1, ((4, 3), 15): 1, ((5, 6), 0): 1, ((3, 4), 0): 1, ((5, 4), 3): 1, ((8, 4), 4): 1, ((6, 3), 3): 1, ((3, 3), 0): 1, ((8, 8), 0): 1, ((8, 1), 7): 1, ((3, 1), 5): 1, ((0, 7), 16): 1, ((1, 6), 3): 1, ((2, 9), 0): 1, ((5, 1), 4): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 15m 3s
------------------------------
Epoch 47/99 (max_len=3, data=4405)
Train acc: 79.09 (abduce 99.86)
Hit samples:  4399  Ave length:  2.55
Symbols:  14 Counter({8: 1227, 10: 1081, 13: 916, 0: 895, 11: 812, 4: 803, 12: 799, 2: 798, 1: 749, 5: 740, 7: 739, 3: 732, 6: 731, 9: 175})
Dep:  Counter({(1, -1, 1): 3399, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((2, 8), 64): 8, ((8, 3), 3): 7, ((4, 1), 3): 6, ((7, 3), 3): 5, ((6, 6), 3): 5, ((9, 3), 3): 4, ((7, 0), 1): 4, ((9, 4), 3): 3, ((2, 0), 1): 3, ((7, 2), 4): 3, ((9, 7), 81): 3, ((6, 3), 3): 3, ((9, 5), 4): 3, ((8, 2), 4): 3, ((4, 3), 3): 2, ((5, 4), 0): 2, ((5, 2), 3): 2, ((8, 4), 4): 2, ((9, 6), 3): 2, ((7, 9), 3): 2, ((0, 1), 8): 1, ((9, 1), 3): 1, ((5, 5), 2): 1, ((2, 6), 35): 1, ((3, 7), 0): 1, ((5, 3), 7): 1, ((5, 1), 4): 1, ((5, 8), 3): 1, ((3, 9), 11): 1, ((7, 1), 6): 1, ((5, 6), 3): 1, ((0, 4), 2): 1, ((4, 9), 5): 1, ((2, 2), 16): 1, ((0, 2), 3): 1, ((1, 2), 4): 1, ((3, 4), 4): 1, ((8, 9), 42): 1, ((4, 5), 0): 1, ((0, 6), 3): 1, ((5, 7), 3): 1, ((6, 2), 3): 1, ((8, 1), 7): 1, ((2, 7), 0): 1, ((3, 2), 0): 1, ((7, 8), 0): 1, ((1, 8), 0): 1, ((3, 6), 54): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 14m 60s
------------------------------
Epoch 48/99 (max_len=3, data=4405)
Train acc: 79.83 (abduce 99.89)
Hit samples:  4400  Ave length:  2.55
Symbols:  14 Counter({8: 1241, 10: 1079, 13: 916, 0: 914, 12: 807, 11: 804, 4: 793, 2: 782, 1: 759, 5: 750, 7: 745, 3: 725, 6: 721, 9: 164})
Dep:  Counter({(1, -1, 1): 3400, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 4), 3): 19, ((7, 3), 27): 7, ((6, 2), 3): 7, ((9, 2), 14): 6, ((4, 0), 9): 5, ((8, 3), 3): 5, ((3, 9), 11): 3, ((6, 5), 2): 3, ((9, 5), 4): 3, ((7, 4), 3): 3, ((9, 3), 3): 3, ((2, 6), 35): 2, ((8, 2), 4): 2, ((9, 6), 3): 2, ((7, 2), 4): 2, ((5, 2), 3): 2, ((0, 4), 2): 2, ((0, 6), 3): 1, ((6, 8), 0): 1, ((5, 6), 0): 1, ((5, 7), 0): 1, ((8, 8), 0): 1, ((3, 4), 2): 1, ((3, 1), 5): 1, ((6, 3), 3): 1, ((5, 4), 3): 1, ((0, 2), 3): 1, ((9, 7), 1): 1, ((5, 5), 0): 1, ((8, 0), 12): 1, ((4, 6), 12): 1, ((7, 5), 4): 1, ((2, 3), 3): 1, ((5, 9), 0): 1, ((8, 1), 7): 1, ((7, 1), 6): 1, ((4, 3), 3): 1, ((2, 7), 0): 1, ((0, 1), 5): 1, ((9, 0), 3): 1, ((8, 5), 3): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 15m 13s
------------------------------
Epoch 49/99 (max_len=3, data=4405)
Train acc: 79.95 (abduce 99.86)
Hit samples:  4399  Ave length:  2.55
Symbols:  14 Counter({8: 1231, 10: 1082, 13: 919, 0: 900, 12: 811, 11: 805, 4: 796, 2: 785, 1: 757, 7: 738, 3: 738, 6: 734, 5: 734, 9: 167})
Dep:  Counter({(1, -1, 1): 3399, (-1,): 1000})
Learn perception with 4232 samples for 500 iterations, take 26 sec.
result accuracy by length:
1 ( 3%) 92.00
3 (12%) 54.87
5 (55%) 31.95
7 (29%) 20.95
result accuracy by symbol:
* (45%) 32.58
+ (45%) 35.75
- (45%) 11.56
/ (42%) 32.05
0 (23%) 26.87
1 (28%) 31.20
2 (29%) 31.14
3 (28%) 32.64
4 (28%) 30.55
5 (28%) 28.40
6 (28%) 32.16
7 (28%) 28.98
8 (27%) 30.75
9 (28%) 28.93
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 90.00
6 ( 0%) 90.00
7 ( 0%) 90.00
8 ( 0%) 80.00
9 ( 0%) 80.00
result accuracy by res:
0 (24%)  9.74
1 ( 9%) 64.84
2 ( 5%) 47.64
3 ( 5%) 29.45
4 ( 4%) 24.50
5 ( 4%) 30.97
6 ( 4%) 35.00
7 ( 4%) 31.13
8 ( 4%) 34.93
9 ( 4%) 44.29
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 38.52
unseen (41%) 25.96
val (Perception Acc=19.68, Syntax Acc=100.00, Result Acc=33.29)
Epoch time: 0m 30s
------------------------------
Epoch 50/99 (max_len=5, data=13285)
Train acc: 45.45 (abduce 97.73)
Hit samples:  12983  Ave length:  4.17
Symbols:  14 Counter({8: 6894, 10: 5970, 13: 5269, 0: 4372, 1: 3492, 11: 3425, 12: 3353, 4: 3314, 2: 3312, 5: 3213, 6: 3090, 7: 3087, 3: 2887, 9: 2429})
Dep:  Counter({(1, 3, 1, -1, 3): 6325, (1, -1, 1): 3404, (1, -1, 3, 1, 3): 2254, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((1, 8), 0): 2, ((35, 1), 33): 1, ((5, 54), 0): 1, ((7, 10), 0): 1, ((6, 8), 10): 1, ((11, 8), 0): 1, ((27, 2), 14): 1, ((12, 4), 11): 1, ((2, 48), 3): 1, ((5, 24), 0): 1, ((49, 7), 3): 1, ((45, 8), 37): 1, ((13, 0), 1): 1, ((20, 6), 4): 1, ((17, 9), 63): 1, ((0, 56), 64): 1, ((6, 45), 0): 1, ((21, 0), 5): 1, ((28, 4), 7): 1, ((48, 9), 4): 1, ((18, 7), 11): 1, ((10, 9), 9): 1, ((3, 2), 13): 1, ((14, 7), 7): 1, ((45, 5), 17): 1, ((1, 2), 0): 1, ((2, 40), 0): 1, ((0, 2), 3): 1, ((5, 4), 2): 1, ((3, 8), 0): 1, ((0, 10), 26): 1, ((35, 0), 33): 1, ((32, 7), 5): 1, ((12, 0), 28): 1, ((17, 4), 15): 1, ((4, 11), 0): 1, ((7, 12), 55): 1, ((8, 36), 0): 1, ((1, 14), 0): 1, ((13, 4), 10): 1, ((1, 5), 0): 1, ((1, 20), 33): 1, ((2, 28), 0): 1, ((0, 1), 5): 1, ((18, 5), 21): 1, ((15, 2), 8): 1, ((72, 2), 70): 1, ((3, 72), 0): 1, ((0, 4), 10): 1, ((8, 9), 0): 1, ((9, 42), 8): 1, ((0, 8), 7): 1, ((8, 8), 24): 1, ((72, 1), 54): 1, ((0, 28), 14): 1, ((25, 5), 6): 1, ((81, 3), 29): 1, ((10, 6), 4): 1, ((7, 7), 0): 1, ((3, 9), 0): 1, ((12, 1), 3): 1, ((6, 0), 41): 1, ((18, 3), 17): 1, ((14, 6), 41): 1, ((14, 1), 5): 1, ((9, 21), 54): 1, ((48, 6), 42): 1, ((56, 1), 72): 1, ((11, 5), 0): 1, ((15, 4), 0): 1, ((4, 12), 40): 1, ((42, 9), 53): 1, ((4, 8), 0): 1, ((21, 5), 5): 1, ((5, 5), 8): 1, ((5, 48), 54): 1, ((1, 7), 0): 1, ((3, 20), 0): 1, ((2, 36), 0): 1, ((48, 5), 43): 1, ((9, 24), 0): 1, ((12, 9), 0): 1, ((0, 32), 48): 1, ((32, 3), 29): 1, ((56, 7), 5): 1, ((12, 8), 16): 1, ((32, 2), 0): 1, ((25, 1), 6): 1, ((28, 3), 9): 1, ((13, 9), 0): 1, ((8, 18), 0): 1, ((2, 7), 0): 1, ((8, 6), 5): 1, ((4, 24), 0): 1, ((16, 6), 4): 1, ((6, 4), 9): 1, ((63, 6), 75): 1, ((9, 48), 48): 1, ((81, 5), 17): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 16m 41s
------------------------------
Epoch 51/99 (max_len=5, data=13285)
Train acc: 45.28 (abduce 97.63)
Hit samples:  12970  Ave length:  4.17
Symbols:  14 Counter({8: 6858, 10: 5926, 13: 5283, 0: 4282, 1: 3463, 11: 3451, 12: 3419, 4: 3301, 2: 3276, 5: 3214, 7: 3119, 6: 3076, 3: 2908, 9: 2472})
Dep:  Counter({(1, 3, 1, -1, 3): 6309, (1, -1, 1): 3401, (1, -1, 3, 1, 3): 2260, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((1, 9), 0): 2, ((1, 8), 0): 2, ((18, 5), 4): 1, ((0, 64), 4): 1, ((1, 2), 0): 1, ((4, 30), 0): 1, ((81, 5), 17): 1, ((13, 9), 0): 1, ((20, 0), 22): 1, ((16, 9), 1): 1, ((27, 7), 16): 1, ((4, 14), 0): 1, ((56, 2), 50): 1, ((0, 3), 9): 1, ((0, 1), 5): 1, ((48, 0), 11): 1, ((6, 45), 0): 1, ((0, 24), 20): 1, ((9, 4), 3): 1, ((28, 8), 16): 1, ((24, 5), 19): 1, ((63, 5), 17): 1, ((40, 8), 4): 1, ((56, 1), 72): 1, ((56, 4), 6): 1, ((5, 54), 0): 1, ((0, 4), 12): 1, ((10, 7), 3): 1, ((1, 1), 0): 1, ((15, 8), 8): 1, ((15, 2), 36): 1, ((8, 40), 0): 1, ((8, 7), 14): 1, ((12, 4), 8): 1, ((6, 4), 0): 1, ((40, 6), 13): 1, ((24, 2), 22): 1, ((18, 6), 0): 1, ((20, 5), 6): 1, ((48, 6), 0): 1, ((3, 9), 0): 1, ((4, 17), 6): 1, ((9, 8), 4): 1, ((27, 5), 9): 1, ((4, 6), 0): 1, ((27, 0), 85): 1, ((0, 8), 11): 1, ((25, 0), 13): 1, ((17, 2), 15): 1, ((12, 9), 0): 1, ((0, 18), 14): 1, ((2, 8), 9): 1, ((1, 81), 19): 1, ((24, 6), 1): 1, ((2, 7), 44): 1, ((4, 2), 1): 1, ((1, 5), 0): 1, ((18, 0), 20): 1, ((3, 24), 28): 1, ((12, 8), 10): 1, ((1, 45), 0): 1, ((35, 9), 4): 1, ((15, 7), 10): 1, ((15, 3), 12): 1, ((63, 4), 85): 1, ((8, 81), 0): 1, ((5, 16), 4): 1, ((10, 9), 2): 1, ((15, 4), 4): 1, ((9, 15), 7): 1, ((15, 9), 3): 1, ((36, 3), 33): 1, ((14, 2), 5): 1, ((36, 6), 6): 1, ((72, 4), 72): 1, ((36, 5), 8): 1, ((4, 4), 0): 1, ((49, 9), 3): 1, ((42, 3), 21): 1, ((1, 16), 0): 1, ((3, 2), 3): 1, ((2, 2), 0): 1, ((7, 0), 6): 1, ((1, 7), 0): 1, ((2, 3), 0): 1, ((27, 8), 19): 1, ((6, 7), 3): 1, ((45, 4), 37): 1, ((2, 0), 3): 1, ((4, 9), 0): 1, ((16, 5), 4): 1, ((63, 3), 5): 1, ((20, 4), 5): 1, ((14, 3), 9): 1, ((25, 4), 4): 1, ((32, 7), 5): 1, ((63, 7), 3): 1, ((5, 1), 4): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Epoch time: 16m 22s
------------------------------
Epoch 52/99 (max_len=5, data=13285)
Train acc: 44.99 (abduce 97.61)
Hit samples:  12968  Ave length:  4.17
Symbols:  14 Counter({8: 6937, 10: 5909, 13: 5251, 0: 4317, 1: 3490, 11: 3470, 12: 3402, 4: 3276, 2: 3253, 5: 3226, 7: 3088, 6: 3087, 3: 2897, 9: 2441})
Dep:  Counter({(1, 3, 1, -1, 3): 6331, (1, -1, 1): 3398, (1, -1, 3, 1, 3): 2239, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((1, 6), 0): 2, ((7, 6), 2): 1, ((4, 5), 2): 1, ((2, 64), 14): 1, ((27, 9), 19): 1, ((42, 9), 0): 1, ((15, 1), 1): 1, ((8, 3), 16): 1, ((63, 9), 36): 1, ((1, 10), 0): 1, ((10, 4), 16): 1, ((1, 3), 0): 1, ((13, 1), 12): 1, ((48, 9), 33): 1, ((1, 4), 0): 1, ((5, 2), 0): 1, ((54, 5), 11): 1, ((20, 8), 216): 1, ((42, 1), 41): 1, ((9, 40), 0): 1, ((6, 5), 9): 1, ((0, 18), 19): 1, ((0, 9), 6): 1, ((8, 1), 7): 1, ((18, 2), 162): 1, ((54, 9), 9): 1, ((42, 7), 5): 1, ((27, 8), 19): 1, ((8, 2), 4): 1, ((8, 17), 10): 1, ((36, 2), 22): 1, ((18, 3), 36): 1, ((1, 12), 0): 1, ((4, 0), 5): 1, ((9, 18), 3): 1, ((9, 8), 2): 1, ((5, 32), 0): 1, ((0, 7), 19): 1, ((3, 63), 0): 1, ((15, 9), 3): 1, ((6, 14), 5): 1, ((36, 3), 33): 1, ((35, 0), 33): 1, ((28, 5), 1): 1, ((6, 18), 0): 1, ((10, 7), 3): 1, ((0, 8), 3): 1, ((1, 27), 0): 1, ((1, 5), 0): 1, ((4, 6), 11): 1, ((8, 81), 0): 1, ((14, 7), 1): 1, ((48, 5), 43): 1, ((13, 7), 41): 1, ((11, 0), 3): 1, ((8, 12), 18): 1, ((16, 8), 0): 1, ((4, 11), 0): 1, ((12, 1), 11): 1, ((2, 0), 4): 1, ((81, 6), 75): 1, ((3, 2), 17): 1, ((40, 8), 4): 1, ((54, 7), 10): 1, ((48, 1), 44): 1, ((18, 9), 9): 1, ((13, 8), 0): 1, ((2, 15), 4): 1, ((11, 9), 45): 1, ((72, 0), 70): 1, ((56, 6), 50): 1, ((8, 4), 4): 1, ((12, 7), 7): 1, ((5, 72), 7): 1, ((24, 6), 42): 1, ((18, 7), 11): 1, ((32, 6), 8): 1, ((9, 2), 7): 1, ((5, 0), 2): 1, ((6, 49), 6): 1, ((8, 6), 0): 1, ((1, 9), 0): 1, ((4, 15), 0): 1, ((8, 72), 0): 1, ((4, 1), 0): 1, ((15, 8), 200): 1, ((11, 6), 5): 1, ((3, 81), 0): 1, ((16, 2), 0): 1, ((24, 9), 15): 1, ((14, 3), 3): 1, ((45, 5), 17): 1, ((14, 4), 4): 1, ((81, 5), 17): 1, ((16, 9), 13): 1, ((6, 2), 3): 1, ((13, 2), 17): 1, ((3, 6), 0): 1, ((25, 6), 4): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-09: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 (decr0 $0) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 0 (decr0 $1)) ($2 (decr0 $1) (decr0 $0))))))))) 0.39
Epoch time: 16m 27s
------------------------------
Epoch 53/99 (max_len=5, data=13285)
Train acc: 45.12 (abduce 97.68)
Hit samples:  12977  Ave length:  4.17
Symbols:  14 Counter({8: 6370, 10: 5859, 13: 5208, 0: 4003, 1: 3512, 11: 3450, 12: 3434, 4: 3337, 5: 3281, 2: 3260, 7: 3173, 6: 3138, 9: 3117, 3: 2943})
Dep:  Counter({(1, 3, 1, -1, 3): 6327, (1, -1, 1): 3400, (1, -1, 3, 1, 3): 2250, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 1), 8): 2, ((1, 3), 0): 2, ((1, 7), 0): 2, ((1, 8), 0): 2, ((1, 24), 0): 1, ((42, 4), 6): 1, ((36, 2), 22): 1, ((30, 3), 5): 1, ((9, 3), 3): 1, ((0, 0), 48): 1, ((8, 36), 0): 1, ((20, 7), 37): 1, ((11, 2), 10): 1, ((15, 2), 8): 1, ((3, 6), 0): 1, ((6, 10), 5): 1, ((14, 8), 10): 1, ((0, 10), 20): 1, ((7, 2), 4): 1, ((3, 54), 0): 1, ((72, 4), 63): 1, ((81, 5), 17): 1, ((7, 54), 37): 1, ((12, 4), 8): 1, ((5, 36), 0): 1, ((35, 0), 13): 1, ((36, 6), 6): 1, ((14, 2), 7): 1, ((72, 2), 70): 1, ((49, 3), 3): 1, ((7, 3), 4): 1, ((7, 9), 0): 1, ((12, 6), 6): 1, ((7, 8), 0): 1, ((27, 1), 26): 1, ((1, 6), 0): 1, ((3, 14), 7): 1, ((56, 4), 0): 1, ((63, 4), 378): 1, ((2, 6), 35): 1, ((12, 1), 11): 1, ((0, 56), 64): 1, ((28, 8), 8): 1, ((45, 3), 42): 1, ((8, 56), 0): 1, ((12, 5), 43): 1, ((6, 4), 5): 1, ((48, 6), 42): 1, ((5, 6), 0): 1, ((7, 40), 0): 1, ((1, 2), 0): 1, ((35, 3), 33): 1, ((8, 81), 0): 1, ((36, 5), 8): 1, ((3, 24), 28): 1, ((8, 18), 0): 1, ((4, 2), 18): 1, ((6, 45), 0): 1, ((17, 5), 15): 1, ((1, 4), 0): 1, ((56, 7), 15): 1, ((16, 2), 5): 1, ((1, 17), 0): 1, ((1, 5), 0): 1, ((3, 72), 0): 1, ((40, 3), 0): 1, ((5, 8), 10): 1, ((12, 8), 8): 1, ((54, 1), 53): 1, ((36, 7), 5): 1, ((3, 28), 0): 1, ((0, 1), 9): 1, ((3, 63), 0): 1, ((8, 25), 0): 1, ((8, 30), 0): 1, ((24, 6), 42): 1, ((3, 21), 0): 1, ((8, 8), 0): 1, ((21, 7), 3): 1, ((9, 2), 5): 1, ((0, 14), 23): 1, ((48, 9), 4): 1, ((25, 2), 23): 1, ((42, 5), 15): 1, ((20, 6), 4): 1, ((3, 11), 6): 1, ((13, 4), 10): 1, ((10, 9), 2): 1, ((6, 3), 3): 1, ((11, 9), 0): 1, ((6, 5), 12): 1, ((9, 28), 0): 1, ((3, 56), 0): 1, ((7, 36), 0): 1, ((11, 8), 0): 1, ((40, 2), 38): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr (if0 (decr0 ($2 (decr0 $1) (decr0 $0))) 0 (incr 0)))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-09: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 (decr0 $0) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (if0 $1 0 (incr ($2 $0 (decr0 $1))))))))))) $0 ($2 $0 (decr0 $1)))))))))) 0 (decr0 $1)) ($2 (decr0 $1) (decr0 $0))))))))) 0.61
Epoch time: 16m 16s
------------------------------
Epoch 54/99 (max_len=5, data=13285)
Train acc: 45.22 (abduce 97.67)
Hit samples:  12975  Ave length:  4.17
Symbols:  14 Counter({8: 6471, 10: 5773, 13: 5266, 0: 3987, 1: 3520, 11: 3474, 12: 3423, 2: 3312, 4: 3311, 5: 3260, 6: 3151, 7: 3137, 9: 3037, 3: 2947})
Dep:  Counter({(1, 3, 1, -1, 3): 6325, (1, -1, 1): 3403, (1, -1, 3, 1, 3): 2247, (-1,): 1000})
Learn perception with 11817 samples for 500 iterations, take 17 sec.
