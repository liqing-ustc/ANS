train: 18405 val: 3238 test: 58965
CUDA is available?: True
using cuda?: True
Namespace(curriculum=True, epochs=100, epochs_eval=5, excludes='!', output_dir='./outputs/exp_syntax_curriculum_1/', perception=False, resume=None, seed=314, semantics=False, syntax=True)
SymbolNet(
  (conv1): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (dropout1): Dropout2d(p=0.25, inplace=False)
  (dropout2): Dropout2d(p=0.5, inplace=False)
  (fc1): Linear(in_features=30976, out_features=128, bias=True)
  (fc2): Linear(in_features=128, out_features=14, bias=True)
)
use ground-truth syntax.
Symbol-00: None 0.00
Symbol-01: None 0.00
Symbol-02: None 0.00
Symbol-03: None 0.00
Symbol-04: None 0.00
Symbol-05: None 0.00
Symbol-06: None 0.00
Symbol-07: None 0.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Curriculum: [(0, 1), (5, 3), (50, 5), (100, inf)]
result accuracy by length:
1 ( 3%)  0.00
3 (12%)  0.00
5 (55%)  0.00
7 (29%)  0.00
result accuracy by symbol:
* (45%)  0.00
+ (45%)  0.00
- (45%)  0.00
/ (42%)  0.00
0 (23%)  0.00
1 (28%)  0.00
2 (29%)  0.00
3 (28%)  0.00
4 (28%)  0.00
5 (28%)  0.00
6 (28%)  0.00
7 (28%)  0.00
8 (27%)  0.00
9 (28%)  0.00
result accuracy by digit:
0 ( 0%)  0.00
1 ( 0%)  0.00
2 ( 0%)  0.00
3 ( 0%)  0.00
4 ( 0%)  0.00
5 ( 0%)  0.00
6 ( 0%)  0.00
7 ( 0%)  0.00
8 ( 0%)  0.00
9 ( 0%)  0.00
result accuracy by res:
0 (24%)  0.00
1 ( 9%)  0.00
2 ( 5%)  0.00
3 ( 5%)  0.00
4 ( 4%)  0.00
5 ( 4%)  0.00
6 ( 4%)  0.00
7 ( 4%)  0.00
8 ( 4%)  0.00
9 ( 4%)  0.00
result accuracy by condition:
long ( 0%)  0.00
seen (58%)  0.00
unseen (41%)  0.00
val (Perception Acc=6.43, Syntax Acc=100.00, Result Acc=0.00)
------------------------------
Epoch 0/99 (max_len=1, data=1000)
Train acc: 0.00 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  14 Counter({3: 84, 11: 80, 0: 78, 6: 78, 9: 76, 1: 76, 4: 75, 10: 74, 13: 70, 2: 69, 12: 65, 5: 60, 8: 59, 7: 56})
Dep:  Counter({(-1,): 1000})
Semantics: 14/0/13 (total/solved/learn).
Symbol-00 (int), Samples:  12,  Counter({((), 0): 12})
Symbol-01 (int), Samples:  12,  Counter({((), 6): 12})
Symbol-02 (int), Samples:  13,  Counter({((), 4): 13})
Symbol-03 (int), Samples:  14,  Counter({((), 0): 14})
Symbol-04 (int), Samples:  13,  Counter({((), 2): 13})
Symbol-05 (int), Samples:  13,  Counter({((), 5): 13})
Symbol-06 (int), Samples:  11,  Counter({((), 7): 11})
Symbol-08 (int), Samples:  10,  Counter({((), 0): 10})
Symbol-09 (int), Samples:  13,  Counter({((), 7): 13})
Symbol-10 (int), Samples:  12,  Counter({((), 4): 12})
Symbol-11 (int), Samples:  11,  Counter({((), 1): 11})
Symbol-12 (int), Samples:  12,  Counter({((), 2): 12})
Symbol-13 (int), Samples:  10,  Counter({((), 5): 10})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: None 0.00
Symbol-07: None 0.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 25s
------------------------------
Epoch 1/99 (max_len=1, data=1000)
Train acc: 5.34 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  14 Counter({13: 105, 2: 100, 1: 100, 6: 100, 4: 100, 5: 100, 11: 100, 0: 100, 3: 65, 12: 40, 7: 32, 10: 25, 9: 18, 8: 15})
Dep:  Counter({(-1,): 1000})
Semantics: 14/7/5 (total/solved/learn).
Symbol-03 (int), Samples:  24,  Counter({((), 8): 24})
Symbol-07 (int), Samples:  14,  Counter({((), 9): 14})
Symbol-10 (int), Samples:  10,  Counter({((), 9): 10})
Symbol-12 (int), Samples:  19,  Counter({((), 3): 19})
Symbol-13 (int), Samples:  40,  Counter({((), 8): 40})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 23s
------------------------------
Epoch 2/99 (max_len=1, data=1000)
Train acc: 6.83 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({2: 100, 12: 100, 6: 100, 4: 100, 1: 100, 5: 100, 7: 100, 11: 100, 0: 100, 3: 100})
Dep:  Counter({(-1,): 1000})
Semantics: 14/10/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 1s
------------------------------
Epoch 3/99 (max_len=1, data=1000)
Train acc: 7.91 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({4: 100, 1: 100, 5: 100, 11: 100, 0: 100, 2: 100, 7: 100, 12: 100, 6: 100, 3: 100})
Dep:  Counter({(-1,): 1000})
Semantics: 14/10/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 1s
------------------------------
Epoch 4/99 (max_len=1, data=1000)
Train acc: 7.53 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({12: 100, 4: 100, 11: 100, 1: 100, 2: 100, 6: 100, 7: 100, 5: 100, 3: 100, 0: 100})
Dep:  Counter({(-1,): 1000})
Learn perception with 1000 samples for 500 iterations, take 162 sec.
result accuracy by length:
1 ( 3%) 89.00
3 (12%)  0.00
5 (55%)  0.00
7 (29%)  0.00
result accuracy by symbol:
* (45%)  0.00
+ (45%)  0.00
- (45%)  0.00
/ (42%)  0.00
0 (23%)  1.29
1 (28%)  0.98
2 (29%)  0.85
3 (28%)  0.88
4 (28%)  1.10
5 (28%)  0.88
6 (28%)  1.10
7 (28%)  1.10
8 (27%)  0.80
9 (28%)  0.98
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 90.00
2 ( 0%) 80.00
3 ( 0%) 80.00
4 ( 0%) 100.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 70.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%)  1.28
1 ( 9%)  2.90
2 ( 5%)  4.19
3 ( 5%)  4.91
4 ( 4%)  6.62
5 ( 4%)  5.16
6 ( 4%)  7.14
7 ( 4%)  6.62
8 ( 4%)  4.79
9 ( 4%)  6.43
result accuracy by condition:
long ( 0%)  0.00
seen (58%)  4.71
unseen (41%)  0.00
val (Perception Acc=19.94, Syntax Acc=100.00, Result Acc=2.75)
Epoch time: 2m 45s
------------------------------
Epoch 5/99 (max_len=3, data=4405)
Train acc: 21.83 (abduce 99.89)
Hit samples:  4400  Ave length:  2.55
Symbols:  14 Counter({10: 1114, 9: 915, 2: 838, 7: 833, 1: 819, 3: 790, 6: 783, 11: 778, 5: 772, 13: 757, 12: 751, 4: 729, 0: 707, 8: 614})
Dep:  Counter({(1, -1, 1): 3400, (-1,): 1000})
Semantics: 14/10/4 (total/solved/learn).
Symbol-08 (int -> int -> int), Samples: 100,  Counter({((1, 8), 1): 2, ((6, 1), 0): 2, ((4, 0), 4): 2, ((1, 0), 0): 2, ((0, 6), 0): 2, ((5, 4), 10): 2, ((8, 0), 8): 2, ((4, 1), 4): 2, ((9, 6), 2): 2, ((6, 4), 24): 2, ((6, 5), 11): 2, ((4, 2), 9): 2, ((0, 9), 0): 2, ((4, 5), 20): 2, ((9, 3), 12): 2, ((8, 2), 4): 2, ((7, 1), 7): 2, ((6, 0), 6): 2, ((8, 7), 56): 2, ((3, 2), 2): 1, ((6, 9), 1): 1, ((3, 4), 12): 1, ((4, 6), 1): 1, ((5, 2), 3): 1, ((8, 6), 12): 1, ((1, 7), 35): 1, ((2, 2), 4): 1, ((4, 9), 13): 1, ((5, 5), 25): 1, ((3, 7), 10): 1, ((0, 7), 0): 1, ((9, 1), 10): 1, ((5, 9), 24): 1, ((9, 2), 11): 1, ((0, 3), 3): 1, ((2, 4), 1): 1, ((7, 5), 35): 1, ((0, 5), 0): 1, ((3, 0), 3): 1, ((9, 5), 14): 1, ((8, 5), 13): 1, ((7, 6), 13): 1, ((4, 4), 8): 1, ((7, 2), 4): 1, ((8, 1), 8): 1, ((1, 2), 2): 1, ((2, 6), 8): 1, ((7, 4), 11): 1, ((3, 6), 9): 1, ((9, 4), 13): 1, ((9, 7), 16): 1, ((9, 9), 18): 1, ((1, 4), 1): 1, ((1, 1), 2): 1, ((8, 8), 64): 1, ((7, 3), 21): 1, ((5, 3), 2): 1, ((6, 2), 12): 1, ((8, 3), 3): 1, ((3, 5), 1): 1, ((5, 0), 5): 1, ((2, 0), 2): 1, ((2, 5), 7): 1, ((5, 1), 5): 1, ((1, 6), 1): 1, ((0, 8), 8): 1, ((3, 9), 27): 1, ((2, 1), 2): 1, ((4, 8), 1): 1, ((8, 9), 17): 1, ((5, 6), 1): 1, ((5, 7), 12): 1, ((3, 8), 1): 1, ((6, 6), 12): 1, ((3, 3), 9): 1, ((2, 9), 11): 1, ((2, 3), 6): 1, ((2, 8), 10): 1, ((7, 7), 49): 1, ((0, 4), 0): 1, ((5, 8), 40): 1})
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((9, 1), 9): 3, ((3, 0), 3): 2, ((0, 0), 0): 2, ((5, 0), 0): 2, ((8, 5), 40): 2, ((3, 9), 1): 2, ((8, 8), 1): 2, ((0, 6), 0): 2, ((9, 5), 2): 2, ((0, 8), 0): 2, ((1, 9), 1): 2, ((4, 8), 32): 2, ((2, 1), 2): 2, ((6, 0), 0): 2, ((3, 5), 1): 2, ((5, 2), 3): 2, ((3, 6), 1): 2, ((8, 6), 2): 2, ((4, 6), 1): 2, ((6, 8), 1): 2, ((8, 4), 2): 2, ((0, 4), 0): 2, ((2, 4), 1): 2, ((9, 4), 36): 1, ((3, 2), 1): 1, ((5, 8), 40): 1, ((5, 3), 15): 1, ((8, 2), 6): 1, ((2, 2), 1): 1, ((5, 7), 1): 1, ((4, 3), 1): 1, ((7, 2), 4): 1, ((1, 8), 8): 1, ((3, 7), 6): 1, ((1, 3), 1): 1, ((3, 4), 12): 1, ((8, 7), 2): 1, ((8, 0), 0): 1, ((5, 4), 1): 1, ((9, 3), 6): 1, ((6, 2), 4): 1, ((1, 4), 1): 1, ((1, 7), 8): 1, ((7, 3), 10): 1, ((1, 2), 8): 1, ((8, 1), 7): 1, ((3, 3), 9): 1, ((4, 7), 28): 1, ((7, 4), 11): 1, ((6, 5), 2): 1, ((0, 5), 0): 1, ((6, 7), 28): 1, ((2, 5), 10): 1, ((0, 7), 0): 1, ((2, 7), 14): 1, ((0, 2), 0): 1, ((9, 2), 5): 1, ((5, 6), 0): 1, ((6, 4), 2): 1, ((9, 8), 2): 1, ((5, 5), 10): 1, ((0, 3), 0): 1, ((7, 7), 63): 1, ((2, 0), 0): 1, ((0, 9), 0): 1, ((1, 6), 6): 1, ((4, 0), 8): 1, ((7, 5), 2): 1, ((5, 9), 15): 1, ((9, 9), 81): 1, ((6, 9), 1): 1, ((3, 1), 4): 1, ((4, 4), 16): 1, ((9, 6), 45): 1, ((8, 3), 24): 1, ((7, 6), 2): 1})
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((8, 9), 72): 3, ((5, 6), 30): 2, ((0, 8), 0): 2, ((4, 3), 12): 2, ((1, 7), 1): 2, ((2, 0), 2): 2, ((9, 9), 81): 2, ((8, 4), 32): 2, ((8, 1), 8): 2, ((2, 7), 9): 2, ((2, 3), 1): 2, ((4, 1), 4): 2, ((0, 3), 0): 2, ((0, 1), 0): 2, ((5, 9), 45): 2, ((6, 1), 6): 2, ((0, 2), 0): 2, ((1, 9), 9): 2, ((1, 2), 2): 2, ((6, 6), 12): 2, ((7, 6), 42): 1, ((1, 0), 0): 1, ((0, 4), 0): 1, ((3, 1), 3): 1, ((1, 3), 2): 1, ((4, 0), 0): 1, ((8, 8), 64): 1, ((6, 7), 13): 1, ((0, 9), 0): 1, ((7, 0), 0): 1, ((1, 5), 5): 1, ((3, 6), 18): 1, ((3, 9), 27): 1, ((3, 2), 6): 1, ((5, 7), 35): 1, ((2, 8), 1): 1, ((3, 3), 6): 1, ((7, 4), 28): 1, ((9, 6), 54): 1, ((5, 5), 1): 1, ((7, 9), 1): 1, ((0, 7), 0): 1, ((8, 0), 0): 1, ((6, 2), 3): 1, ((4, 8), 32): 1, ((5, 2), 7): 1, ((0, 5), 5): 1, ((4, 2), 2): 1, ((9, 0), 0): 1, ((6, 8), 48): 1, ((5, 4), 2): 1, ((2, 5), 7): 1, ((4, 7), 28): 1, ((8, 6), 48): 1, ((6, 9), 54): 1, ((8, 5), 40): 1, ((5, 8), 13): 1, ((5, 1), 5): 1, ((1, 6), 6): 1, ((9, 8), 72): 1, ((3, 5), 15): 1, ((6, 4), 24): 1, ((2, 9), 18): 1, ((9, 4), 36): 1, ((4, 9), 13): 1, ((8, 7), 1): 1, ((2, 4), 8): 1, ((5, 0), 0): 1, ((7, 7), 49): 1, ((4, 6), 24): 1, ((1, 1), 2): 1, ((5, 3), 2): 1, ((9, 1), 9): 1, ((7, 5), 35): 1, ((9, 3), 27): 1, ((7, 2), 9): 1, ((0, 6), 0): 1, ((6, 5), 18): 1, ((1, 8), 8): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((8, 6), 2): 2, ((1, 9), 1): 2, ((4, 4), 1): 2, ((0, 6), 0): 2, ((4, 6), 1): 2, ((9, 0), 9): 2, ((0, 2), 0): 2, ((2, 7), 1): 2, ((1, 3), 4): 2, ((0, 8), 0): 2, ((2, 6), 1): 2, ((1, 0), 1): 2, ((1, 1), 1): 2, ((3, 5), 8): 2, ((9, 8), 2): 2, ((4, 3), 2): 2, ((1, 6), 1): 2, ((4, 9), 1): 2, ((7, 4), 2): 2, ((6, 4), 2): 2, ((0, 5), 0): 2, ((0, 9), 0): 2, ((8, 4), 4): 2, ((8, 9), 1): 2, ((7, 9), 16): 2, ((2, 2), 4): 2, ((4, 2), 2): 1, ((9, 9), 18): 1, ((1, 4), 1): 1, ((5, 0), 5): 1, ((7, 1), 1): 1, ((3, 8), 1): 1, ((6, 9), 1): 1, ((7, 0), 7): 1, ((6, 0), 6): 1, ((5, 5), 10): 1, ((7, 7), 1): 1, ((6, 7), 15): 1, ((1, 8), 1): 1, ((6, 5), 2): 1, ((7, 8), 15): 1, ((9, 4), 3): 1, ((5, 1), 4): 1, ((0, 4), 4): 1, ((2, 5), 1): 1, ((5, 8), 1): 1, ((7, 6), 2): 1, ((3, 7), 21): 1, ((6, 3), 2): 1, ((9, 6), 2): 1, ((7, 3), 4): 1, ((3, 3), 1): 1, ((9, 3), 3): 1, ((4, 0), 4): 1, ((9, 7), 2): 1, ((0, 3), 3): 1, ((0, 1), 0): 1, ((9, 2), 5): 1, ((5, 7), 0): 1, ((5, 3), 2): 1, ((8, 2), 4): 1, ((2, 9), 1): 1, ((5, 6), 1): 1, ((2, 3), 1): 1, ((8, 3), 11): 1, ((4, 5), 1): 1, ((2, 1), 3): 1, ((1, 2), 1): 1, ((8, 1), 8): 1, ((1, 5), 6): 1, ((1, 7), 7): 1, ((8, 5), 2): 1, ((6, 8), 1): 1, ((0, 7), 0): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-13: None 0.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 0.44
Epoch time: 14m 23s
------------------------------
Epoch 6/99 (max_len=3, data=4405)
Train acc: 21.55 (abduce 99.95)
Hit samples:  4403  Ave length:  2.55
Symbols:  14 Counter({8: 1435, 7: 828, 2: 822, 3: 810, 10: 804, 1: 802, 11: 783, 6: 776, 5: 774, 12: 753, 4: 738, 0: 720, 9: 658, 13: 506})
Dep:  Counter({(1, -1, 1): 3403, (-1,): 1000})
Semantics: 14/10/4 (total/solved/learn).
Symbol-08 (int -> int -> int), Samples: 100,  Counter({((0, 9), 0): 3, ((0, 8), 0): 3, ((7, 0), 7): 2, ((2, 0), 2): 2, ((2, 7), 1): 2, ((7, 6), 42): 2, ((4, 8), 1): 2, ((2, 4), 1): 2, ((0, 2), 0): 2, ((0, 0), 0): 2, ((0, 7), 0): 2, ((2, 6), 1): 2, ((2, 1), 2): 2, ((0, 4), 0): 2, ((1, 9), 1): 2, ((6, 1), 6): 2, ((3, 7), 21): 1, ((3, 2), 2): 1, ((3, 8), 1): 1, ((3, 3), 1): 1, ((1, 3), 1): 1, ((4, 5), 1): 1, ((4, 2), 2): 1, ((0, 1), 0): 1, ((8, 3), 24): 1, ((8, 1), 8): 1, ((7, 3), 3): 1, ((1, 2), 2): 1, ((7, 9), 1): 1, ((5, 8), 1): 1, ((5, 0), 5): 1, ((9, 1), 9): 1, ((1, 8), 1): 1, ((6, 8), 1): 1, ((8, 7), 1): 1, ((8, 4), 32): 1, ((4, 9), 1): 1, ((2, 5), 1): 1, ((8, 2), 4): 1, ((4, 3), 1): 1, ((7, 1), 7): 1, ((3, 6), 1): 1, ((5, 4), 1): 1, ((4, 1), 4): 1, ((0, 3), 0): 1, ((3, 9), 1): 1, ((9, 2), 7): 1, ((3, 1), 3): 1, ((6, 6), 1): 1, ((9, 8), 1): 1, ((1, 1), 1): 1, ((5, 5), 1): 1, ((7, 8), 1): 1, ((9, 4), 13): 1, ((6, 4), 10): 1, ((2, 9), 1): 1, ((5, 9), 1): 1, ((8, 6), 48): 1, ((7, 5), 2): 1, ((0, 6), 0): 1, ((2, 3), 1): 1, ((9, 7), 2): 1, ((9, 0), 9): 1, ((5, 1), 5): 1, ((0, 5), 0): 1, ((4, 7), 1): 1, ((1, 7), 1): 1, ((3, 4), 1): 1, ((9, 6), 2): 1, ((1, 6), 6): 1, ((6, 7), 1): 1, ((6, 9), 1): 1, ((4, 0), 4): 1, ((3, 0), 3): 1, ((9, 9), 1): 1, ((7, 2), 11): 1, ((5, 7), 1): 1, ((2, 8), 1): 1, ((3, 5), 1): 1, ((7, 4), 2): 1, ((5, 3), 2): 1, ((8, 0), 8): 1})
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((8, 0), 0): 3, ((9, 2), 18): 3, ((2, 2), 4): 2, ((4, 3), 12): 2, ((3, 6), 9): 2, ((1, 7), 7): 2, ((9, 3), 3): 2, ((6, 4), 2): 2, ((9, 7), 2): 2, ((6, 3), 2): 2, ((8, 5), 40): 2, ((7, 0), 0): 2, ((2, 4), 6): 2, ((7, 6), 2): 2, ((3, 8), 11): 2, ((5, 9), 0): 2, ((5, 2), 3): 2, ((5, 1), 6): 2, ((8, 4), 2): 2, ((5, 7), 35): 2, ((3, 9), 27): 2, ((7, 1), 8): 1, ((0, 4), 4): 1, ((2, 6), 12): 1, ((8, 6), 2): 1, ((6, 7), 28): 1, ((5, 3), 15): 1, ((9, 6), 45): 1, ((5, 5), 10): 1, ((1, 2), 3): 1, ((3, 2), 1): 1, ((9, 8), 2): 1, ((0, 5), 5): 1, ((2, 0), 0): 1, ((7, 7), 14): 1, ((9, 4), 36): 1, ((3, 1), 4): 1, ((3, 5), 8): 1, ((0, 1), 5): 1, ((8, 7), 32): 1, ((2, 5), 7): 1, ((7, 9), 45): 1, ((8, 3), 3): 1, ((1, 9), 9): 1, ((1, 3), 3): 1, ((0, 6), 6): 1, ((9, 0), 0): 1, ((6, 1), 7): 1, ((1, 0), 0): 1, ((5, 0), 0): 1, ((7, 2), 14): 1, ((0, 7), 7): 1, ((8, 8), 16): 1, ((6, 6), 12): 1, ((1, 6), 6): 1, ((7, 3), 21): 1, ((6, 2), 12): 1, ((4, 8), 0): 1, ((4, 7), 11): 1, ((8, 9), 13): 1, ((0, 9), 9): 1, ((3, 4), 7): 1, ((4, 0), 0): 1, ((1, 1), 2): 1, ((4, 2), 8): 1, ((9, 5), 2): 1, ((9, 9), 18): 1, ((6, 0), 0): 1, ((6, 9), 54): 1, ((5, 4), 20): 1, ((6, 5), 30): 1, ((7, 4), 28): 1, ((4, 1), 5): 1, ((0, 8), 8): 1, ((4, 5), 9): 1, ((3, 7), 10): 1, ((5, 6), 30): 1})
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((3, 3), 9): 3, ((8, 5), 40): 2, ((9, 7), 63): 2, ((1, 4), 4): 2, ((2, 2), 4): 2, ((1, 2), 1): 2, ((6, 4), 24): 2, ((6, 3), 18): 2, ((5, 2), 3): 2, ((9, 3), 27): 2, ((9, 6), 54): 2, ((3, 0), 0): 2, ((7, 3), 3): 2, ((4, 2), 8): 2, ((6, 5), 30): 2, ((7, 7), 49): 2, ((8, 3), 24): 2, ((5, 3), 2): 2, ((2, 8), 16): 2, ((8, 0), 0): 2, ((8, 9), 72): 2, ((3, 6), 18): 2, ((6, 2), 12): 1, ((8, 6), 14): 1, ((9, 5), 45): 1, ((7, 1), 3): 1, ((9, 8), 72): 1, ((6, 0), 0): 1, ((6, 1), 5): 1, ((0, 1), 1): 1, ((7, 0), 0): 1, ((3, 1), 10): 1, ((3, 4), 12): 1, ((7, 5), 2): 1, ((4, 7), 11): 1, ((0, 2), 2): 1, ((5, 9), 45): 1, ((5, 6), 30): 1, ((7, 6), 13): 1, ((0, 6), 11): 1, ((2, 7), 14): 1, ((0, 5), 35): 1, ((3, 9), 12): 1, ((9, 0), 0): 1, ((4, 4), 16): 1, ((1, 8), 8): 1, ((5, 4), 2): 1, ((3, 2), 6): 1, ((5, 8), 40): 1, ((3, 8), 24): 1, ((2, 4), 8): 1, ((6, 7), 42): 1, ((6, 8), 48): 1, ((8, 2), 16): 1, ((8, 7), 56): 1, ((1, 7), 7): 1, ((0, 3), 3): 1, ((9, 2), 18): 1, ((4, 1), 5): 1, ((1, 9), 9): 1, ((2, 0), 0): 1, ((1, 0), 0): 1, ((7, 2), 1): 1, ((5, 0), 0): 1, ((7, 8), 49): 1, ((4, 5), 20): 1, ((6, 6), 36): 1, ((9, 4), 36): 1, ((9, 1), 14): 1, ((4, 6), 24): 1, ((8, 4), 32): 1, ((0, 7), 1): 1, ((0, 8), 1): 1, ((2, 9), 18): 1, ((4, 9), 45): 1, ((2, 6), 8): 1, ((1, 6), 7): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((6, 4), 10): 3, ((6, 5), 11): 2, ((0, 4), 4): 2, ((4, 3), 2): 2, ((8, 4), 2): 2, ((3, 1), 2): 2, ((8, 5), 2): 2, ((8, 2), 4): 2, ((5, 5), 10): 2, ((5, 3), 2): 2, ((0, 5), 5): 2, ((1, 2), 3): 2, ((5, 4), 2): 2, ((4, 6), 10): 2, ((7, 5), 2): 2, ((6, 6), 12): 2, ((8, 3), 3): 2, ((9, 7), 2): 2, ((0, 8), 8): 2, ((0, 3), 3): 2, ((7, 2), 4): 2, ((7, 1), 6): 1, ((5, 2), 7): 1, ((2, 3), 5): 1, ((8, 7), 2): 1, ((2, 7), 9): 1, ((8, 6), 2): 1, ((3, 5), 3): 1, ((8, 0), 2): 1, ((1, 6), 7): 1, ((6, 2), 1): 1, ((5, 8), 13): 1, ((6, 1), 7): 1, ((1, 1), 2): 1, ((1, 5), 9): 1, ((7, 8), 15): 1, ((2, 6), 8): 1, ((7, 7), 3): 1, ((9, 4), 13): 1, ((1, 4), 9): 1, ((1, 3), 3): 1, ((3, 9), 12): 1, ((2, 4), 6): 1, ((4, 7), 11): 1, ((9, 8), 72): 1, ((7, 9), 16): 1, ((1, 8), 9): 1, ((0, 2), 8): 1, ((3, 0), 1): 1, ((8, 1), 9): 1, ((2, 1), 3): 1, ((6, 7), 3): 1, ((8, 9), 24): 1, ((5, 9), 3): 1, ((8, 8), 17): 1, ((5, 6), 11): 1, ((4, 4), 8): 1, ((3, 6), 8): 1, ((5, 0), 3): 1, ((5, 7), 12): 1, ((2, 9), 11): 1, ((6, 8), 2): 1, ((0, 9), 9): 1, ((2, 8), 10): 1, ((9, 2), 7): 1, ((9, 3), 12): 1, ((0, 7), 7): 1, ((9, 1), 1): 1, ((3, 4), 7): 1, ((9, 6), 2): 1, ((3, 3), 9): 1, ((4, 1), 5): 1, ((7, 4), 28): 1, ((7, 0), 4): 1, ((2, 5), 10): 1, ((4, 2), 11): 1, ((0, 6), 6): 1, ((7, 6), 13): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.27
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr (if0 $0 0 ($2 (decr0 $0) $1)))))))))) 0.53
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 0.87
Epoch time: 14m 21s
------------------------------
Epoch 7/99 (max_len=3, data=4405)
Train acc: 22.30 (abduce 99.98)
Hit samples:  4404  Ave length:  2.55
Symbols:  14 Counter({8: 1231, 13: 913, 10: 822, 7: 818, 2: 813, 1: 812, 11: 807, 6: 791, 3: 790, 5: 771, 4: 746, 12: 744, 0: 716, 9: 438})
Dep:  Counter({(1, -1, 1): 3404, (-1,): 1000})
100 [((0, 0), 0), ((0, 1), 0), ((0, 2), 0), ((0, 3), 0), ((0, 4), 0), ((0, 5), 0), ((0, 6), 0), ((0, 7), 0), ((0, 8), 0), ((0, 9), 0), ((1, 0), 1), ((1, 1), 1), ((1, 2), 2), ((1, 3), 1), ((1, 4), 1), ((1, 5), 1), ((1, 6), 1), ((1, 7), 1), ((1, 8), 1), ((1, 9), 1), ((2, 0), 2), ((2, 1), 2), ((2, 2), 2), ((2, 3), 1), ((2, 4), 1), ((2, 5), 1), ((2, 6), 1), ((2, 7), 1), ((2, 8), 1), ((2, 9), 1), ((3, 0), 3), ((3, 1), 3), ((3, 2), 2), ((3, 3), 1), ((3, 4), 1), ((3, 5), 1), ((3, 6), 1), ((3, 7), 1), ((3, 8), 1), ((3, 9), 1), ((4, 0), 4), ((4, 1), 4), ((4, 2), 2), ((4, 3), 1), ((4, 4), 1), ((4, 5), 1), ((4, 6), 1), ((4, 7), 1), ((4, 8), 1), ((4, 9), 1), ((5, 0), 5), ((5, 1), 5), ((5, 2), 28), ((5, 3), 15), ((5, 4), 2), ((5, 5), 1), ((5, 6), 1), ((5, 7), 1), ((5, 8), 1), ((5, 9), 1), ((6, 0), 6), ((6, 1), 6), ((6, 2), 4), ((6, 3), 3), ((6, 4), 24), ((6, 5), 1), ((6, 6), 1), ((6, 7), 1), ((6, 8), 1), ((6, 9), 1), ((7, 0), 7), ((7, 1), 7), ((7, 2), 4), ((7, 3), 21), ((7, 4), 2), ((7, 5), 2), ((7, 6), 42), ((7, 7), 1), ((7, 8), 1), ((7, 9), 1), ((8, 0), 8), ((8, 1), 8), ((8, 2), 0), ((8, 3), 24), ((8, 4), 32), ((8, 5), 40), ((8, 6), 48), ((8, 7), 1), ((8, 8), 1), ((8, 9), 1), ((9, 0), 9), ((9, 1), 9), ((9, 2), 5), ((9, 3), 1), ((9, 4), 36), ((9, 5), 63), ((9, 6), 2), ((9, 7), 1), ((9, 8), 1), ((9, 9), 1)]
Semantics: 14/11/3 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((8, 5), 40): 3, ((9, 7), 2): 3, ((5, 3), 2): 3, ((3, 7), 21): 3, ((2, 1), 1): 2, ((6, 9), 54): 2, ((4, 4), 16): 2, ((5, 2), 3): 2, ((6, 6), 36): 2, ((8, 6), 48): 2, ((9, 2), 5): 2, ((6, 5), 30): 2, ((0, 4), 1): 2, ((3, 4), 12): 2, ((8, 4), 4): 2, ((8, 9), 72): 2, ((8, 8), 64): 2, ((2, 5), 10): 2, ((6, 8), 48): 2, ((1, 9), 35): 2, ((5, 9), 45): 2, ((9, 6), 45): 2, ((8, 7), 2): 2, ((0, 8), 64): 1, ((0, 3), 6): 1, ((8, 0), 12): 1, ((9, 9), 13): 1, ((1, 2), 1): 1, ((8, 3), 3): 1, ((1, 3), 8): 1, ((3, 6), 3): 1, ((7, 2), 4): 1, ((7, 3), 3): 1, ((7, 5), 35): 1, ((6, 0), 15): 1, ((5, 7), 2): 1, ((4, 0), 7): 1, ((3, 0), 6): 1, ((6, 3), 30): 1, ((0, 5), 45): 1, ((4, 6), 24): 1, ((4, 3), 2): 1, ((9, 0), 2): 1, ((7, 7), 49): 1, ((4, 5), 20): 1, ((2, 4), 35): 1, ((7, 4), 2): 1, ((2, 6), 12): 1, ((6, 7), 42): 1, ((3, 9), 11): 1, ((1, 6), 36): 1, ((9, 8), 72): 1, ((2, 3), 18): 1, ((5, 0), 2): 1, ((2, 2), 1): 1, ((0, 9), 14): 1, ((5, 8), 40): 1, ((9, 3), 27): 1, ((7, 9), 63): 1, ((9, 1), 8): 1, ((7, 1), 6): 1, ((6, 1), 5): 1, ((5, 6), 3): 1, ((2, 7), 56): 1, ((2, 8), 32): 1, ((6, 4), 12): 1, ((3, 8), 24): 1, ((1, 1), 9): 1, ((2, 9), 18): 1, ((8, 1), 7): 1, ((9, 4), 36): 1, ((4, 2), 1): 1, ((4, 7), 8): 1})
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((7, 2), 14): 2, ((2, 8), 16): 2, ((1, 5), 5): 2, ((8, 5), 40): 2, ((6, 4), 24): 2, ((1, 1), 1): 2, ((6, 2), 3): 2, ((1, 7), 7): 2, ((3, 2), 6): 2, ((3, 0), 0): 2, ((1, 4), 4): 2, ((1, 9), 9): 2, ((2, 2), 4): 2, ((8, 0), 0): 2, ((6, 8), 48): 2, ((4, 8), 32): 2, ((2, 6), 12): 2, ((4, 3), 12): 2, ((2, 0), 0): 2, ((6, 5), 30): 2, ((1, 8), 8): 2, ((6, 6), 36): 2, ((9, 0), 0): 2, ((4, 0), 0): 2, ((5, 8), 40): 2, ((2, 3), 6): 2, ((1, 6), 6): 1, ((8, 8), 64): 1, ((7, 7), 49): 1, ((9, 1), 8): 1, ((6, 7), 42): 1, ((0, 5), 5): 1, ((6, 9), 54): 1, ((4, 9), 36): 1, ((9, 5), 45): 1, ((3, 7), 21): 1, ((5, 0), 0): 1, ((4, 2), 8): 1, ((0, 8), 8): 1, ((7, 9), 27): 1, ((9, 9), 81): 1, ((2, 4), 8): 1, ((0, 0), 0): 1, ((5, 6), 30): 1, ((3, 6), 18): 1, ((8, 2), 16): 1, ((0, 6), 6): 1, ((7, 1), 1): 1, ((4, 5), 20): 1, ((3, 4), 12): 1, ((6, 0), 0): 1, ((5, 9), 45): 1, ((0, 7), 7): 1, ((0, 1), 1): 1, ((8, 7), 56): 1, ((5, 1), 45): 1, ((4, 1), 28): 1, ((8, 3), 17): 1, ((9, 2), 18): 1, ((7, 5), 2): 1, ((8, 6), 48): 1, ((7, 0), 0): 1, ((7, 6), 42): 1, ((9, 6), 54): 1, ((6, 1), 12): 1, ((1, 2), 2): 1, ((9, 8), 72): 1, ((1, 0), 0): 1, ((2, 5), 7): 1, ((7, 4), 3): 1, ((0, 9), 9): 1, ((0, 3), 3): 1, ((4, 6), 24): 1, ((4, 7), 28): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((6, 7), 13): 2, ((4, 3), 7): 2, ((3, 9), 12): 2, ((3, 6), 9): 2, ((7, 7), 14): 2, ((5, 8), 13): 2, ((9, 5), 14): 2, ((5, 1), 6): 2, ((6, 4), 2): 2, ((9, 4), 13): 2, ((4, 4), 8): 2, ((4, 1), 5): 2, ((8, 6), 2): 2, ((4, 7), 11): 2, ((5, 2), 7): 2, ((7, 9), 16): 2, ((6, 5), 11): 2, ((1, 8), 9): 2, ((1, 5), 6): 2, ((1, 4), 5): 2, ((4, 5), 9): 2, ((1, 6), 7): 2, ((7, 6), 13): 2, ((3, 1), 4): 1, ((1, 9), 10): 1, ((7, 1), 8): 1, ((8, 7), 2): 1, ((0, 6), 6): 1, ((9, 3), 3): 1, ((9, 2), 5): 1, ((4, 8), 12): 1, ((0, 7), 4): 1, ((7, 5), 0): 1, ((2, 3), 7): 1, ((9, 0), 4): 1, ((8, 5), 2): 1, ((3, 8), 11): 1, ((8, 0), 2): 1, ((9, 9), 18): 1, ((8, 3), 3): 1, ((5, 9), 14): 1, ((8, 8), 16): 1, ((9, 1), 10): 1, ((6, 3), 9): 1, ((1, 0), 1): 1, ((7, 3), 10): 1, ((7, 2), 9): 1, ((5, 7), 12): 1, ((2, 6), 8): 1, ((0, 9), 9): 1, ((4, 9), 13): 1, ((7, 8), 15): 1, ((1, 3), 4): 1, ((9, 7), 16): 1, ((5, 3), 8): 1, ((6, 2), 8): 1, ((0, 8), 8): 1, ((1, 1), 2): 1, ((5, 4), 9): 1, ((8, 1), 9): 1, ((6, 1), 7): 1, ((0, 3), 3): 1, ((5, 6), 11): 1, ((0, 4), 4): 1, ((7, 4), 2): 1, ((3, 5), 8): 1, ((2, 4), 6): 1, ((6, 8), 14): 1, ((2, 0), 1): 1, ((3, 2), 5): 1, ((4, 0), 8): 1, ((8, 2), 10): 1, ((6, 6), 12): 1, ((3, 7), 10): 1, ((8, 9), 17): 1, ((4, 6), 10): 1, ((3, 4), 7): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.49
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr (if0 $0 0 ($2 (decr0 $0) $1)))))))))) 0.85
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 23s
------------------------------
Epoch 8/99 (max_len=3, data=4405)
Train acc: 21.96 (abduce 99.95)
Hit samples:  4403  Ave length:  2.55
Symbols:  14 Counter({13: 965, 10: 952, 8: 914, 7: 846, 2: 812, 1: 807, 3: 807, 6: 796, 5: 785, 11: 779, 12: 739, 4: 726, 0: 709, 9: 572})
Dep:  Counter({(1, -1, 1): 3403, (-1,): 1000})
Semantics: 14/11/3 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((7, 4), 2): 3, ((6, 2), 3): 3, ((4, 3), 2): 3, ((9, 5), 45): 2, ((1, 2), 1): 2, ((2, 3), 6): 2, ((8, 8), 64): 2, ((9, 6), 2): 2, ((8, 3), 24): 2, ((9, 3), 27): 2, ((3, 5), 15): 2, ((2, 8), 16): 2, ((6, 3), 18): 2, ((5, 8), 40): 2, ((5, 3), 2): 2, ((9, 2), 7): 2, ((8, 5), 2): 2, ((3, 4), 12): 2, ((4, 6), 24): 2, ((8, 6), 2): 1, ((7, 9), 18): 1, ((5, 5), 0): 1, ((1, 6), 36): 1, ((2, 5), 10): 1, ((7, 2), 4): 1, ((8, 7), 56): 1, ((9, 8), 2): 1, ((7, 3), 21): 1, ((6, 6), 36): 1, ((7, 8), 56): 1, ((5, 0), 2): 1, ((0, 5), 45): 1, ((5, 7), 10): 1, ((0, 6), 1): 1, ((6, 7), 42): 1, ((7, 1), 6): 1, ((1, 1), 4): 1, ((7, 5), 2): 1, ((2, 2), 14): 1, ((9, 1), 8): 1, ((3, 2), 7): 1, ((4, 1), 3): 1, ((5, 6), 30): 1, ((6, 1), 12): 1, ((3, 1), 2): 1, ((0, 9), 1): 1, ((9, 9), 81): 1, ((3, 0), 6): 1, ((8, 2), 4): 1, ((2, 1), 4): 1, ((6, 0), 8): 1, ((6, 9), 54): 1, ((5, 1), 25): 1, ((8, 1), 2): 1, ((4, 8), 32): 1, ((1, 8), 24): 1, ((9, 7), 2): 1, ((2, 4), 8): 1, ((6, 4), 24): 1, ((5, 4), 20): 1, ((0, 2), 7): 1, ((0, 0), 11): 1, ((3, 6), 18): 1, ((2, 7), 14): 1, ((8, 0), 2): 1, ((6, 5), 30): 1, ((0, 7), 20): 1, ((2, 6), 48): 1, ((1, 5), 15): 1, ((7, 0), 21): 1, ((1, 4), 16): 1, ((7, 6), 2): 1, ((1, 9), 4): 1, ((1, 0), 5): 1, ((5, 9), 45): 1, ((0, 1), 4): 1, ((4, 7), 16): 1, ((4, 9), 36): 1})
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((9, 6), 54): 3, ((1, 3), 3): 3, ((4, 0), 0): 2, ((5, 0), 0): 2, ((7, 6), 42): 2, ((9, 2), 18): 2, ((1, 0), 0): 2, ((1, 6), 6): 2, ((2, 6), 12): 2, ((1, 2), 2): 2, ((3, 7), 21): 2, ((7, 2), 14): 2, ((2, 2), 4): 2, ((9, 0), 0): 2, ((3, 2), 6): 2, ((4, 7), 28): 2, ((8, 0), 0): 2, ((5, 6), 30): 2, ((1, 9), 9): 2, ((1, 8), 8): 2, ((8, 6), 48): 2, ((2, 5), 10): 2, ((6, 5), 30): 2, ((4, 4), 6): 1, ((6, 7), 42): 1, ((0, 5), 5): 1, ((3, 8), 24): 1, ((6, 4), 24): 1, ((1, 1), 1): 1, ((7, 4), 28): 1, ((8, 5), 40): 1, ((9, 9), 81): 1, ((2, 9), 18): 1, ((0, 6), 6): 1, ((3, 0), 0): 1, ((6, 8), 48): 1, ((5, 1), 1): 1, ((7, 9), 63): 1, ((9, 8), 72): 1, ((4, 8), 32): 1, ((5, 7), 10): 1, ((2, 7), 14): 1, ((9, 3), 6): 1, ((9, 1), 8): 1, ((0, 4), 1): 1, ((2, 4), 6): 1, ((0, 0), 0): 1, ((4, 6), 12): 1, ((1, 7), 7): 1, ((4, 3), 12): 1, ((8, 7), 56): 1, ((5, 9), 45): 1, ((3, 1), 1): 1, ((1, 4), 4): 1, ((2, 1), 3): 1, ((3, 6), 18): 1, ((3, 4), 12): 1, ((7, 5), 35): 1, ((7, 0), 0): 1, ((2, 0), 0): 1, ((6, 0), 0): 1, ((5, 3), 15): 1, ((8, 4), 32): 1, ((7, 7), 49): 1, ((5, 2), 10): 1, ((8, 1), 7): 1, ((0, 7), 7): 1, ((2, 3), 5): 1, ((5, 5), 30): 1, ((6, 6), 36): 1, ((5, 8), 40): 1, ((6, 9), 54): 1, ((9, 5), 45): 1, ((0, 1), 1): 1, ((4, 9), 36): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((1, 9), 10): 2, ((5, 4), 2): 2, ((6, 5), 2): 2, ((9, 7), 2): 2, ((1, 0), 1): 2, ((4, 7), 11): 2, ((4, 9), 13): 2, ((4, 4), 8): 2, ((3, 3), 6): 2, ((6, 4), 2): 2, ((3, 9), 12): 2, ((7, 8), 15): 2, ((9, 4), 13): 2, ((8, 7), 2): 2, ((7, 9), 16): 2, ((9, 6), 15): 2, ((6, 3), 9): 2, ((8, 6), 14): 2, ((5, 9), 14): 2, ((9, 1), 10): 2, ((5, 2), 7): 2, ((6, 1), 7): 2, ((9, 5), 14): 2, ((5, 1), 6): 2, ((4, 8), 12): 2, ((1, 6), 7): 2, ((8, 1), 9): 1, ((7, 1), 8): 1, ((1, 2), 1): 1, ((5, 5), 10): 1, ((6, 6), 12): 1, ((0, 8), 8): 1, ((8, 5), 13): 1, ((3, 5), 8): 1, ((8, 9), 17): 1, ((8, 0), 1): 1, ((1, 8), 9): 1, ((6, 7), 13): 1, ((4, 1), 5): 1, ((7, 4), 2): 1, ((6, 8), 14): 1, ((5, 0), 3): 1, ((8, 4), 12): 1, ((0, 3), 3): 1, ((2, 4), 6): 1, ((3, 8), 11): 1, ((2, 7), 9): 1, ((1, 3), 4): 1, ((4, 2), 1): 1, ((0, 9), 9): 1, ((4, 0), 7): 1, ((3, 4), 7): 1, ((8, 8), 16): 1, ((0, 0), 0): 1, ((7, 7), 14): 1, ((3, 6), 9): 1, ((7, 6), 13): 1, ((1, 7), 8): 1, ((4, 6), 10): 1, ((2, 5), 7): 1, ((5, 6), 11): 1, ((0, 7), 7): 1, ((9, 3), 12): 1, ((7, 3), 10): 1, ((9, 0), 2): 1, ((2, 2), 4): 1, ((2, 8), 10): 1, ((5, 3), 2): 1, ((2, 0), 1): 1, ((2, 6), 8): 1, ((0, 2), 2): 1, ((6, 9), 15): 1, ((5, 8), 13): 1, ((3, 7), 10): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.45
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr (if0 $0 0 ($2 (decr0 $0) $1)))))))))) 0.83
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 25s
------------------------------
Epoch 9/99 (max_len=3, data=4405)
Train acc: 21.69 (abduce 99.89)
Hit samples:  4400  Ave length:  2.55
Symbols:  14 Counter({13: 976, 8: 918, 10: 911, 7: 844, 2: 831, 1: 815, 6: 808, 11: 800, 3: 798, 5: 749, 4: 727, 12: 715, 0: 713, 9: 595})
Dep:  Counter({(1, -1, 1): 3400, (-1,): 1000})
Learn perception with 2776 samples for 500 iterations, take 34 sec.
result accuracy by length:
1 ( 3%) 90.00
3 (12%) 44.36
5 (55%) 26.79
7 (29%) 17.63
result accuracy by symbol:
* (45%) 17.08
+ (45%) 26.88
- (45%) 16.46
/ (42%) 34.09
0 (23%) 43.15
1 (28%) 28.04
2 (29%) 23.06
3 (28%) 22.86
4 (28%) 24.84
5 (28%) 22.59
6 (28%) 22.28
7 (28%) 23.49
8 (27%) 24.26
9 (28%) 22.32
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 80.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%) 22.31
1 ( 9%) 73.23
2 ( 5%) 27.23
3 ( 5%) 22.09
4 ( 4%) 27.81
5 ( 4%) 30.97
6 ( 4%) 32.14
7 ( 4%) 30.46
8 ( 4%) 35.62
9 ( 4%) 37.86
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 31.38
unseen (41%) 23.59
val (Perception Acc=10.32, Syntax Acc=100.00, Result Acc=28.13)
Epoch time: 0m 39s
------------------------------
Epoch 10/99 (max_len=3, data=4405)
Train acc: 53.51 (abduce 97.68)
Hit samples:  4303  Ave length:  2.54
Symbols:  14 Counter({8: 1333, 13: 1129, 4: 900, 10: 839, 7: 805, 3: 775, 6: 775, 11: 774, 1: 773, 0: 759, 2: 719, 12: 666, 5: 660, 9: 2})
Dep:  Counter({(1, -1, 1): 3303, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((7, 0), 0): 2, ((1, 8), 8): 2, ((1, 6), 6): 2, ((6, 0), 0): 2, ((6, 4), 24): 2, ((4, 0), 0): 2, ((1, 5), 5): 2, ((8, 5), 40): 2, ((2, 9), 18): 2, ((1, 7), 7): 2, ((3, 9), 27): 2, ((4, 2), 8): 2, ((6, 5), 30): 2, ((8, 3), 24): 2, ((8, 9), 72): 2, ((1, 4), 4): 2, ((5, 6), 30): 2, ((5, 0), 0): 2, ((9, 6), 54): 2, ((9, 3), 27): 2, ((8, 7), 56): 1, ((2, 3), 6): 1, ((2, 1), 3): 1, ((4, 3), 12): 1, ((5, 5), 25): 1, ((7, 2), 14): 1, ((0, 0), 0): 1, ((3, 2), 6): 1, ((7, 7), 49): 1, ((9, 8), 72): 1, ((3, 3), 9): 1, ((1, 2), 2): 1, ((3, 6), 18): 1, ((4, 1), 9): 1, ((8, 1), 16): 1, ((0, 9), 9): 1, ((2, 6), 12): 1, ((3, 7), 21): 1, ((2, 5), 10): 1, ((4, 9), 36): 1, ((0, 2), 2): 1, ((8, 6), 48): 1, ((1, 9), 9): 1, ((4, 7), 28): 1, ((7, 1), 2): 1, ((4, 6), 24): 1, ((7, 5), 35): 1, ((5, 3), 15): 1, ((2, 2), 4): 1, ((7, 6), 42): 1, ((0, 5), 5): 1, ((3, 1), 5): 1, ((5, 8), 40): 1, ((0, 3), 3): 1, ((4, 5), 20): 1, ((3, 0), 0): 1, ((1, 3), 3): 1, ((6, 2), 12): 1, ((6, 9), 54): 1, ((5, 1), 9): 1, ((9, 9), 81): 1, ((1, 0), 0): 1, ((6, 1), 12): 1, ((6, 6), 36): 1, ((0, 7), 7): 1, ((4, 8), 32): 1, ((7, 9), 63): 1, ((2, 4), 6): 1, ((8, 0), 0): 1, ((2, 0), 0): 1, ((5, 2), 10): 1, ((8, 8), 64): 1, ((3, 5), 15): 1, ((9, 7), 63): 1, ((8, 4), 32): 1, ((4, 4), 16): 1, ((3, 8), 6): 1, ((5, 4), 20): 1, ((1, 1), 1): 1, ((9, 4), 36): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((5, 5), 10): 2, ((9, 9), 18): 2, ((1, 5), 6): 2, ((4, 4), 8): 2, ((4, 7), 11): 2, ((6, 8), 14): 2, ((9, 6), 15): 2, ((3, 3), 6): 2, ((6, 5), 11): 2, ((7, 8), 15): 2, ((7, 9), 16): 2, ((0, 8), 8): 2, ((6, 1), 7): 2, ((6, 3), 9): 2, ((1, 2), 3): 2, ((3, 9), 12): 2, ((8, 9), 17): 2, ((8, 8), 16): 2, ((7, 1), 8): 2, ((2, 7), 9): 2, ((6, 9), 15): 2, ((8, 6), 14): 2, ((7, 6), 13): 2, ((7, 3), 10): 2, ((0, 1), 1): 1, ((7, 7), 14): 1, ((4, 1), 5): 1, ((4, 5), 9): 1, ((4, 6), 10): 1, ((4, 3), 7): 1, ((4, 9), 13): 1, ((2, 5), 7): 1, ((5, 7), 12): 1, ((1, 3), 4): 1, ((9, 0), 1): 1, ((2, 8), 10): 1, ((3, 2), 5): 1, ((6, 7), 13): 1, ((1, 8), 9): 1, ((9, 7), 16): 1, ((9, 1), 10): 1, ((5, 1), 6): 1, ((3, 4), 7): 1, ((2, 6), 8): 1, ((6, 4), 10): 1, ((1, 6), 7): 1, ((8, 5), 13): 1, ((6, 0), 1): 1, ((5, 3), 8): 1, ((8, 7), 15): 1, ((2, 1), 3): 1, ((3, 7), 10): 1, ((7, 4), 11): 1, ((3, 6), 9): 1, ((8, 1), 9): 1, ((0, 0), 0): 1, ((7, 5), 12): 1, ((8, 3), 11): 1, ((9, 3), 12): 1, ((4, 0), 2): 1, ((2, 3), 5): 1, ((2, 2), 4): 1, ((2, 0), 1): 1, ((3, 8), 11): 1, ((6, 2), 8): 1, ((8, 4), 12): 1, ((2, 9), 11): 1, ((1, 7), 8): 1, ((5, 4), 9): 1, ((0, 5), 5): 1, ((9, 8), 17): 1, ((0, 9), 9): 1, ((9, 2), 11): 1, ((1, 0), 1): 1, ((8, 0), 2): 1, ((1, 4), 5): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.47
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr (if0 $0 0 ($2 (decr0 $0) $1)))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 21s
------------------------------
Epoch 11/99 (max_len=3, data=4405)
Train acc: 53.68 (abduce 97.50)
Hit samples:  4295  Ave length:  2.53
Symbols:  13 Counter({8: 1352, 13: 1108, 4: 916, 10: 835, 7: 785, 11: 778, 1: 773, 3: 772, 0: 762, 6: 737, 2: 727, 5: 697, 12: 643})
Dep:  Counter({(1, -1, 1): 3295, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((2, 0), 0): 3, ((7, 0), 0): 3, ((6, 0), 0): 3, ((7, 6), 42): 2, ((5, 2), 10): 2, ((6, 4), 24): 2, ((5, 6), 30): 2, ((2, 7), 14): 2, ((4, 2), 8): 2, ((6, 8), 48): 2, ((9, 6), 54): 2, ((7, 2), 14): 2, ((8, 7), 56): 2, ((9, 8), 72): 2, ((9, 2), 18): 2, ((3, 0), 0): 2, ((9, 7), 63): 2, ((8, 4), 32): 2, ((6, 2), 12): 2, ((1, 3), 3): 2, ((0, 5), 5): 1, ((1, 1), 1): 1, ((0, 9), 9): 1, ((9, 9), 81): 1, ((4, 9), 36): 1, ((5, 0), 0): 1, ((4, 4), 16): 1, ((6, 9), 54): 1, ((9, 0), 0): 1, ((9, 3), 27): 1, ((1, 8), 8): 1, ((4, 3), 12): 1, ((1, 0), 0): 1, ((5, 3), 15): 1, ((2, 4), 6): 1, ((7, 1), 35): 1, ((3, 1), 5): 1, ((0, 1), 1): 1, ((6, 5), 30): 1, ((7, 4), 28): 1, ((1, 5), 5): 1, ((4, 7), 28): 1, ((8, 8), 64): 1, ((7, 9), 63): 1, ((5, 1), 45): 1, ((6, 7), 42): 1, ((0, 0), 0): 1, ((3, 9), 27): 1, ((7, 8), 56): 1, ((9, 4), 36): 1, ((9, 1), 2): 1, ((3, 2), 6): 1, ((0, 2), 2): 1, ((3, 3), 9): 1, ((4, 6), 24): 1, ((2, 6), 8): 1, ((8, 9), 72): 1, ((5, 5), 25): 1, ((8, 0), 0): 1, ((3, 8), 12): 1, ((6, 6), 36): 1, ((1, 2), 2): 1, ((0, 4), 32): 1, ((6, 1), 12): 1, ((8, 2), 16): 1, ((3, 4), 12): 1, ((1, 7), 7): 1, ((1, 6), 6): 1, ((2, 9), 18): 1, ((8, 3), 24): 1, ((0, 8), 32): 1, ((8, 5), 40): 1, ((4, 8), 32): 1, ((2, 5), 7): 1, ((8, 1), 0): 1, ((9, 5), 45): 1, ((0, 7), 7): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((9, 4), 13): 2, ((0, 6), 6): 2, ((8, 5), 13): 2, ((0, 4), 4): 2, ((1, 9), 10): 2, ((4, 2), 6): 2, ((6, 2), 8): 2, ((9, 3), 12): 2, ((3, 4), 7): 2, ((9, 2), 11): 2, ((8, 6), 14): 2, ((3, 1), 4): 2, ((6, 3), 9): 2, ((7, 4), 11): 2, ((4, 9), 13): 2, ((4, 5), 9): 2, ((6, 7), 13): 2, ((0, 1), 1): 2, ((7, 6), 13): 2, ((1, 1), 2): 2, ((6, 9), 15): 2, ((4, 3), 7): 2, ((2, 6), 8): 2, ((3, 6), 9): 1, ((8, 7), 15): 1, ((3, 0), 1): 1, ((4, 4), 8): 1, ((9, 1), 10): 1, ((5, 5), 10): 1, ((2, 3), 5): 1, ((7, 0), 1): 1, ((7, 5), 12): 1, ((1, 8), 9): 1, ((9, 7), 16): 1, ((4, 8), 12): 1, ((0, 2), 2): 1, ((5, 6), 11): 1, ((1, 5), 6): 1, ((3, 9), 12): 1, ((5, 8), 13): 1, ((1, 3), 4): 1, ((7, 2), 9): 1, ((7, 1), 8): 1, ((6, 0), 1): 1, ((5, 9), 14): 1, ((2, 9), 11): 1, ((0, 9), 9): 1, ((5, 4), 9): 1, ((0, 8), 8): 1, ((4, 1), 5): 1, ((1, 4), 5): 1, ((1, 7), 8): 1, ((2, 8), 10): 1, ((8, 0), 2): 1, ((7, 3), 10): 1, ((2, 2), 4): 1, ((0, 7), 7): 1, ((9, 6), 15): 1, ((3, 3), 6): 1, ((8, 2), 10): 1, ((2, 1), 3): 1, ((0, 5), 5): 1, ((8, 3), 11): 1, ((9, 5), 14): 1, ((8, 9), 17): 1, ((0, 3), 3): 1, ((9, 9), 18): 1, ((6, 5), 11): 1, ((5, 1), 6): 1, ((1, 2), 3): 1, ((9, 8), 17): 1, ((3, 5), 8): 1, ((6, 8), 14): 1, ((3, 2), 5): 1, ((4, 0), 1): 1, ((8, 8), 16): 1, ((9, 0), 4): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.50
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr (if0 $0 0 ($2 (decr0 $0) $1)))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 16s
------------------------------
Epoch 12/99 (max_len=3, data=4405)
Train acc: 53.99 (abduce 97.87)
Hit samples:  4311  Ave length:  2.54
Symbols:  13 Counter({8: 1343, 13: 1108, 4: 910, 10: 860, 11: 793, 7: 785, 1: 771, 0: 771, 6: 758, 3: 747, 2: 739, 5: 689, 12: 659})
Dep:  Counter({(1, -1, 1): 3311, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 6), 6): 3, ((6, 0), 0): 3, ((7, 9), 63): 2, ((8, 5), 40): 2, ((6, 6), 36): 2, ((7, 2), 14): 2, ((9, 2), 18): 2, ((8, 4), 32): 2, ((4, 8), 32): 2, ((1, 0), 0): 2, ((6, 4), 24): 2, ((3, 2), 6): 2, ((1, 5), 5): 2, ((9, 3), 27): 2, ((6, 7), 42): 2, ((7, 0), 0): 2, ((6, 5), 30): 2, ((1, 9), 9): 2, ((8, 9), 72): 2, ((1, 3), 3): 2, ((1, 8), 8): 1, ((9, 0), 0): 1, ((6, 3), 18): 1, ((5, 8), 40): 1, ((7, 7), 49): 1, ((4, 7), 28): 1, ((0, 7), 7): 1, ((1, 7), 7): 1, ((3, 0), 0): 1, ((9, 6), 54): 1, ((3, 8), 24): 1, ((4, 6), 24): 1, ((4, 0), 0): 1, ((4, 9), 36): 1, ((1, 1), 1): 1, ((5, 2), 10): 1, ((9, 7), 63): 1, ((0, 3), 3): 1, ((8, 6), 48): 1, ((6, 2), 12): 1, ((3, 5), 15): 1, ((0, 4), 4): 1, ((4, 5), 20): 1, ((4, 4), 36): 1, ((7, 5), 35): 1, ((9, 4), 36): 1, ((7, 8), 56): 1, ((6, 9), 54): 1, ((5, 3), 15): 1, ((4, 1), 28): 1, ((8, 2), 16): 1, ((0, 1), 9): 1, ((2, 0), 0): 1, ((8, 7), 56): 1, ((0, 8), 8): 1, ((0, 6), 6): 1, ((5, 6), 30): 1, ((5, 7), 35): 1, ((8, 8), 64): 1, ((6, 8), 48): 1, ((0, 0), 0): 1, ((7, 6), 42): 1, ((9, 8), 72): 1, ((3, 3), 15): 1, ((2, 9), 18): 1, ((3, 9), 27): 1, ((5, 9), 45): 1, ((0, 2), 2): 1, ((4, 3), 12): 1, ((7, 3), 21): 1, ((2, 5), 10): 1, ((0, 9), 9): 1, ((9, 1), 45): 1, ((2, 4), 8): 1, ((5, 4), 12): 1, ((9, 9), 81): 1, ((2, 6), 8): 1, ((0, 5), 5): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((8, 1), 9): 2, ((9, 1), 10): 2, ((3, 3), 6): 2, ((7, 1), 8): 2, ((8, 9), 17): 2, ((4, 8), 12): 2, ((6, 6), 12): 2, ((0, 6), 6): 2, ((1, 5), 6): 2, ((6, 1), 7): 2, ((1, 1), 2): 2, ((9, 8), 17): 2, ((8, 5), 13): 2, ((9, 7), 16): 2, ((6, 5), 11): 2, ((0, 1), 1): 2, ((5, 4), 9): 2, ((4, 5), 9): 2, ((7, 5), 12): 2, ((8, 4), 12): 2, ((4, 4), 8): 2, ((7, 3), 10): 2, ((9, 9), 18): 2, ((4, 6), 10): 2, ((9, 3), 12): 1, ((4, 9), 13): 1, ((6, 7), 13): 1, ((5, 2), 7): 1, ((4, 1), 5): 1, ((3, 2), 5): 1, ((2, 3), 5): 1, ((5, 5), 10): 1, ((2, 9), 11): 1, ((6, 3), 9): 1, ((1, 0), 1): 1, ((7, 6), 13): 1, ((7, 2), 9): 1, ((0, 9), 9): 1, ((8, 3), 11): 1, ((0, 5), 5): 1, ((6, 9), 15): 1, ((5, 1), 6): 1, ((5, 6), 11): 1, ((9, 0), 8): 1, ((7, 8), 15): 1, ((0, 4), 4): 1, ((8, 7), 15): 1, ((5, 8), 13): 1, ((4, 7), 11): 1, ((1, 2), 3): 1, ((1, 9), 10): 1, ((3, 9), 12): 1, ((3, 8), 11): 1, ((9, 5), 14): 1, ((4, 2), 6): 1, ((0, 3), 3): 1, ((3, 5), 8): 1, ((9, 4), 13): 1, ((7, 4), 11): 1, ((7, 0), 1): 1, ((8, 8), 16): 1, ((2, 6), 8): 1, ((6, 8), 14): 1, ((3, 4), 7): 1, ((9, 6), 15): 1, ((1, 4), 5): 1, ((7, 9), 16): 1, ((1, 6), 7): 1, ((7, 7), 14): 1, ((5, 3), 8): 1, ((4, 3), 7): 1, ((0, 0), 0): 1, ((2, 4), 6): 1, ((8, 2), 10): 1, ((0, 7), 7): 1, ((5, 9), 14): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.50
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr (if0 $0 0 ($2 (decr0 $0) $1)))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 16s
------------------------------
Epoch 13/99 (max_len=3, data=4405)
Train acc: 54.17 (abduce 98.14)
Hit samples:  4323  Ave length:  2.54
Symbols:  14 Counter({8: 1362, 13: 1118, 4: 904, 10: 842, 7: 806, 11: 790, 3: 786, 1: 780, 0: 757, 6: 749, 2: 732, 5: 674, 12: 668, 9: 1})
Dep:  Counter({(1, -1, 1): 3323, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 3), 3): 2, ((6, 8), 48): 2, ((8, 9), 72): 2, ((1, 6), 6): 2, ((2, 0), 0): 2, ((6, 6), 36): 2, ((9, 4), 36): 2, ((3, 2), 6): 2, ((5, 2), 10): 2, ((1, 8), 8): 2, ((1, 5), 5): 2, ((9, 8), 72): 2, ((7, 2), 14): 2, ((8, 6), 48): 2, ((6, 0), 0): 2, ((7, 8), 56): 2, ((6, 4), 24): 2, ((6, 2), 12): 2, ((6, 5), 30): 2, ((2, 2), 4): 2, ((5, 6), 30): 2, ((5, 0), 0): 2, ((8, 0), 0): 2, ((7, 7), 49): 2, ((2, 4), 8): 1, ((0, 6), 6): 1, ((8, 1), 3): 1, ((6, 3), 18): 1, ((4, 6), 24): 1, ((7, 0), 0): 1, ((8, 7), 56): 1, ((6, 7), 42): 1, ((2, 5), 10): 1, ((2, 8), 16): 1, ((9, 6), 54): 1, ((3, 7), 21): 1, ((9, 7), 63): 1, ((3, 6), 18): 1, ((9, 2), 18): 1, ((5, 4), 20): 1, ((5, 7), 35): 1, ((1, 7), 7): 1, ((8, 2), 16): 1, ((7, 6), 42): 1, ((8, 3), 24): 1, ((7, 5), 35): 1, ((9, 0), 0): 1, ((9, 5), 45): 1, ((2, 9), 18): 1, ((7, 3), 21): 1, ((9, 9), 81): 1, ((0, 7), 7): 1, ((3, 0), 0): 1, ((8, 4), 32): 1, ((1, 4), 4): 1, ((3, 5), 15): 1, ((4, 7), 28): 1, ((4, 3), 12): 1, ((5, 1), 45): 1, ((4, 5), 20): 1, ((4, 0), 0): 1, ((1, 2), 2): 1, ((8, 8), 64): 1, ((4, 9), 36): 1, ((6, 9), 54): 1, ((4, 1), 28): 1, ((3, 8), 24): 1, ((0, 1), 1): 1, ((3, 1), 5): 1, ((7, 9), 63): 1, ((1, 9), 9): 1, ((2, 3), 5): 1, ((6, 1), 42): 1, ((0, 5), 5): 1, ((8, 5), 40): 1, ((5, 9), 45): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((4, 3), 7): 2, ((0, 6), 6): 2, ((8, 3), 11): 2, ((7, 7), 14): 2, ((7, 1), 8): 2, ((8, 9), 17): 2, ((1, 2), 3): 2, ((6, 4), 10): 2, ((2, 6), 8): 2, ((9, 6), 15): 2, ((9, 5), 14): 2, ((7, 6), 13): 2, ((6, 5), 11): 2, ((2, 2), 4): 2, ((1, 5), 6): 2, ((4, 8), 12): 2, ((6, 1), 7): 2, ((8, 5), 13): 2, ((7, 5), 12): 2, ((6, 6), 12): 2, ((1, 4), 5): 2, ((6, 2), 8): 2, ((5, 2), 7): 1, ((0, 0), 0): 1, ((9, 4), 13): 1, ((2, 9), 11): 1, ((1, 0), 1): 1, ((7, 9), 16): 1, ((8, 8), 16): 1, ((5, 9), 14): 1, ((9, 9), 18): 1, ((6, 3), 9): 1, ((7, 4), 11): 1, ((0, 7), 7): 1, ((0, 8), 8): 1, ((4, 2), 6): 1, ((3, 9), 12): 1, ((5, 1), 6): 1, ((3, 8), 11): 1, ((7, 2), 9): 1, ((3, 2), 5): 1, ((9, 8), 17): 1, ((8, 2), 10): 1, ((2, 1), 3): 1, ((1, 6), 7): 1, ((3, 1), 4): 1, ((2, 5), 7): 1, ((5, 5), 10): 1, ((3, 3), 6): 1, ((7, 3), 10): 1, ((3, 6), 9): 1, ((5, 8), 13): 1, ((0, 2), 2): 1, ((7, 8), 15): 1, ((3, 7), 10): 1, ((6, 9), 15): 1, ((8, 6), 14): 1, ((2, 4), 6): 1, ((4, 6), 10): 1, ((4, 0), 1): 1, ((6, 0), 1): 1, ((4, 1), 5): 1, ((8, 0), 2): 1, ((8, 7), 15): 1, ((2, 0), 1): 1, ((0, 5), 5): 1, ((8, 4), 12): 1, ((1, 7), 8): 1, ((2, 8), 10): 1, ((4, 7), 11): 1, ((1, 9), 10): 1, ((1, 3), 4): 1, ((5, 4), 9): 1, ((4, 9), 13): 1, ((6, 8), 14): 1, ((4, 5), 9): 1, ((1, 1), 2): 1, ((8, 1), 9): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.47
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr (if0 $0 0 ($2 (decr0 $0) $1)))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 20s
------------------------------
Epoch 14/99 (max_len=3, data=4405)
Train acc: 53.31 (abduce 97.73)
Hit samples:  4305  Ave length:  2.54
Symbols:  14 Counter({8: 1347, 13: 1129, 4: 907, 10: 826, 7: 799, 11: 798, 1: 769, 3: 769, 0: 759, 6: 755, 2: 715, 5: 679, 12: 660, 9: 3})
Dep:  Counter({(1, -1, 1): 3305, (-1,): 1000})
Learn perception with 3561 samples for 500 iterations, take 30 sec.
result accuracy by length:
1 ( 3%) 92.00
3 (12%) 45.64
5 (55%) 28.25
7 (29%) 18.57
result accuracy by symbol:
* (45%) 17.69
+ (45%) 28.63
- (45%) 17.07
/ (42%) 36.05
0 (23%) 45.09
1 (28%) 28.15
2 (29%) 24.65
3 (28%) 24.07
4 (28%) 25.60
5 (28%) 23.57
6 (28%) 24.37
7 (28%) 24.59
8 (27%) 24.94
9 (28%) 23.84
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 80.00
5 ( 0%) 90.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%) 23.21
1 ( 9%) 73.55
2 ( 5%) 29.84
3 ( 5%) 22.09
4 ( 4%) 27.15
5 ( 4%) 31.61
6 ( 4%) 35.00
7 ( 4%) 31.13
8 ( 4%) 37.67
9 ( 4%) 42.86
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 33.23
unseen (41%) 24.11
val (Perception Acc=10.38, Syntax Acc=100.00, Result Acc=29.43)
Epoch time: 0m 35s
------------------------------
Epoch 15/99 (max_len=3, data=4405)
Train acc: 55.23 (abduce 98.77)
Hit samples:  4351  Ave length:  2.54
Symbols:  13 Counter({8: 1368, 13: 1173, 4: 1013, 10: 810, 3: 797, 11: 793, 0: 787, 1: 765, 7: 758, 2: 737, 6: 736, 5: 680, 12: 636})
Dep:  Counter({(1, -1, 1): 3351, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 8), 8): 3, ((8, 0), 0): 3, ((4, 2), 8): 3, ((2, 2), 4): 3, ((7, 0), 0): 2, ((5, 0), 0): 2, ((5, 2), 10): 2, ((9, 8), 72): 2, ((9, 2), 18): 2, ((1, 6), 6): 2, ((7, 2), 14): 2, ((4, 0), 0): 2, ((9, 0), 0): 2, ((3, 2), 6): 2, ((8, 3), 24): 2, ((8, 2), 16): 2, ((9, 7), 63): 2, ((8, 5), 40): 2, ((6, 0), 0): 2, ((1, 1), 1): 2, ((6, 5), 30): 2, ((6, 6), 36): 2, ((2, 7), 14): 1, ((4, 4), 16): 1, ((8, 9), 72): 1, ((1, 0), 0): 1, ((4, 1), 7): 1, ((7, 3), 15): 1, ((2, 6), 8): 1, ((4, 6), 12): 1, ((3, 0), 0): 1, ((9, 9), 81): 1, ((1, 7), 7): 1, ((9, 3), 27): 1, ((7, 6), 42): 1, ((2, 5), 7): 1, ((5, 6), 30): 1, ((5, 5), 25): 1, ((6, 8), 18): 1, ((9, 4), 36): 1, ((5, 9), 45): 1, ((0, 2), 2): 1, ((2, 1), 3): 1, ((1, 2), 2): 1, ((2, 8), 10): 1, ((6, 1), 8): 1, ((0, 1), 1): 1, ((0, 5), 25): 1, ((9, 6), 54): 1, ((0, 4), 81): 1, ((3, 7), 21): 1, ((7, 5), 35): 1, ((6, 4), 24): 1, ((3, 8), 24): 1, ((3, 9), 27): 1, ((4, 8), 32): 1, ((0, 8), 8): 1, ((7, 7), 49): 1, ((5, 8), 40): 1, ((4, 7), 28): 1, ((9, 5), 45): 1, ((6, 3), 18): 1, ((0, 3), 3): 1, ((0, 0), 0): 1, ((9, 1), 36): 1, ((1, 3), 3): 1, ((4, 9), 36): 1, ((8, 6), 48): 1, ((6, 2), 12): 1, ((3, 1), 5): 1, ((8, 8), 64): 1, ((3, 6), 18): 1, ((5, 7), 35): 1, ((1, 9), 9): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((1, 1), 2): 2, ((8, 6), 14): 2, ((5, 2), 7): 2, ((9, 5), 14): 2, ((0, 8), 8): 2, ((9, 3), 12): 2, ((1, 0), 1): 2, ((6, 7), 13): 2, ((3, 7), 10): 2, ((0, 6), 6): 2, ((3, 1), 4): 2, ((6, 6), 12): 2, ((6, 2), 8): 2, ((7, 4), 11): 2, ((9, 1), 10): 2, ((9, 9), 18): 2, ((4, 1), 5): 2, ((8, 9), 17): 2, ((4, 4), 8): 2, ((1, 7), 8): 2, ((2, 1), 3): 2, ((5, 3), 8): 2, ((8, 7), 15): 2, ((7, 1), 8): 2, ((0, 9), 9): 1, ((2, 2), 4): 1, ((2, 0), 1): 1, ((6, 8), 14): 1, ((8, 8), 16): 1, ((3, 9), 12): 1, ((5, 8), 13): 1, ((7, 9), 16): 1, ((6, 0), 45): 1, ((2, 8), 10): 1, ((4, 5), 9): 1, ((1, 9), 10): 1, ((7, 8), 15): 1, ((3, 5), 8): 1, ((1, 6), 7): 1, ((4, 7), 11): 1, ((6, 4), 10): 1, ((5, 7), 12): 1, ((2, 9), 11): 1, ((7, 2), 9): 1, ((0, 2), 2): 1, ((1, 8), 9): 1, ((0, 3), 3): 1, ((3, 8), 11): 1, ((8, 4), 12): 1, ((4, 8), 12): 1, ((6, 5), 11): 1, ((7, 3), 10): 1, ((0, 7), 7): 1, ((3, 3), 6): 1, ((3, 4), 7): 1, ((3, 6), 9): 1, ((2, 4), 6): 1, ((9, 0), 4): 1, ((8, 2), 10): 1, ((8, 1), 9): 1, ((0, 5), 5): 1, ((5, 4), 9): 1, ((5, 6), 11): 1, ((9, 7), 16): 1, ((2, 7), 9): 1, ((7, 5), 12): 1, ((1, 5), 6): 1, ((3, 2), 5): 1, ((7, 7), 14): 1, ((5, 1), 6): 1, ((0, 0), 0): 1, ((2, 3), 5): 1, ((6, 9), 15): 1, ((6, 1), 7): 1, ((4, 6), 10): 1, ((1, 4), 5): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.61
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr (if0 $0 0 ($2 (decr0 $0) $1)))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 22s
------------------------------
Epoch 16/99 (max_len=3, data=4405)
Train acc: 54.94 (abduce 98.52)
Hit samples:  4340  Ave length:  2.54
Symbols:  14 Counter({8: 1364, 13: 1160, 4: 1028, 10: 814, 0: 801, 3: 790, 11: 788, 1: 756, 7: 753, 2: 734, 6: 716, 5: 678, 12: 636, 9: 2})
Dep:  Counter({(1, -1, 1): 3340, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 5), 5): 3, ((8, 0), 0): 2, ((9, 7), 63): 2, ((0, 0), 0): 2, ((7, 2), 14): 2, ((2, 0), 0): 2, ((6, 2), 12): 2, ((8, 9), 72): 2, ((5, 2), 10): 2, ((6, 9), 54): 2, ((6, 4), 24): 2, ((3, 0), 0): 2, ((8, 6), 48): 2, ((1, 7), 7): 2, ((4, 0), 0): 2, ((7, 9), 63): 2, ((8, 2), 16): 2, ((4, 8), 32): 2, ((1, 9), 9): 2, ((5, 0), 0): 2, ((7, 7), 49): 2, ((0, 9), 9): 1, ((6, 8), 48): 1, ((8, 4), 32): 1, ((2, 7), 14): 1, ((6, 7), 42): 1, ((6, 3), 18): 1, ((1, 6), 6): 1, ((1, 0), 0): 1, ((1, 4), 4): 1, ((4, 6), 24): 1, ((7, 0), 0): 1, ((0, 8), 8): 1, ((3, 6), 18): 1, ((3, 7), 21): 1, ((7, 6), 42): 1, ((3, 4), 12): 1, ((3, 2), 6): 1, ((0, 5), 45): 1, ((0, 1), 1): 1, ((5, 5), 25): 1, ((2, 2), 4): 1, ((3, 9), 27): 1, ((4, 3), 9): 1, ((2, 8), 16): 1, ((9, 4), 36): 1, ((4, 1), 7): 1, ((3, 5), 9): 1, ((3, 1), 5): 1, ((0, 7), 7): 1, ((6, 0), 0): 1, ((0, 6), 54): 1, ((7, 5), 35): 1, ((7, 8), 56): 1, ((7, 1), 2): 1, ((5, 1), 9): 1, ((9, 5), 45): 1, ((8, 5), 40): 1, ((0, 3), 27): 1, ((4, 2), 8): 1, ((6, 5), 30): 1, ((3, 8), 40): 1, ((7, 3), 15): 1, ((2, 6), 8): 1, ((6, 6), 36): 1, ((9, 0), 0): 1, ((1, 8), 8): 1, ((5, 6), 30): 1, ((9, 2), 18): 1, ((9, 6), 54): 1, ((4, 5), 20): 1, ((0, 2), 2): 1, ((6, 1), 54): 1, ((1, 1), 1): 1, ((9, 9), 81): 1, ((1, 2), 2): 1, ((8, 1), 48): 1, ((4, 7), 28): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((6, 2), 8): 2, ((6, 3), 9): 2, ((6, 4), 10): 2, ((6, 9), 15): 2, ((0, 7), 7): 2, ((6, 8), 14): 2, ((8, 4), 12): 2, ((4, 9), 13): 2, ((1, 2), 3): 2, ((8, 6), 14): 2, ((5, 5), 10): 2, ((4, 6), 10): 2, ((2, 3), 5): 2, ((3, 4), 7): 2, ((4, 5), 9): 2, ((3, 7), 10): 2, ((4, 7), 11): 2, ((9, 1), 10): 2, ((2, 2), 4): 2, ((2, 1), 3): 2, ((0, 5), 5): 2, ((2, 8), 10): 2, ((8, 7), 15): 2, ((1, 0), 1): 1, ((6, 5), 11): 1, ((8, 8), 16): 1, ((1, 3), 4): 1, ((9, 7), 16): 1, ((9, 9), 18): 1, ((1, 1), 2): 1, ((1, 8), 9): 1, ((6, 7), 13): 1, ((0, 0), 0): 1, ((7, 1), 8): 1, ((9, 2), 11): 1, ((3, 1), 4): 1, ((1, 6), 7): 1, ((0, 6), 6): 1, ((7, 9), 16): 1, ((0, 2), 2): 1, ((4, 2), 6): 1, ((4, 1), 5): 1, ((3, 5), 8): 1, ((8, 3), 11): 1, ((1, 9), 10): 1, ((4, 8), 12): 1, ((5, 6), 11): 1, ((3, 2), 5): 1, ((9, 3), 12): 1, ((2, 4), 6): 1, ((5, 0), 1): 1, ((2, 9), 11): 1, ((6, 1), 7): 1, ((5, 1), 6): 1, ((7, 8), 15): 1, ((0, 9), 9): 1, ((9, 8), 17): 1, ((8, 0), 4): 1, ((0, 8), 8): 1, ((2, 7), 9): 1, ((1, 5), 6): 1, ((8, 9), 17): 1, ((5, 4), 9): 1, ((1, 4), 5): 1, ((3, 8), 11): 1, ((0, 3), 3): 1, ((7, 4), 11): 1, ((7, 5), 12): 1, ((7, 7), 14): 1, ((6, 0), 54): 1, ((0, 1), 1): 1, ((7, 3), 10): 1, ((2, 0), 14): 1, ((6, 6), 12): 1, ((4, 3), 7): 1, ((7, 6), 13): 1, ((9, 4), 13): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.57
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr (if0 $0 0 ($2 (decr0 $0) $1)))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 17s
------------------------------
Epoch 17/99 (max_len=3, data=4405)
Train acc: 56.16 (abduce 98.05)
Hit samples:  4319  Ave length:  2.54
Symbols:  13 Counter({8: 1368, 13: 1153, 4: 1007, 11: 802, 10: 798, 3: 793, 0: 792, 7: 762, 1: 755, 6: 736, 2: 724, 5: 658, 12: 609})
Dep:  Counter({(1, -1, 1): 3319, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((9, 0), 0): 3, ((8, 2), 16): 3, ((7, 0), 0): 3, ((6, 0), 0): 3, ((8, 0), 0): 3, ((9, 2), 18): 3, ((1, 0), 0): 2, ((9, 7), 63): 2, ((2, 2), 4): 2, ((4, 8), 32): 2, ((5, 2), 10): 2, ((7, 2), 14): 2, ((9, 3), 27): 2, ((3, 0), 0): 2, ((6, 8), 48): 2, ((8, 9), 72): 2, ((1, 8), 8): 2, ((4, 6), 24): 2, ((2, 0), 0): 2, ((9, 9), 81): 2, ((5, 0), 0): 2, ((4, 0), 0): 2, ((1, 5), 5): 2, ((4, 2), 8): 2, ((6, 6), 36): 2, ((9, 6), 54): 2, ((4, 9), 36): 2, ((0, 5), 45): 1, ((4, 1), 7): 1, ((2, 4), 6): 1, ((4, 7), 28): 1, ((4, 5), 20): 1, ((1, 7), 7): 1, ((2, 6), 8): 1, ((5, 8), 40): 1, ((8, 4), 32): 1, ((7, 7), 49): 1, ((8, 3), 24): 1, ((2, 7), 14): 1, ((0, 7), 7): 1, ((3, 1), 5): 1, ((1, 2), 2): 1, ((3, 2), 6): 1, ((5, 5), 25): 1, ((3, 3), 9): 1, ((6, 1), 4): 1, ((1, 6), 6): 1, ((4, 4), 16): 1, ((7, 6), 42): 1, ((3, 8), 12): 1, ((0, 8), 8): 1, ((9, 8), 72): 1, ((5, 4), 12): 1, ((3, 9), 27): 1, ((9, 1), 45): 1, ((0, 0), 0): 1, ((6, 7), 42): 1, ((2, 8), 10): 1, ((7, 8), 56): 1, ((3, 4), 12): 1, ((7, 4), 28): 1, ((6, 5), 30): 1, ((0, 9), 18): 1, ((6, 4), 24): 1, ((9, 4), 36): 1, ((9, 5), 45): 1, ((1, 1), 1): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((7, 3), 10): 2, ((2, 9), 11): 2, ((5, 6), 11): 2, ((3, 4), 7): 2, ((7, 4), 11): 2, ((7, 7), 14): 2, ((0, 7), 7): 2, ((1, 3), 4): 2, ((6, 7), 13): 2, ((9, 2), 11): 2, ((9, 3), 12): 2, ((8, 5), 13): 2, ((5, 1), 6): 2, ((9, 5), 14): 2, ((8, 2), 10): 2, ((8, 9), 17): 2, ((1, 5), 6): 2, ((7, 8), 15): 2, ((2, 6), 8): 2, ((4, 5), 9): 2, ((9, 9), 18): 2, ((6, 1), 7): 2, ((0, 2), 2): 2, ((0, 3), 3): 2, ((4, 4), 8): 1, ((1, 8), 9): 1, ((6, 5), 11): 1, ((4, 8), 12): 1, ((9, 8), 17): 1, ((9, 1), 10): 1, ((0, 6), 6): 1, ((1, 4), 5): 1, ((3, 7), 10): 1, ((8, 8), 16): 1, ((1, 9), 10): 1, ((9, 7), 16): 1, ((2, 7), 9): 1, ((9, 6), 15): 1, ((6, 8), 14): 1, ((0, 5), 5): 1, ((5, 3), 8): 1, ((1, 2), 3): 1, ((3, 3), 6): 1, ((3, 8), 11): 1, ((0, 4), 4): 1, ((1, 7), 8): 1, ((3, 6), 9): 1, ((1, 1), 2): 1, ((4, 3), 7): 1, ((2, 8), 10): 1, ((6, 6), 12): 1, ((1, 0), 1): 1, ((5, 8), 13): 1, ((0, 9), 9): 1, ((0, 8), 8): 1, ((5, 4), 9): 1, ((1, 6), 7): 1, ((4, 0), 1): 1, ((2, 3), 5): 1, ((0, 1), 1): 1, ((8, 4), 12): 1, ((4, 1), 5): 1, ((3, 9), 12): 1, ((8, 1), 9): 1, ((5, 5), 10): 1, ((8, 3), 11): 1, ((9, 4), 13): 1, ((4, 2), 6): 1, ((5, 9), 14): 1, ((6, 3), 9): 1, ((6, 9), 15): 1, ((7, 6), 13): 1, ((4, 6), 10): 1, ((2, 1), 3): 1, ((0, 0), 0): 1, ((9, 0), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.55
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (if0 $0 0 (decr0 $1)) (incr $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 21s
------------------------------
Epoch 18/99 (max_len=3, data=4405)
Train acc: 55.38 (abduce 98.43)
Hit samples:  4336  Ave length:  2.54
Symbols:  14 Counter({8: 1368, 13: 1148, 4: 1005, 3: 820, 10: 819, 11: 814, 0: 787, 7: 763, 1: 742, 6: 720, 2: 720, 5: 685, 12: 616, 9: 1})
Dep:  Counter({(1, -1, 1): 3336, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((5, 0), 0): 3, ((8, 0), 0): 3, ((9, 3), 27): 2, ((5, 6), 30): 2, ((7, 0), 0): 2, ((1, 8), 8): 2, ((2, 9), 18): 2, ((7, 7), 49): 2, ((8, 4), 32): 2, ((1, 9), 9): 2, ((0, 0), 0): 2, ((7, 4), 28): 2, ((8, 2), 16): 2, ((4, 0), 0): 2, ((1, 7), 7): 2, ((1, 1), 1): 2, ((2, 7), 14): 2, ((6, 9), 54): 2, ((1, 3), 3): 2, ((8, 9), 72): 2, ((7, 5), 35): 1, ((6, 3), 18): 1, ((7, 2), 14): 1, ((3, 7), 21): 1, ((6, 2), 12): 1, ((6, 1), 8): 1, ((3, 2), 6): 1, ((6, 6), 36): 1, ((0, 6), 6): 1, ((4, 6), 24): 1, ((9, 6), 54): 1, ((4, 7), 28): 1, ((6, 8), 48): 1, ((8, 7), 56): 1, ((9, 7), 63): 1, ((0, 7), 7): 1, ((9, 8), 72): 1, ((2, 1), 3): 1, ((7, 6), 42): 1, ((7, 9), 63): 1, ((3, 1), 5): 1, ((5, 2), 10): 1, ((0, 8), 32): 1, ((0, 3), 3): 1, ((1, 0), 0): 1, ((5, 3), 15): 1, ((9, 9), 81): 1, ((1, 4), 4): 1, ((7, 1), 42): 1, ((6, 7), 42): 1, ((2, 4), 6): 1, ((8, 6), 48): 1, ((3, 0), 0): 1, ((5, 4), 12): 1, ((8, 8), 64): 1, ((2, 5), 7): 1, ((5, 9), 45): 1, ((2, 2), 4): 1, ((9, 2), 18): 1, ((3, 6), 18): 1, ((2, 3), 5): 1, ((2, 0), 0): 1, ((5, 1), 9): 1, ((2, 8), 10): 1, ((4, 8), 32): 1, ((1, 6), 6): 1, ((3, 9), 27): 1, ((1, 5), 5): 1, ((3, 4), 24): 1, ((9, 4), 36): 1, ((4, 4), 28): 1, ((1, 2), 2): 1, ((3, 3), 9): 1, ((3, 5), 9): 1, ((7, 3), 15): 1, ((6, 5), 30): 1, ((8, 1), 64): 1, ((5, 8), 40): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((0, 7), 7): 2, ((7, 1), 8): 2, ((1, 3), 4): 2, ((7, 4), 11): 2, ((7, 7), 14): 2, ((5, 6), 11): 2, ((5, 2), 7): 2, ((1, 5), 6): 2, ((4, 9), 13): 2, ((8, 6), 14): 2, ((6, 2), 8): 2, ((6, 4), 10): 2, ((3, 8), 11): 2, ((4, 1), 5): 2, ((4, 5), 9): 2, ((3, 1), 4): 2, ((6, 5), 11): 2, ((3, 3), 6): 2, ((4, 7), 11): 2, ((5, 4), 9): 2, ((9, 9), 18): 2, ((9, 2), 11): 2, ((6, 1), 7): 2, ((1, 2), 3): 2, ((9, 1), 10): 2, ((2, 2), 4): 1, ((4, 6), 10): 1, ((0, 4), 4): 1, ((1, 9), 10): 1, ((0, 2), 2): 1, ((8, 9), 17): 1, ((1, 0), 1): 1, ((5, 3), 8): 1, ((0, 0), 0): 1, ((9, 8), 17): 1, ((2, 9), 11): 1, ((1, 8), 9): 1, ((4, 4), 8): 1, ((9, 5), 14): 1, ((2, 4), 6): 1, ((3, 9), 12): 1, ((3, 7), 10): 1, ((9, 0), 4): 1, ((1, 6), 7): 1, ((3, 4), 7): 1, ((8, 8), 16): 1, ((2, 8), 10): 1, ((8, 7), 15): 1, ((3, 2), 5): 1, ((9, 6), 15): 1, ((7, 8), 15): 1, ((1, 4), 5): 1, ((8, 4), 12): 1, ((7, 0), 4): 1, ((1, 7), 8): 1, ((1, 1), 2): 1, ((8, 0), 7): 1, ((7, 5), 12): 1, ((9, 7), 16): 1, ((7, 9), 16): 1, ((8, 3), 11): 1, ((5, 5), 10): 1, ((5, 1), 6): 1, ((7, 3), 10): 1, ((7, 6), 13): 1, ((2, 0), 1): 1, ((8, 2), 10): 1, ((2, 3), 5): 1, ((0, 9), 9): 1, ((5, 9), 14): 1, ((0, 3), 3): 1, ((4, 2), 6): 1, ((6, 6), 12): 1, ((6, 0), 9): 1, ((3, 6), 9): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.57
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (if0 $0 0 (decr0 $1)) (incr $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 18s
------------------------------
Epoch 19/99 (max_len=3, data=4405)
Train acc: 55.69 (abduce 98.34)
Hit samples:  4332  Ave length:  2.54
Symbols:  13 Counter({8: 1375, 13: 1153, 4: 1025, 10: 804, 11: 803, 3: 787, 0: 786, 7: 767, 1: 756, 2: 721, 6: 718, 5: 681, 12: 620})
Dep:  Counter({(1, -1, 1): 3332, (-1,): 1000})
Learn perception with 3628 samples for 500 iterations, take 32 sec.
result accuracy by length:
1 ( 3%) 91.00
3 (12%) 45.64
5 (55%) 27.35
7 (29%) 18.88
result accuracy by symbol:
* (45%) 17.90
+ (45%) 27.49
- (45%) 16.60
/ (42%) 35.54
0 (23%) 44.70
1 (28%) 28.70
2 (29%) 24.65
3 (28%) 23.30
4 (28%) 25.16
5 (28%) 22.81
6 (28%) 23.49
7 (28%) 24.92
8 (27%) 24.83
9 (28%) 22.75
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 80.00
5 ( 0%) 90.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%) 22.82
1 ( 9%) 74.84
2 ( 5%) 34.03
3 ( 5%) 22.70
4 ( 4%) 25.83
5 ( 4%) 30.32
6 ( 4%) 34.29
7 ( 4%) 33.11
8 ( 4%) 34.25
9 ( 4%) 40.71
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 33.33
unseen (41%) 22.92
val (Perception Acc=10.44, Syntax Acc=100.00, Result Acc=29.00)
Epoch time: 0m 37s
------------------------------
Epoch 20/99 (max_len=3, data=4405)
Train acc: 60.40 (abduce 98.89)
Hit samples:  4356  Ave length:  2.54
Symbols:  13 Counter({8: 1396, 13: 1135, 4: 1058, 10: 825, 11: 813, 3: 803, 0: 795, 1: 762, 7: 752, 2: 745, 6: 721, 5: 656, 12: 607})
Dep:  Counter({(1, -1, 1): 3356, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((6, 0), 0): 3, ((8, 0), 0): 3, ((1, 1), 1): 2, ((1, 4), 4): 2, ((9, 8), 24): 2, ((7, 5), 35): 2, ((2, 2), 4): 2, ((5, 2), 10): 2, ((6, 9), 54): 2, ((1, 0), 0): 2, ((9, 7), 63): 2, ((1, 6), 6): 2, ((3, 2), 6): 2, ((1, 7), 7): 2, ((7, 2), 14): 2, ((1, 3), 3): 2, ((9, 9), 81): 2, ((7, 6), 42): 2, ((7, 0), 0): 2, ((4, 2), 8): 2, ((0, 0), 0): 2, ((6, 5), 30): 2, ((2, 0), 0): 2, ((8, 7), 56): 2, ((4, 6), 12): 2, ((4, 7), 28): 2, ((8, 4), 32): 2, ((9, 2), 18): 2, ((2, 6), 8): 1, ((0, 7), 7): 1, ((4, 9), 36): 1, ((6, 1), 30): 1, ((3, 6), 18): 1, ((6, 7), 42): 1, ((9, 0), 0): 1, ((2, 7), 9): 1, ((3, 8), 12): 1, ((2, 5), 7): 1, ((4, 8), 32): 1, ((0, 5), 49): 1, ((3, 0), 0): 1, ((5, 0), 0): 1, ((3, 4), 27): 1, ((7, 8), 56): 1, ((9, 5), 45): 1, ((4, 1), 36): 1, ((3, 1), 5): 1, ((9, 3), 27): 1, ((4, 3), 36): 1, ((5, 1), 9): 1, ((5, 5), 25): 1, ((5, 9), 45): 1, ((6, 2), 12): 1, ((6, 6), 36): 1, ((2, 1), 3): 1, ((5, 3), 15): 1, ((7, 4), 28): 1, ((6, 4), 24): 1, ((0, 2), 2): 1, ((3, 7), 20): 1, ((1, 2), 2): 1, ((5, 4), 35): 1, ((3, 5), 9): 1, ((1, 5), 5): 1, ((4, 4), 16): 1, ((8, 2), 16): 1, ((7, 3), 15): 1, ((9, 4), 36): 1, ((1, 8), 8): 1, ((8, 5), 40): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((1, 2), 3): 2, ((3, 6), 9): 2, ((0, 7), 7): 2, ((0, 5), 5): 2, ((4, 9), 13): 2, ((4, 6), 10): 2, ((5, 8), 13): 2, ((5, 2), 7): 2, ((6, 2), 8): 2, ((8, 4), 12): 2, ((5, 1), 6): 2, ((8, 2), 10): 2, ((2, 1), 3): 2, ((3, 1), 4): 2, ((1, 4), 5): 2, ((3, 9), 12): 2, ((6, 9), 15): 2, ((1, 0), 1): 2, ((9, 8), 17): 2, ((7, 6), 13): 2, ((4, 7), 11): 2, ((9, 1), 10): 2, ((7, 4), 11): 2, ((6, 7), 13): 1, ((4, 3), 7): 1, ((2, 0), 1): 1, ((0, 3), 3): 1, ((7, 5), 12): 1, ((8, 6), 14): 1, ((4, 2), 6): 1, ((2, 5), 7): 1, ((9, 7), 16): 1, ((0, 6), 6): 1, ((8, 8), 16): 1, ((6, 6), 12): 1, ((5, 5), 10): 1, ((8, 7), 15): 1, ((6, 4), 10): 1, ((2, 4), 6): 1, ((4, 8), 12): 1, ((2, 6), 8): 1, ((9, 6), 15): 1, ((3, 2), 5): 1, ((7, 2), 9): 1, ((9, 5), 14): 1, ((7, 3), 10): 1, ((3, 7), 10): 1, ((8, 1), 9): 1, ((1, 6), 7): 1, ((0, 8), 8): 1, ((5, 6), 11): 1, ((9, 4), 13): 1, ((1, 3), 4): 1, ((7, 9), 16): 1, ((2, 7), 9): 1, ((8, 0), 4): 1, ((3, 5), 8): 1, ((3, 8), 11): 1, ((8, 5), 13): 1, ((9, 0), 4): 1, ((0, 4), 4): 1, ((1, 9), 10): 1, ((6, 1), 7): 1, ((7, 7), 14): 1, ((7, 1), 8): 1, ((2, 9), 11): 1, ((3, 3), 6): 1, ((6, 5), 11): 1, ((7, 8), 15): 1, ((2, 8), 10): 1, ((4, 5), 9): 1, ((9, 9), 18): 1, ((4, 1), 5): 1, ((8, 3), 11): 1, ((6, 3), 9): 1, ((5, 7), 12): 1, ((1, 1), 2): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.65
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (if0 $0 0 (decr0 $1)) (incr $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 15s
------------------------------
Epoch 21/99 (max_len=3, data=4405)
Train acc: 59.77 (abduce 98.64)
Hit samples:  4345  Ave length:  2.54
Symbols:  13 Counter({8: 1385, 13: 1139, 4: 1049, 10: 821, 3: 805, 0: 805, 11: 800, 1: 765, 7: 764, 2: 722, 6: 704, 5: 641, 12: 635})
Dep:  Counter({(1, -1, 1): 3345, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 6), 6): 3, ((7, 0), 0): 3, ((4, 2), 8): 3, ((2, 0), 0): 3, ((6, 5), 30): 2, ((1, 0), 0): 2, ((6, 8), 48): 2, ((8, 7), 56): 2, ((7, 2), 14): 2, ((1, 1), 1): 2, ((1, 7), 7): 2, ((6, 0), 0): 2, ((0, 0), 0): 2, ((0, 9), 9): 2, ((8, 2), 16): 2, ((7, 6), 42): 2, ((2, 2), 4): 2, ((1, 8), 8): 2, ((2, 9), 18): 2, ((3, 2), 6): 2, ((1, 2), 2): 2, ((8, 4), 32): 2, ((7, 1), 63): 1, ((9, 2), 18): 1, ((7, 4), 28): 1, ((1, 9), 9): 1, ((3, 8), 12): 1, ((8, 0), 0): 1, ((7, 3), 15): 1, ((9, 8), 24): 1, ((7, 9), 21): 1, ((5, 5), 25): 1, ((5, 4), 12): 1, ((3, 7), 11): 1, ((2, 7), 14): 1, ((4, 9), 36): 1, ((4, 8), 32): 1, ((8, 5), 40): 1, ((3, 9), 27): 1, ((4, 6), 12): 1, ((2, 4), 6): 1, ((0, 2), 10): 1, ((9, 5), 45): 1, ((9, 1), 45): 1, ((7, 5), 35): 1, ((5, 3), 15): 1, ((9, 6), 54): 1, ((6, 6), 36): 1, ((8, 1), 32): 1, ((9, 7), 63): 1, ((1, 5), 5): 1, ((8, 6), 48): 1, ((5, 8), 40): 1, ((6, 3), 18): 1, ((4, 0), 0): 1, ((2, 1), 3): 1, ((0, 6), 6): 1, ((2, 6), 8): 1, ((8, 9), 72): 1, ((3, 1), 5): 1, ((5, 0), 0): 1, ((1, 3), 3): 1, ((0, 4), 4): 1, ((9, 0), 0): 1, ((4, 7), 28): 1, ((6, 2), 12): 1, ((5, 2), 10): 1, ((1, 4), 4): 1, ((8, 3), 24): 1, ((4, 1), 35): 1, ((3, 4), 8): 1, ((8, 8), 64): 1, ((3, 6), 15): 1, ((2, 3), 56): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((1, 9), 10): 2, ((9, 1), 10): 2, ((3, 3), 6): 2, ((8, 8), 16): 2, ((1, 2), 3): 2, ((6, 7), 13): 2, ((0, 5), 5): 2, ((8, 6), 14): 2, ((1, 4), 5): 2, ((4, 9), 13): 2, ((0, 3), 3): 2, ((0, 4), 4): 2, ((5, 6), 11): 2, ((6, 4), 10): 2, ((4, 6), 10): 2, ((9, 9), 18): 2, ((4, 5), 9): 2, ((1, 5), 6): 2, ((6, 3), 9): 2, ((7, 1), 8): 2, ((3, 6), 9): 2, ((8, 7), 15): 2, ((1, 8), 9): 2, ((5, 4), 9): 2, ((7, 5), 12): 2, ((5, 8), 13): 1, ((0, 7), 7): 1, ((6, 0), 1): 1, ((4, 8), 12): 1, ((2, 3), 5): 1, ((5, 1), 6): 1, ((0, 9), 9): 1, ((8, 1), 9): 1, ((1, 0), 1): 1, ((1, 7), 8): 1, ((3, 7), 10): 1, ((4, 4), 8): 1, ((9, 4), 13): 1, ((7, 9), 16): 1, ((4, 2), 6): 1, ((7, 0), 1): 1, ((3, 0), 1): 1, ((2, 1), 3): 1, ((6, 6), 12): 1, ((5, 2), 7): 1, ((6, 1), 7): 1, ((8, 2), 10): 1, ((4, 3), 7): 1, ((1, 1), 2): 1, ((2, 7), 9): 1, ((0, 0), 0): 1, ((7, 4), 11): 1, ((4, 1), 5): 1, ((0, 6), 6): 1, ((2, 4), 6): 1, ((6, 2), 8): 1, ((9, 6), 15): 1, ((5, 3), 8): 1, ((8, 9), 17): 1, ((0, 2), 2): 1, ((3, 2), 5): 1, ((6, 9), 15): 1, ((9, 5), 14): 1, ((8, 5), 13): 1, ((9, 7), 16): 1, ((3, 4), 7): 1, ((6, 5), 11): 1, ((1, 6), 7): 1, ((7, 8), 15): 1, ((3, 1), 4): 1, ((4, 0), 3): 1, ((2, 8), 10): 1, ((7, 2), 9): 1, ((6, 8), 14): 1, ((8, 0), 6): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.66
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (if0 $0 0 (decr0 $1)) (incr $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 17s
------------------------------
Epoch 22/99 (max_len=3, data=4405)
Train acc: 60.14 (abduce 98.77)
Hit samples:  4351  Ave length:  2.54
Symbols:  13 Counter({8: 1386, 13: 1162, 4: 1064, 10: 803, 11: 793, 0: 791, 3: 789, 7: 775, 1: 764, 2: 729, 6: 715, 5: 661, 12: 621})
Dep:  Counter({(1, -1, 1): 3351, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((4, 2), 8): 3, ((2, 0), 0): 3, ((9, 2), 18): 2, ((8, 3), 24): 2, ((2, 7), 14): 2, ((8, 9), 72): 2, ((8, 2), 16): 2, ((8, 0), 0): 2, ((7, 2), 14): 2, ((5, 8), 40): 2, ((8, 7), 56): 2, ((7, 0), 0): 2, ((1, 3), 3): 2, ((6, 7), 42): 2, ((2, 9), 18): 2, ((6, 0), 0): 2, ((1, 7), 7): 2, ((6, 6), 36): 2, ((0, 0), 0): 2, ((3, 0), 0): 2, ((5, 0), 0): 2, ((6, 8), 18): 2, ((4, 9), 36): 2, ((4, 0), 0): 1, ((2, 1), 3): 1, ((2, 2), 4): 1, ((0, 2), 2): 1, ((4, 7), 28): 1, ((0, 9), 9): 1, ((5, 7), 35): 1, ((7, 7), 49): 1, ((9, 9), 81): 1, ((3, 2), 6): 1, ((3, 5), 9): 1, ((9, 6), 54): 1, ((9, 1), 81): 1, ((1, 6), 6): 1, ((2, 4), 6): 1, ((9, 5), 45): 1, ((5, 9), 45): 1, ((5, 3), 36): 1, ((3, 8), 40): 1, ((7, 5), 35): 1, ((1, 0), 0): 1, ((3, 9), 27): 1, ((9, 0), 0): 1, ((6, 5), 30): 1, ((4, 6), 24): 1, ((1, 4), 4): 1, ((9, 7), 63): 1, ((8, 6), 48): 1, ((7, 9), 63): 1, ((4, 8), 32): 1, ((6, 3), 24): 1, ((4, 4), 16): 1, ((7, 1), 63): 1, ((1, 1), 1): 1, ((7, 3), 15): 1, ((2, 6), 8): 1, ((2, 5), 10): 1, ((3, 3), 27): 1, ((6, 9), 54): 1, ((5, 1), 9): 1, ((5, 6), 30): 1, ((3, 6), 18): 1, ((0, 8), 8): 1, ((0, 4), 4): 1, ((7, 8), 56): 1, ((8, 8), 64): 1, ((2, 8), 56): 1, ((1, 8), 8): 1, ((8, 5), 40): 1, ((4, 5), 20): 1, ((2, 3), 56): 1, ((7, 6), 42): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((9, 4), 13): 2, ((4, 3), 7): 2, ((8, 8), 16): 2, ((6, 5), 11): 2, ((1, 2), 3): 2, ((7, 3), 10): 2, ((1, 6), 7): 2, ((2, 9), 11): 2, ((1, 8), 9): 2, ((7, 8), 15): 2, ((2, 4), 6): 2, ((0, 2), 2): 2, ((1, 3), 4): 2, ((8, 1), 9): 2, ((9, 2), 11): 2, ((4, 1), 5): 2, ((7, 9), 16): 2, ((1, 4), 5): 2, ((5, 4), 9): 2, ((4, 7), 11): 2, ((2, 2), 4): 2, ((0, 4), 4): 2, ((3, 7), 10): 2, ((8, 4), 12): 2, ((4, 6), 10): 2, ((2, 1), 3): 2, ((0, 7), 7): 1, ((9, 6), 15): 1, ((9, 8), 17): 1, ((3, 9), 12): 1, ((6, 2), 8): 1, ((8, 3), 11): 1, ((5, 0), 1): 1, ((2, 8), 10): 1, ((0, 3), 3): 1, ((6, 3), 9): 1, ((0, 0), 0): 1, ((7, 1), 8): 1, ((5, 2), 7): 1, ((7, 2), 9): 1, ((6, 1), 7): 1, ((7, 6), 13): 1, ((8, 6), 14): 1, ((7, 7), 14): 1, ((0, 5), 5): 1, ((1, 9), 10): 1, ((9, 1), 10): 1, ((9, 9), 18): 1, ((3, 5), 8): 1, ((5, 5), 10): 1, ((6, 6), 12): 1, ((1, 7), 8): 1, ((5, 1), 6): 1, ((5, 6), 11): 1, ((2, 5), 7): 1, ((9, 5), 14): 1, ((0, 8), 8): 1, ((6, 4), 10): 1, ((2, 3), 5): 1, ((9, 0), 5): 1, ((8, 9), 17): 1, ((0, 9), 9): 1, ((4, 2), 6): 1, ((6, 9), 15): 1, ((5, 3), 8): 1, ((5, 9), 14): 1, ((9, 7), 16): 1, ((5, 8), 13): 1, ((3, 3), 6): 1, ((9, 3), 12): 1, ((8, 5), 13): 1, ((3, 6), 9): 1, ((2, 0), 1): 1, ((4, 0), 2): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.62
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (if0 $0 0 (decr0 $1)) (incr $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 20s
------------------------------
Epoch 23/99 (max_len=3, data=4405)
Train acc: 60.58 (abduce 98.89)
Hit samples:  4356  Ave length:  2.54
Symbols:  13 Counter({8: 1397, 13: 1142, 4: 1059, 10: 817, 11: 817, 0: 791, 3: 770, 7: 760, 1: 752, 2: 745, 6: 714, 5: 663, 12: 641})
Dep:  Counter({(1, -1, 1): 3356, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((9, 2), 18): 3, ((8, 6), 48): 2, ((1, 5), 5): 2, ((5, 2), 10): 2, ((1, 1), 1): 2, ((1, 8), 8): 2, ((2, 2), 4): 2, ((6, 4), 24): 2, ((3, 2), 6): 2, ((8, 2), 16): 2, ((2, 0), 0): 2, ((9, 0), 0): 2, ((6, 0), 0): 2, ((9, 6), 54): 2, ((9, 7), 63): 2, ((1, 3), 3): 2, ((8, 0), 0): 2, ((7, 6), 42): 2, ((0, 0), 0): 2, ((2, 9), 18): 2, ((7, 4), 28): 2, ((7, 2), 14): 2, ((4, 2), 8): 2, ((5, 4), 12): 1, ((3, 5), 9): 1, ((6, 6), 36): 1, ((4, 1), 7): 1, ((9, 1), 4): 1, ((5, 9), 45): 1, ((1, 4), 4): 1, ((3, 4), 8): 1, ((9, 9), 81): 1, ((5, 5), 35): 1, ((2, 6), 8): 1, ((3, 1), 5): 1, ((0, 9), 9): 1, ((2, 5), 10): 1, ((5, 8), 16): 1, ((1, 7), 7): 1, ((0, 6), 36): 1, ((8, 8), 64): 1, ((3, 6), 42): 1, ((4, 8), 32): 1, ((0, 1), 1): 1, ((6, 8), 48): 1, ((9, 8), 72): 1, ((6, 5), 30): 1, ((1, 0), 0): 1, ((5, 6), 30): 1, ((5, 7), 35): 1, ((4, 0), 0): 1, ((3, 0), 0): 1, ((6, 9), 54): 1, ((4, 5), 20): 1, ((2, 4), 6): 1, ((8, 9), 72): 1, ((2, 3), 5): 1, ((8, 4), 32): 1, ((7, 0), 0): 1, ((8, 1), 24): 1, ((0, 3), 3): 1, ((9, 4), 20): 1, ((8, 7), 56): 1, ((5, 0), 0): 1, ((8, 3), 24): 1, ((3, 7), 21): 1, ((6, 3), 24): 1, ((7, 5), 35): 1, ((9, 5), 45): 1, ((3, 9), 27): 1, ((7, 3), 15): 1, ((7, 8), 56): 1, ((2, 1), 3): 1, ((1, 2), 2): 1, ((2, 8), 10): 1, ((7, 7), 49): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((4, 1), 5): 2, ((5, 5), 10): 2, ((7, 4), 11): 2, ((2, 8), 10): 2, ((9, 6), 15): 2, ((8, 1), 9): 2, ((9, 7), 16): 2, ((8, 7), 15): 2, ((8, 3), 11): 2, ((3, 6), 9): 2, ((6, 2), 8): 2, ((5, 2), 7): 2, ((5, 6), 11): 2, ((7, 5), 12): 2, ((6, 5), 11): 2, ((0, 7), 7): 2, ((2, 1), 3): 2, ((4, 8), 12): 2, ((7, 7), 14): 2, ((3, 3), 6): 2, ((9, 5), 14): 2, ((1, 1), 2): 2, ((3, 1), 4): 2, ((0, 5), 5): 2, ((1, 4), 5): 1, ((1, 0), 1): 1, ((2, 4), 6): 1, ((6, 7), 13): 1, ((8, 5), 13): 1, ((5, 4), 9): 1, ((0, 4), 4): 1, ((6, 4), 10): 1, ((1, 2), 3): 1, ((3, 7), 10): 1, ((0, 3), 3): 1, ((6, 6), 12): 1, ((4, 4), 8): 1, ((0, 9), 9): 1, ((5, 8), 13): 1, ((3, 9), 12): 1, ((5, 7), 12): 1, ((2, 6), 8): 1, ((8, 0), 4): 1, ((3, 2), 5): 1, ((4, 6), 10): 1, ((1, 5), 6): 1, ((1, 9), 10): 1, ((7, 9), 16): 1, ((3, 8), 11): 1, ((1, 3), 4): 1, ((9, 2), 11): 1, ((0, 2), 2): 1, ((9, 3), 12): 1, ((7, 6), 13): 1, ((0, 1), 1): 1, ((0, 6), 6): 1, ((7, 1), 8): 1, ((9, 4), 13): 1, ((7, 8), 15): 1, ((6, 9), 15): 1, ((2, 3), 5): 1, ((7, 3), 10): 1, ((9, 8), 17): 1, ((0, 0), 0): 1, ((9, 1), 10): 1, ((6, 1), 7): 1, ((8, 9), 17): 1, ((5, 3), 8): 1, ((2, 5), 7): 1, ((1, 6), 7): 1, ((4, 2), 6): 1, ((5, 9), 14): 1, ((8, 2), 10): 1, ((2, 2), 4): 1, ((3, 4), 7): 1, ((8, 6), 14): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.65
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (if0 $0 0 (decr0 $1)) (incr $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 19s
------------------------------
Epoch 24/99 (max_len=3, data=4405)
Train acc: 59.71 (abduce 98.89)
Hit samples:  4356  Ave length:  2.54
Symbols:  14 Counter({8: 1405, 13: 1140, 4: 1067, 11: 816, 10: 810, 0: 801, 7: 782, 3: 779, 1: 764, 2: 723, 6: 712, 5: 648, 12: 620, 9: 1})
Dep:  Counter({(1, -1, 1): 3356, (-1,): 1000})
Learn perception with 3702 samples for 500 iterations, take 32 sec.
result accuracy by length:
1 ( 3%) 86.00
3 (12%) 45.38
5 (55%) 27.58
7 (29%) 17.32
result accuracy by symbol:
* (45%) 18.03
+ (45%) 26.48
- (45%) 16.87
/ (42%) 34.67
0 (23%) 44.06
1 (28%) 27.83
2 (29%) 24.97
3 (28%) 22.86
4 (28%) 23.85
5 (28%) 23.14
6 (28%) 22.94
7 (28%) 23.93
8 (27%) 24.26
9 (28%) 23.08
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 70.00
4 ( 0%) 70.00
5 ( 0%) 70.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%) 23.08
1 ( 9%) 72.90
2 ( 5%) 34.03
3 ( 5%) 21.47
4 ( 4%) 23.18
5 ( 4%) 29.03
6 ( 4%) 32.14
7 ( 4%) 31.13
8 ( 4%) 34.93
9 ( 4%) 40.00
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 32.01
unseen (41%) 23.52
val (Perception Acc=10.35, Syntax Acc=100.00, Result Acc=28.47)
Epoch time: 0m 38s
------------------------------
Epoch 25/99 (max_len=3, data=4405)
Train acc: 64.22 (abduce 99.21)
Hit samples:  4370  Ave length:  2.54
Symbols:  13 Counter({8: 1405, 13: 1127, 4: 1060, 11: 839, 10: 838, 0: 802, 3: 771, 6: 750, 1: 750, 7: 747, 2: 739, 5: 678, 12: 604})
Dep:  Counter({(1, -1, 1): 3370, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 5), 5): 3, ((1, 0), 0): 3, ((1, 6), 6): 3, ((9, 0), 0): 3, ((2, 8), 10): 2, ((5, 8), 16): 2, ((9, 5), 45): 2, ((2, 0), 0): 2, ((5, 0), 0): 2, ((1, 3), 3): 2, ((8, 2), 16): 2, ((4, 6), 12): 2, ((9, 2), 18): 2, ((0, 0), 0): 2, ((7, 5), 35): 2, ((8, 9), 72): 2, ((2, 2), 4): 2, ((6, 0), 0): 2, ((1, 8), 8): 2, ((4, 0), 0): 2, ((6, 5), 15): 2, ((4, 8), 32): 1, ((9, 6), 54): 1, ((1, 4), 4): 1, ((7, 2), 14): 1, ((7, 6), 18): 1, ((8, 4), 32): 1, ((4, 5), 20): 1, ((6, 4), 24): 1, ((1, 1), 1): 1, ((1, 7), 7): 1, ((1, 2), 2): 1, ((3, 9), 27): 1, ((3, 0), 0): 1, ((2, 4), 6): 1, ((4, 4), 28): 1, ((4, 3), 36): 1, ((6, 9), 54): 1, ((1, 9), 9): 1, ((3, 4), 8): 1, ((6, 2), 12): 1, ((0, 6), 36): 1, ((2, 3), 5): 1, ((5, 4), 12): 1, ((9, 3), 27): 1, ((8, 7), 21): 1, ((6, 1), 54): 1, ((8, 3), 24): 1, ((3, 6), 42): 1, ((8, 0), 0): 1, ((3, 3), 9): 1, ((0, 9), 9): 1, ((5, 9), 45): 1, ((5, 2), 10): 1, ((5, 7), 42): 1, ((6, 8), 18): 1, ((8, 1), 64): 1, ((0, 7), 7): 1, ((8, 8), 64): 1, ((4, 2), 8): 1, ((5, 6), 30): 1, ((8, 6), 48): 1, ((0, 8), 8): 1, ((7, 3), 15): 1, ((4, 9), 36): 1, ((4, 7), 28): 1, ((8, 5), 40): 1, ((0, 4), 36): 1, ((0, 2), 2): 1, ((6, 3), 18): 1, ((2, 1), 3): 1, ((4, 1), 35): 1, ((9, 9), 81): 1, ((9, 7), 63): 1, ((5, 5), 20): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((3, 1), 4): 2, ((2, 4), 6): 2, ((1, 4), 5): 2, ((9, 3), 12): 2, ((0, 6), 6): 2, ((1, 1), 2): 2, ((1, 7), 8): 2, ((4, 4), 8): 2, ((0, 1), 1): 2, ((6, 9), 15): 2, ((8, 7), 15): 2, ((2, 9), 11): 2, ((1, 6), 7): 2, ((8, 5), 13): 2, ((5, 6), 11): 2, ((5, 1), 6): 2, ((7, 1), 8): 2, ((4, 8), 12): 2, ((2, 2), 4): 2, ((1, 5), 6): 2, ((0, 4), 4): 2, ((7, 5), 12): 2, ((9, 4), 13): 2, ((2, 6), 8): 2, ((1, 0), 1): 2, ((0, 3), 3): 2, ((0, 7), 7): 1, ((4, 2), 6): 1, ((6, 2), 8): 1, ((6, 3), 9): 1, ((3, 4), 7): 1, ((7, 7), 14): 1, ((0, 8), 8): 1, ((4, 5), 9): 1, ((7, 3), 10): 1, ((6, 5), 11): 1, ((8, 8), 16): 1, ((3, 7), 10): 1, ((3, 3), 6): 1, ((5, 8), 13): 1, ((3, 5), 8): 1, ((2, 1), 3): 1, ((2, 7), 9): 1, ((4, 6), 10): 1, ((7, 8), 15): 1, ((7, 9), 16): 1, ((6, 7), 13): 1, ((4, 1), 5): 1, ((8, 9), 17): 1, ((6, 6), 12): 1, ((5, 2), 7): 1, ((9, 8), 17): 1, ((5, 3), 8): 1, ((9, 9), 18): 1, ((1, 8), 9): 1, ((9, 1), 10): 1, ((5, 4), 9): 1, ((4, 7), 11): 1, ((0, 9), 9): 1, ((2, 0), 1): 1, ((8, 3), 11): 1, ((2, 3), 5): 1, ((4, 9), 13): 1, ((5, 5), 10): 1, ((1, 3), 4): 1, ((1, 9), 10): 1, ((9, 7), 16): 1, ((0, 2), 2): 1, ((4, 3), 7): 1, ((2, 8), 10): 1, ((2, 5), 7): 1, ((0, 5), 5): 1, ((7, 2), 9): 1, ((8, 1), 9): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.74
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 17s
------------------------------
Epoch 26/99 (max_len=3, data=4405)
Train acc: 66.09 (abduce 99.36)
Hit samples:  4377  Ave length:  2.54
Symbols:  13 Counter({8: 1410, 13: 1143, 4: 1049, 11: 844, 10: 824, 0: 818, 3: 791, 7: 767, 1: 748, 2: 746, 6: 736, 5: 661, 12: 594})
Dep:  Counter({(1, -1, 1): 3377, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 6), 6): 3, ((1, 5), 5): 3, ((9, 0), 0): 3, ((6, 4), 24): 2, ((3, 0), 0): 2, ((1, 8), 8): 2, ((1, 0), 0): 2, ((2, 9), 18): 2, ((9, 2), 18): 2, ((4, 0), 0): 2, ((8, 4), 32): 2, ((3, 2), 6): 2, ((8, 2), 16): 2, ((9, 8), 72): 2, ((6, 2), 12): 2, ((2, 0), 0): 2, ((7, 4), 16): 2, ((7, 8), 56): 1, ((1, 9), 9): 1, ((0, 3), 3): 1, ((2, 5), 7): 1, ((5, 5), 25): 1, ((8, 9), 72): 1, ((8, 1), 6): 1, ((2, 4), 6): 1, ((0, 6), 48): 1, ((6, 0), 0): 1, ((4, 3), 36): 1, ((8, 8), 64): 1, ((3, 1), 5): 1, ((1, 1), 1): 1, ((2, 3), 5): 1, ((2, 1), 3): 1, ((0, 7), 7): 1, ((5, 7), 42): 1, ((5, 1), 9): 1, ((0, 1), 1): 1, ((7, 5), 35): 1, ((4, 6), 12): 1, ((5, 2), 10): 1, ((5, 8), 16): 1, ((4, 8), 32): 1, ((8, 6), 48): 1, ((6, 9), 54): 1, ((2, 6), 8): 1, ((3, 4), 8): 1, ((5, 0), 0): 1, ((5, 6), 30): 1, ((6, 7), 42): 1, ((4, 7), 28): 1, ((3, 7), 24): 1, ((4, 2), 8): 1, ((1, 3), 3): 1, ((6, 6), 36): 1, ((9, 4), 20): 1, ((3, 8), 12): 1, ((0, 9), 9): 1, ((0, 5), 45): 1, ((7, 1), 35): 1, ((7, 6), 42): 1, ((0, 8), 8): 1, ((8, 5), 40): 1, ((1, 4), 4): 1, ((0, 4), 4): 1, ((6, 5), 30): 1, ((1, 7), 7): 1, ((4, 1), 35): 1, ((4, 4), 10): 1, ((3, 9), 27): 1, ((3, 3), 21): 1, ((7, 2), 14): 1, ((3, 5), 9): 1, ((2, 7), 14): 1, ((7, 3), 15): 1, ((0, 2), 2): 1, ((4, 9), 36): 1, ((2, 2), 4): 1, ((6, 1), 54): 1, ((0, 0), 0): 1, ((4, 5), 20): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((6, 4), 10): 2, ((7, 4), 11): 2, ((7, 8), 15): 2, ((6, 1), 7): 2, ((4, 8), 12): 2, ((9, 1), 10): 2, ((8, 9), 17): 2, ((4, 7), 11): 2, ((7, 5), 12): 2, ((1, 9), 10): 2, ((3, 6), 9): 2, ((1, 3), 4): 2, ((0, 6), 6): 2, ((4, 5), 9): 2, ((8, 8), 16): 2, ((9, 6), 15): 2, ((3, 9), 12): 2, ((9, 9), 18): 2, ((4, 3), 7): 2, ((6, 3), 9): 2, ((2, 6), 8): 2, ((2, 2), 4): 2, ((5, 4), 9): 2, ((8, 2), 10): 2, ((6, 9), 15): 2, ((3, 1), 4): 2, ((7, 1), 8): 2, ((8, 6), 14): 2, ((9, 8), 17): 1, ((8, 3), 11): 1, ((0, 3), 3): 1, ((5, 8), 13): 1, ((8, 4), 12): 1, ((3, 7), 10): 1, ((0, 4), 4): 1, ((0, 2), 2): 1, ((6, 8), 14): 1, ((4, 4), 8): 1, ((7, 7), 14): 1, ((2, 1), 3): 1, ((1, 7), 8): 1, ((0, 7), 7): 1, ((5, 1), 6): 1, ((1, 8), 9): 1, ((5, 2), 7): 1, ((4, 9), 13): 1, ((7, 2), 9): 1, ((4, 2), 6): 1, ((7, 3), 10): 1, ((9, 3), 12): 1, ((9, 4), 13): 1, ((2, 4), 6): 1, ((1, 1), 2): 1, ((0, 8), 8): 1, ((6, 7), 13): 1, ((2, 8), 10): 1, ((9, 5), 14): 1, ((8, 7), 15): 1, ((1, 5), 6): 1, ((8, 5), 13): 1, ((7, 9), 16): 1, ((4, 6), 10): 1, ((2, 5), 7): 1, ((3, 5), 8): 1, ((0, 5), 5): 1, ((7, 6), 13): 1, ((2, 7), 9): 1, ((3, 3), 6): 1, ((9, 0), 4): 1, ((9, 2), 11): 1, ((6, 6), 12): 1, ((5, 5), 10): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.69
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 15s
------------------------------
Epoch 27/99 (max_len=3, data=4405)
Train acc: 65.48 (abduce 99.39)
Hit samples:  4378  Ave length:  2.54
Symbols:  13 Counter({8: 1411, 13: 1145, 4: 1064, 11: 825, 10: 822, 0: 803, 3: 789, 7: 766, 6: 751, 1: 749, 2: 734, 5: 658, 12: 617})
Dep:  Counter({(1, -1, 1): 3378, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 5), 5): 3, ((8, 0), 0): 3, ((2, 0), 0): 3, ((1, 0), 0): 3, ((1, 8), 8): 3, ((9, 0), 0): 3, ((1, 2), 2): 2, ((2, 2), 4): 2, ((1, 9), 9): 2, ((8, 7), 21): 2, ((6, 4), 24): 2, ((3, 2), 6): 2, ((5, 2), 10): 2, ((7, 0), 0): 2, ((5, 8), 16): 2, ((6, 2), 12): 2, ((4, 0), 0): 2, ((9, 8), 24): 2, ((9, 2), 18): 2, ((9, 1), 14): 1, ((6, 0), 0): 1, ((6, 5), 30): 1, ((5, 9), 45): 1, ((9, 7), 63): 1, ((4, 6), 12): 1, ((5, 3), 45): 1, ((8, 2), 16): 1, ((7, 7), 49): 1, ((7, 5), 35): 1, ((3, 9), 27): 1, ((6, 3), 54): 1, ((5, 0), 0): 1, ((2, 6), 8): 1, ((2, 8), 10): 1, ((4, 3), 9): 1, ((6, 7), 42): 1, ((9, 5), 45): 1, ((8, 4), 32): 1, ((0, 3), 3): 1, ((0, 0), 0): 1, ((1, 7), 7): 1, ((9, 6), 54): 1, ((1, 6), 6): 1, ((4, 2), 8): 1, ((7, 4), 16): 1, ((3, 4), 8): 1, ((7, 2), 14): 1, ((5, 1), 9): 1, ((8, 8), 64): 1, ((3, 5), 9): 1, ((1, 3), 3): 1, ((8, 3), 24): 1, ((0, 2), 2): 1, ((0, 5), 45): 1, ((9, 3), 27): 1, ((2, 1), 3): 1, ((8, 9), 72): 1, ((4, 9), 36): 1, ((3, 0), 0): 1, ((8, 5), 40): 1, ((1, 4), 4): 1, ((5, 4), 12): 1, ((9, 9), 81): 1, ((0, 7), 7): 1, ((4, 4), 10): 1, ((2, 7), 14): 1, ((4, 7), 28): 1, ((7, 6), 42): 1, ((5, 5), 25): 1, ((0, 1), 1): 1, ((6, 6), 36): 1, ((7, 9), 63): 1, ((3, 7), 11): 1, ((2, 4), 6): 1, ((4, 8), 32): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((2, 7), 9): 2, ((6, 5), 11): 2, ((8, 5), 13): 2, ((2, 3), 5): 2, ((6, 7), 13): 2, ((1, 8), 9): 2, ((6, 9), 15): 2, ((6, 2), 8): 2, ((4, 9), 13): 2, ((6, 4), 10): 2, ((9, 3), 12): 2, ((2, 8), 10): 2, ((0, 1), 1): 2, ((1, 9), 10): 2, ((4, 1), 5): 2, ((3, 9), 12): 2, ((7, 6), 13): 2, ((9, 9), 18): 2, ((4, 5), 9): 2, ((3, 6), 9): 2, ((8, 7), 15): 2, ((1, 5), 6): 2, ((5, 4), 9): 2, ((8, 2), 10): 2, ((1, 6), 7): 2, ((4, 7), 11): 1, ((7, 1), 8): 1, ((0, 3), 3): 1, ((8, 3), 11): 1, ((3, 4), 7): 1, ((2, 1), 3): 1, ((4, 0), 1): 1, ((5, 8), 13): 1, ((5, 1), 6): 1, ((1, 0), 1): 1, ((7, 8), 15): 1, ((3, 8), 11): 1, ((5, 7), 12): 1, ((9, 1), 10): 1, ((9, 2), 11): 1, ((2, 6), 8): 1, ((8, 8), 16): 1, ((5, 2), 7): 1, ((1, 2), 3): 1, ((9, 7), 16): 1, ((8, 6), 14): 1, ((8, 9), 17): 1, ((6, 3), 9): 1, ((2, 9), 11): 1, ((1, 4), 5): 1, ((5, 3), 8): 1, ((5, 9), 14): 1, ((8, 4), 12): 1, ((0, 5), 5): 1, ((9, 8), 17): 1, ((9, 6), 15): 1, ((4, 4), 8): 1, ((9, 5), 14): 1, ((7, 7), 14): 1, ((0, 2), 2): 1, ((7, 2), 9): 1, ((3, 1), 4): 1, ((7, 9), 16): 1, ((2, 5), 7): 1, ((7, 4), 11): 1, ((9, 0), 4): 1, ((3, 2), 5): 1, ((0, 8), 8): 1, ((0, 0), 0): 1, ((1, 7), 8): 1, ((0, 4), 4): 1, ((0, 6), 6): 1, ((2, 4), 6): 1, ((2, 0), 1): 1, ((8, 1), 9): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.71
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 16s
------------------------------
Epoch 28/99 (max_len=3, data=4405)
Train acc: 64.10 (abduce 99.25)
Hit samples:  4372  Ave length:  2.54
Symbols:  13 Counter({8: 1406, 13: 1145, 4: 1034, 11: 837, 10: 821, 0: 817, 3: 770, 7: 769, 2: 766, 1: 760, 6: 734, 5: 654, 12: 603})
Dep:  Counter({(1, -1, 1): 3372, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((2, 0), 0): 3, ((1, 8), 8): 3, ((9, 2), 18): 3, ((6, 0), 0): 3, ((8, 5), 40): 2, ((1, 4), 4): 2, ((4, 2), 8): 2, ((6, 2), 12): 2, ((1, 2), 2): 2, ((8, 7), 56): 2, ((2, 2), 4): 2, ((1, 0), 0): 2, ((8, 2), 16): 2, ((5, 6), 30): 2, ((9, 8), 24): 2, ((7, 2), 14): 2, ((9, 6), 54): 2, ((0, 0), 0): 2, ((7, 4), 16): 2, ((7, 0), 0): 2, ((5, 8), 40): 2, ((7, 6), 42): 2, ((1, 1), 1): 2, ((2, 8), 10): 2, ((3, 0), 0): 1, ((3, 4), 8): 1, ((6, 5), 30): 1, ((6, 8), 18): 1, ((0, 1), 1): 1, ((2, 6), 8): 1, ((3, 8), 12): 1, ((8, 0), 0): 1, ((1, 6), 6): 1, ((5, 3), 45): 1, ((8, 9), 72): 1, ((1, 5), 5): 1, ((3, 1), 5): 1, ((4, 6), 12): 1, ((9, 9), 81): 1, ((2, 4), 6): 1, ((5, 5), 25): 1, ((0, 6), 48): 1, ((1, 7), 7): 1, ((6, 1), 42): 1, ((5, 7), 42): 1, ((8, 4), 32): 1, ((6, 9), 54): 1, ((3, 2), 6): 1, ((9, 7), 63): 1, ((3, 9), 27): 1, ((6, 4), 24): 1, ((7, 8), 56): 1, ((6, 6), 36): 1, ((9, 1), 16): 1, ((3, 5), 9): 1, ((4, 8), 32): 1, ((2, 3), 5): 1, ((0, 2), 2): 1, ((4, 5), 20): 1, ((4, 1), 35): 1, ((0, 8), 8): 1, ((3, 3), 9): 1, ((5, 4), 12): 1, ((5, 0), 0): 1, ((1, 9), 9): 1, ((3, 7), 27): 1, ((9, 5), 45): 1, ((4, 9), 36): 1, ((0, 5), 45): 1, ((4, 3), 9): 1, ((9, 3), 27): 1, ((6, 7), 42): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((4, 3), 7): 2, ((9, 5), 14): 2, ((0, 5), 5): 2, ((1, 6), 7): 2, ((3, 1), 4): 2, ((6, 2), 8): 2, ((4, 1), 5): 2, ((8, 9), 17): 2, ((9, 8), 17): 2, ((9, 1), 10): 2, ((4, 6), 10): 2, ((5, 6), 11): 2, ((9, 7), 16): 2, ((7, 9), 16): 2, ((7, 4), 11): 2, ((1, 7), 8): 2, ((6, 6), 12): 2, ((7, 7), 14): 2, ((6, 3), 9): 2, ((2, 6), 8): 2, ((3, 9), 12): 2, ((1, 3), 4): 2, ((0, 6), 6): 2, ((9, 6), 15): 2, ((6, 4), 10): 2, ((4, 9), 13): 2, ((1, 8), 9): 2, ((4, 4), 8): 1, ((7, 5), 12): 1, ((8, 1), 9): 1, ((5, 3), 8): 1, ((3, 6), 9): 1, ((7, 6), 13): 1, ((6, 9), 15): 1, ((6, 5), 11): 1, ((1, 0), 1): 1, ((9, 4), 13): 1, ((0, 1), 1): 1, ((9, 9), 18): 1, ((8, 6), 14): 1, ((0, 3), 3): 1, ((3, 7), 10): 1, ((6, 1), 7): 1, ((1, 5), 6): 1, ((0, 9), 9): 1, ((8, 3), 11): 1, ((2, 3), 5): 1, ((1, 2), 3): 1, ((0, 8), 8): 1, ((4, 5), 9): 1, ((4, 2), 6): 1, ((0, 7), 7): 1, ((8, 7), 15): 1, ((5, 1), 6): 1, ((3, 3), 6): 1, ((7, 2), 9): 1, ((5, 0), 1): 1, ((3, 4), 7): 1, ((7, 8), 15): 1, ((0, 2), 2): 1, ((5, 9), 14): 1, ((2, 5), 7): 1, ((5, 2), 7): 1, ((2, 0), 1): 1, ((5, 4), 9): 1, ((7, 0), 49): 1, ((8, 5), 13): 1, ((8, 4), 12): 1, ((2, 2), 4): 1, ((1, 9), 10): 1, ((5, 7), 12): 1, ((7, 3), 10): 1, ((4, 8), 12): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.68
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 16s
------------------------------
Epoch 29/99 (max_len=3, data=4405)
Train acc: 64.53 (abduce 99.23)
Hit samples:  4371  Ave length:  2.54
Symbols:  14 Counter({8: 1408, 13: 1136, 4: 1065, 11: 852, 10: 826, 3: 801, 0: 796, 6: 747, 1: 747, 7: 740, 2: 721, 5: 659, 12: 614, 9: 1})
Dep:  Counter({(1, -1, 1): 3371, (-1,): 1000})
Learn perception with 3741 samples for 500 iterations, take 28 sec.
result accuracy by length:
1 ( 3%) 84.00
3 (12%) 44.87
5 (55%) 27.02
7 (29%) 18.05
result accuracy by symbol:
* (45%) 17.96
+ (45%) 26.81
- (45%) 16.05
/ (42%) 34.67
0 (23%) 42.89
1 (28%) 28.80
2 (29%) 23.70
3 (28%) 23.41
4 (28%) 23.96
5 (28%) 23.14
6 (28%) 23.05
7 (28%) 23.93
8 (27%) 23.92
9 (28%) 22.32
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 70.00
4 ( 0%) 70.00
5 ( 0%) 80.00
6 ( 0%) 80.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 80.00
result accuracy by res:
0 (24%) 22.31
1 ( 9%) 73.23
2 ( 5%) 34.55
3 ( 5%) 22.70
4 ( 4%) 25.17
5 ( 4%) 27.10
6 ( 4%) 31.43
7 ( 4%) 31.79
8 ( 4%) 34.25
9 ( 4%) 41.43
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 32.06
unseen (41%) 22.92
val (Perception Acc=10.20, Syntax Acc=100.00, Result Acc=28.26)
Epoch time: 0m 33s
------------------------------
Epoch 30/99 (max_len=3, data=4405)
Train acc: 67.09 (abduce 99.43)
Hit samples:  4380  Ave length:  2.54
Symbols:  14 Counter({8: 1411, 13: 1136, 4: 1049, 11: 874, 10: 832, 0: 797, 3: 788, 7: 756, 1: 753, 6: 737, 2: 712, 5: 662, 12: 632, 9: 1})
Dep:  Counter({(1, -1, 1): 3380, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 0), 0): 3, ((4, 2), 8): 3, ((1, 8), 8): 3, ((6, 0), 0): 3, ((2, 0), 0): 3, ((8, 2), 16): 3, ((1, 6), 6): 2, ((9, 0), 0): 2, ((3, 2), 6): 2, ((9, 2), 18): 2, ((6, 8), 18): 2, ((5, 6), 30): 2, ((5, 8), 16): 2, ((1, 3), 3): 2, ((6, 5), 30): 2, ((7, 6), 18): 2, ((5, 2), 10): 2, ((8, 0), 0): 2, ((1, 2), 2): 2, ((2, 2), 4): 1, ((7, 7), 49): 1, ((3, 5), 9): 1, ((7, 4), 16): 1, ((6, 2), 12): 1, ((9, 9), 81): 1, ((5, 0), 0): 1, ((0, 0), 0): 1, ((2, 8), 10): 1, ((2, 5), 7): 1, ((6, 3), 18): 1, ((5, 1), 9): 1, ((9, 7), 63): 1, ((5, 4), 12): 1, ((6, 4), 24): 1, ((2, 3), 56): 1, ((7, 0), 0): 1, ((7, 5), 35): 1, ((1, 1), 1): 1, ((2, 4), 6): 1, ((4, 7), 28): 1, ((9, 3), 27): 1, ((6, 7), 42): 1, ((7, 9), 63): 1, ((9, 6), 54): 1, ((5, 7), 35): 1, ((9, 1), 81): 1, ((2, 6), 8): 1, ((4, 5), 20): 1, ((8, 6), 48): 1, ((5, 3), 45): 1, ((2, 7), 14): 1, ((6, 1), 54): 1, ((7, 3), 15): 1, ((0, 5), 5): 1, ((6, 9), 54): 1, ((1, 9), 9): 1, ((8, 3), 24): 1, ((8, 5), 40): 1, ((8, 9), 72): 1, ((4, 0), 0): 1, ((8, 7), 56): 1, ((9, 5), 45): 1, ((0, 6), 36): 1, ((0, 3), 3): 1, ((7, 8), 56): 1, ((8, 1), 64): 1, ((0, 4), 4): 1, ((0, 2), 2): 1, ((4, 4), 10): 1, ((6, 6), 36): 1, ((7, 2), 14): 1, ((3, 0), 0): 1, ((0, 9), 9): 1, ((8, 4), 32): 1, ((1, 5), 5): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((8, 8), 16): 2, ((3, 8), 11): 2, ((6, 9), 15): 2, ((5, 4), 9): 2, ((8, 7), 15): 2, ((5, 2), 7): 2, ((8, 6), 14): 2, ((5, 1), 6): 2, ((7, 1), 8): 2, ((5, 6), 11): 2, ((9, 8), 17): 2, ((9, 5), 14): 2, ((7, 3), 10): 2, ((3, 6), 9): 2, ((2, 3), 5): 2, ((8, 9), 17): 2, ((9, 1), 10): 2, ((6, 7), 13): 2, ((1, 6), 7): 2, ((3, 3), 6): 2, ((1, 1), 2): 2, ((2, 7), 9): 2, ((2, 1), 3): 2, ((4, 5), 9): 1, ((1, 0), 1): 1, ((8, 4), 12): 1, ((1, 7), 8): 1, ((6, 5), 11): 1, ((2, 8), 10): 1, ((2, 2), 4): 1, ((0, 3), 3): 1, ((1, 9), 10): 1, ((1, 3), 4): 1, ((9, 6), 15): 1, ((2, 9), 11): 1, ((5, 8), 13): 1, ((1, 4), 5): 1, ((9, 3), 12): 1, ((2, 0), 11): 1, ((7, 4), 11): 1, ((9, 2), 11): 1, ((6, 4), 10): 1, ((3, 1), 4): 1, ((1, 2), 3): 1, ((8, 3), 11): 1, ((2, 4), 6): 1, ((4, 2), 6): 1, ((0, 1), 1): 1, ((3, 2), 5): 1, ((4, 8), 12): 1, ((8, 1), 9): 1, ((7, 8), 15): 1, ((7, 6), 13): 1, ((9, 7), 16): 1, ((6, 2), 8): 1, ((3, 4), 7): 1, ((6, 8), 14): 1, ((6, 3), 9): 1, ((0, 6), 6): 1, ((4, 3), 7): 1, ((0, 7), 7): 1, ((0, 5), 5): 1, ((1, 8), 9): 1, ((2, 6), 8): 1, ((1, 5), 6): 1, ((3, 9), 12): 1, ((6, 1), 7): 1, ((7, 5), 12): 1, ((8, 5), 13): 1, ((0, 8), 8): 1, ((0, 4), 4): 1, ((4, 9), 13): 1, ((8, 2), 10): 1, ((6, 6), 12): 1, ((9, 4), 13): 1, ((5, 5), 10): 1, ((0, 2), 2): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.70
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 18s
------------------------------
Epoch 31/99 (max_len=3, data=4405)
Train acc: 66.43 (abduce 99.25)
Hit samples:  4372  Ave length:  2.54
Symbols:  13 Counter({8: 1415, 13: 1140, 4: 1047, 11: 853, 10: 817, 0: 799, 3: 793, 7: 762, 1: 757, 6: 743, 2: 714, 5: 654, 12: 622})
Dep:  Counter({(1, -1, 1): 3372, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((0, 0), 0): 4, ((2, 0), 0): 3, ((8, 2), 16): 3, ((6, 2), 12): 2, ((1, 0), 0): 2, ((5, 8), 16): 2, ((1, 2), 2): 2, ((6, 5), 30): 2, ((1, 6), 6): 2, ((8, 9), 72): 2, ((5, 2), 10): 2, ((9, 8), 72): 2, ((7, 8), 56): 2, ((1, 3), 3): 2, ((6, 8), 18): 2, ((7, 0), 0): 2, ((6, 0), 0): 2, ((3, 6), 42): 1, ((4, 3), 9): 1, ((9, 1), 4): 1, ((4, 0), 0): 1, ((3, 1), 5): 1, ((1, 9), 9): 1, ((7, 2), 14): 1, ((4, 5), 20): 1, ((9, 0), 0): 1, ((9, 7), 63): 1, ((7, 6), 18): 1, ((9, 9), 81): 1, ((0, 3), 3): 1, ((4, 9), 36): 1, ((6, 6), 36): 1, ((4, 7), 28): 1, ((6, 4), 24): 1, ((5, 6), 30): 1, ((0, 9), 9): 1, ((5, 0), 0): 1, ((9, 4), 20): 1, ((7, 7), 49): 1, ((6, 7), 42): 1, ((7, 3), 15): 1, ((4, 6), 12): 1, ((1, 7), 7): 1, ((1, 1), 1): 1, ((2, 6), 8): 1, ((2, 2), 4): 1, ((9, 5), 45): 1, ((2, 3), 5): 1, ((0, 2), 2): 1, ((0, 4), 4): 1, ((8, 8), 64): 1, ((7, 5), 35): 1, ((5, 9), 45): 1, ((8, 0), 0): 1, ((0, 5), 5): 1, ((3, 8), 12): 1, ((2, 8), 10): 1, ((3, 4), 8): 1, ((2, 9), 18): 1, ((4, 4), 10): 1, ((3, 5), 9): 1, ((6, 3), 24): 1, ((7, 4), 16): 1, ((0, 1), 1): 1, ((7, 9), 21): 1, ((8, 7), 56): 1, ((0, 7), 7): 1, ((3, 7), 11): 1, ((4, 8), 32): 1, ((5, 5), 25): 1, ((1, 5), 5): 1, ((8, 5), 40): 1, ((9, 3), 27): 1, ((1, 4), 4): 1, ((8, 1), 36): 1, ((2, 7), 14): 1, ((3, 9), 27): 1, ((9, 6), 54): 1, ((8, 3), 24): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((2, 2), 4): 3, ((5, 1), 6): 2, ((2, 9), 11): 2, ((9, 5), 14): 2, ((1, 7), 8): 2, ((2, 3), 5): 2, ((8, 7), 15): 2, ((3, 6), 9): 2, ((7, 8), 15): 2, ((2, 1), 3): 2, ((1, 9), 10): 2, ((4, 3), 7): 2, ((1, 2), 3): 2, ((4, 4), 8): 2, ((9, 8), 17): 2, ((1, 1), 2): 2, ((6, 9), 15): 2, ((1, 5), 6): 2, ((9, 6), 15): 2, ((4, 9), 13): 2, ((0, 3), 3): 2, ((4, 2), 6): 2, ((5, 3), 8): 2, ((1, 8), 9): 2, ((8, 5), 13): 2, ((4, 8), 12): 2, ((8, 4), 12): 2, ((0, 4), 4): 1, ((5, 2), 7): 1, ((6, 0), 1): 1, ((9, 0), 3): 1, ((6, 5), 11): 1, ((3, 3), 6): 1, ((5, 6), 11): 1, ((3, 4), 7): 1, ((3, 7), 10): 1, ((4, 6), 10): 1, ((4, 7), 11): 1, ((9, 2), 11): 1, ((5, 7), 12): 1, ((8, 6), 14): 1, ((0, 6), 6): 1, ((3, 1), 4): 1, ((1, 4), 5): 1, ((4, 1), 5): 1, ((5, 5), 10): 1, ((7, 4), 11): 1, ((1, 6), 7): 1, ((0, 5), 5): 1, ((7, 9), 16): 1, ((3, 5), 8): 1, ((5, 9), 14): 1, ((2, 4), 6): 1, ((1, 0), 1): 1, ((7, 2), 9): 1, ((0, 0), 0): 1, ((6, 6), 12): 1, ((7, 1), 8): 1, ((3, 8), 11): 1, ((8, 3), 11): 1, ((3, 9), 12): 1, ((9, 3), 12): 1, ((9, 9), 18): 1, ((3, 2), 5): 1, ((2, 8), 10): 1, ((0, 2), 2): 1, ((0, 9), 9): 1, ((8, 2), 10): 1, ((6, 4), 10): 1, ((6, 7), 13): 1, ((7, 7), 14): 1, ((6, 2), 8): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.71
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 20s
------------------------------
Epoch 32/99 (max_len=3, data=4405)
Train acc: 67.59 (abduce 99.46)
Hit samples:  4381  Ave length:  2.54
Symbols:  13 Counter({8: 1410, 13: 1136, 4: 1063, 11: 854, 10: 835, 0: 817, 3: 780, 7: 769, 1: 767, 6: 725, 2: 720, 5: 655, 12: 612})
Dep:  Counter({(1, -1, 1): 3381, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((4, 2), 8): 3, ((1, 8), 8): 3, ((1, 5), 5): 3, ((4, 0), 0): 2, ((1, 7), 7): 2, ((5, 8), 16): 2, ((9, 6), 54): 2, ((1, 4), 4): 2, ((7, 2), 14): 2, ((7, 0), 0): 2, ((1, 9), 9): 2, ((0, 0), 0): 2, ((9, 0), 0): 2, ((6, 8), 18): 2, ((8, 7), 21): 2, ((6, 0), 0): 2, ((7, 5), 35): 2, ((1, 2), 2): 2, ((8, 0), 0): 2, ((2, 6), 8): 2, ((7, 6), 42): 2, ((6, 2), 12): 2, ((6, 7), 42): 1, ((2, 7), 14): 1, ((4, 9), 36): 1, ((1, 0), 0): 1, ((2, 8), 10): 1, ((9, 8), 24): 1, ((5, 2), 10): 1, ((9, 2), 18): 1, ((2, 2), 4): 1, ((0, 4), 4): 1, ((2, 0), 0): 1, ((1, 1), 1): 1, ((7, 8), 56): 1, ((3, 5), 9): 1, ((0, 7), 7): 1, ((0, 9), 9): 1, ((5, 6), 30): 1, ((9, 7), 63): 1, ((7, 7), 49): 1, ((0, 5), 25): 1, ((4, 3), 9): 1, ((3, 3), 25): 1, ((9, 1), 12): 1, ((7, 9), 63): 1, ((8, 5), 40): 1, ((5, 1), 9): 1, ((3, 9), 27): 1, ((3, 4), 8): 1, ((3, 0), 0): 1, ((6, 4), 24): 1, ((6, 5), 30): 1, ((8, 9), 72): 1, ((0, 6), 30): 1, ((2, 3), 5): 1, ((1, 3), 3): 1, ((2, 1), 3): 1, ((7, 4), 16): 1, ((8, 3), 24): 1, ((1, 6), 6): 1, ((0, 1), 1): 1, ((6, 3), 32): 1, ((4, 8), 32): 1, ((8, 2), 16): 1, ((3, 7), 11): 1, ((5, 5), 25): 1, ((8, 1), 32): 1, ((4, 7), 28): 1, ((0, 8), 48): 1, ((4, 1), 35): 1, ((2, 5), 7): 1, ((9, 4), 20): 1, ((3, 8), 12): 1, ((4, 6), 12): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((4, 4), 8): 2, ((8, 6), 14): 2, ((4, 1), 5): 2, ((6, 4), 10): 2, ((4, 7), 11): 2, ((9, 5), 14): 2, ((2, 4), 6): 2, ((9, 2), 11): 2, ((0, 4), 4): 2, ((3, 6), 9): 2, ((5, 8), 13): 2, ((6, 5), 11): 2, ((6, 6), 12): 2, ((6, 9), 15): 2, ((5, 5), 10): 2, ((3, 3), 6): 2, ((8, 5), 13): 2, ((7, 5), 12): 2, ((9, 6), 15): 2, ((2, 3), 5): 2, ((8, 8), 16): 2, ((8, 3), 11): 2, ((7, 7), 14): 2, ((7, 3), 10): 2, ((6, 2), 8): 2, ((0, 3), 3): 2, ((1, 5), 6): 2, ((5, 6), 11): 2, ((5, 2), 7): 2, ((4, 5), 9): 1, ((0, 2), 2): 1, ((2, 1), 3): 1, ((2, 7), 9): 1, ((0, 6), 6): 1, ((2, 8), 10): 1, ((8, 9), 17): 1, ((9, 3), 12): 1, ((0, 1), 1): 1, ((7, 1), 8): 1, ((1, 0), 1): 1, ((5, 4), 9): 1, ((4, 9), 13): 1, ((9, 4), 13): 1, ((2, 5), 7): 1, ((9, 8), 17): 1, ((7, 8), 15): 1, ((6, 1), 7): 1, ((0, 5), 5): 1, ((3, 1), 4): 1, ((2, 9), 11): 1, ((7, 6), 13): 1, ((5, 9), 14): 1, ((4, 8), 12): 1, ((1, 1), 2): 1, ((1, 2), 3): 1, ((8, 1), 9): 1, ((1, 7), 8): 1, ((5, 3), 8): 1, ((2, 2), 4): 1, ((7, 4), 11): 1, ((5, 7), 12): 1, ((0, 7), 7): 1, ((8, 7), 15): 1, ((3, 9), 12): 1, ((0, 0), 0): 1, ((6, 3), 9): 1, ((9, 1), 10): 1, ((3, 5), 8): 1, ((8, 2), 10): 1, ((9, 9), 18): 1, ((1, 8), 9): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.72
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 19s
------------------------------
Epoch 33/99 (max_len=3, data=4405)
Train acc: 66.78 (abduce 99.27)
Hit samples:  4373  Ave length:  2.54
Symbols:  13 Counter({8: 1414, 13: 1121, 4: 1025, 11: 857, 10: 838, 0: 812, 3: 794, 1: 772, 7: 756, 6: 734, 2: 715, 5: 655, 12: 626})
Dep:  Counter({(1, -1, 1): 3373, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((0, 0), 0): 4, ((2, 0), 0): 3, ((4, 6), 12): 2, ((3, 2), 6): 2, ((6, 9), 54): 2, ((1, 9), 9): 2, ((1, 5), 5): 2, ((9, 0), 0): 2, ((9, 9), 81): 2, ((1, 4), 4): 2, ((1, 6), 6): 2, ((1, 8), 8): 2, ((7, 8), 56): 2, ((9, 2), 18): 2, ((4, 2), 8): 2, ((7, 9), 21): 2, ((7, 2), 14): 2, ((2, 8), 10): 2, ((1, 2), 2): 2, ((9, 7), 63): 2, ((7, 6), 42): 2, ((5, 0), 0): 2, ((1, 0), 0): 1, ((4, 5), 20): 1, ((7, 3), 15): 1, ((2, 9), 18): 1, ((8, 6), 48): 1, ((5, 1), 9): 1, ((4, 4), 10): 1, ((9, 5), 45): 1, ((0, 5), 5): 1, ((5, 6), 30): 1, ((7, 0), 0): 1, ((2, 4), 6): 1, ((3, 9), 27): 1, ((5, 2), 10): 1, ((8, 8), 64): 1, ((0, 2), 2): 1, ((3, 3), 9): 1, ((5, 3), 27): 1, ((3, 1), 5): 1, ((6, 7), 42): 1, ((2, 2), 4): 1, ((2, 3), 56): 1, ((4, 0), 0): 1, ((9, 4), 20): 1, ((9, 8), 24): 1, ((6, 8), 18): 1, ((0, 6), 54): 1, ((9, 3), 27): 1, ((6, 5), 15): 1, ((8, 4), 32): 1, ((8, 1), 64): 1, ((3, 7), 11): 1, ((1, 1), 1): 1, ((5, 8), 40): 1, ((2, 7), 14): 1, ((3, 6), 64): 1, ((9, 1), 2): 1, ((8, 9), 72): 1, ((8, 5), 40): 1, ((6, 1), 12): 1, ((8, 2), 16): 1, ((0, 7), 7): 1, ((5, 9), 45): 1, ((6, 6), 36): 1, ((3, 4), 8): 1, ((6, 0), 0): 1, ((7, 1), 35): 1, ((1, 7), 7): 1, ((3, 8), 12): 1, ((8, 7), 56): 1, ((3, 0), 0): 1, ((5, 7), 35): 1, ((0, 4), 4): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((1, 5), 6): 2, ((4, 2), 6): 2, ((7, 3), 10): 2, ((5, 6), 11): 2, ((6, 1), 7): 2, ((6, 4), 10): 2, ((9, 5), 14): 2, ((5, 2), 7): 2, ((1, 3), 4): 2, ((3, 7), 10): 2, ((9, 1), 10): 2, ((3, 9), 12): 2, ((5, 3), 8): 2, ((4, 1), 5): 2, ((8, 7), 15): 2, ((0, 1), 1): 2, ((6, 9), 15): 2, ((1, 8), 9): 2, ((8, 9), 17): 2, ((7, 8), 15): 2, ((0, 3), 3): 2, ((8, 4), 12): 2, ((3, 3), 6): 2, ((6, 7), 13): 1, ((2, 3), 5): 1, ((3, 1), 4): 1, ((8, 5), 13): 1, ((6, 3), 9): 1, ((4, 9), 13): 1, ((1, 1), 2): 1, ((2, 5), 7): 1, ((7, 6), 13): 1, ((2, 0), 1): 1, ((9, 2), 11): 1, ((0, 7), 7): 1, ((6, 5), 11): 1, ((9, 8), 17): 1, ((4, 8), 12): 1, ((8, 8), 16): 1, ((7, 9), 16): 1, ((5, 5), 10): 1, ((9, 4), 13): 1, ((4, 7), 11): 1, ((0, 4), 4): 1, ((5, 1), 6): 1, ((5, 4), 9): 1, ((8, 1), 9): 1, ((5, 8), 13): 1, ((8, 3), 11): 1, ((7, 4), 11): 1, ((1, 7), 8): 1, ((9, 3), 12): 1, ((4, 5), 9): 1, ((3, 4), 7): 1, ((4, 3), 7): 1, ((6, 8), 14): 1, ((1, 9), 10): 1, ((3, 6), 9): 1, ((0, 2), 2): 1, ((2, 6), 8): 1, ((2, 1), 3): 1, ((7, 7), 14): 1, ((0, 9), 9): 1, ((4, 4), 8): 1, ((9, 0), 1): 1, ((9, 6), 15): 1, ((9, 7), 16): 1, ((2, 9), 11): 1, ((9, 9), 18): 1, ((1, 4), 5): 1, ((8, 6), 14): 1, ((1, 6), 7): 1, ((7, 1), 8): 1, ((6, 2), 8): 1, ((5, 7), 12): 1, ((3, 5), 8): 1, ((4, 6), 10): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.69
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 16s
------------------------------
Epoch 34/99 (max_len=3, data=4405)
Train acc: 67.43 (abduce 99.36)
Hit samples:  4377  Ave length:  2.54
Symbols:  13 Counter({8: 1414, 13: 1129, 4: 1051, 11: 867, 10: 834, 3: 798, 0: 786, 1: 763, 7: 760, 6: 750, 2: 707, 5: 652, 12: 620})
Dep:  Counter({(1, -1, 1): 3377, (-1,): 1000})
Learn perception with 3776 samples for 500 iterations, take 31 sec.
result accuracy by length:
1 ( 3%) 86.00
3 (12%) 45.64
5 (55%) 26.85
7 (29%) 17.63
result accuracy by symbol:
* (45%) 17.49
+ (45%) 26.41
- (45%) 16.26
/ (42%) 35.03
0 (23%) 42.38
1 (28%) 28.59
2 (29%) 23.59
3 (28%) 23.52
4 (28%) 23.85
5 (28%) 22.81
6 (28%) 23.16
7 (28%) 23.38
8 (27%) 23.69
9 (28%) 21.78
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 70.00
4 ( 0%) 60.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 90.00
8 ( 0%) 80.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%) 22.69
1 ( 9%) 73.55
2 ( 5%) 34.55
3 ( 5%) 20.25
4 ( 4%) 24.50
5 ( 4%) 29.68
6 ( 4%) 33.57
7 ( 4%) 30.46
8 ( 4%) 33.56
9 ( 4%) 40.71
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 32.22
unseen (41%) 22.55
val (Perception Acc=10.08, Syntax Acc=100.00, Result Acc=28.20)
Epoch time: 0m 36s
------------------------------
Epoch 35/99 (max_len=3, data=4405)
Train acc: 70.30 (abduce 99.59)
Hit samples:  4387  Ave length:  2.54
Symbols:  14 Counter({8: 1422, 13: 1152, 4: 1033, 11: 872, 10: 812, 0: 799, 3: 780, 7: 774, 1: 771, 6: 739, 2: 726, 5: 660, 12: 620, 9: 1})
Dep:  Counter({(1, -1, 1): 3387, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((9, 2), 18): 3, ((0, 0), 0): 3, ((4, 2), 8): 3, ((2, 0), 0): 3, ((5, 8), 16): 2, ((9, 9), 81): 2, ((9, 7), 63): 2, ((1, 8), 8): 2, ((8, 4), 32): 2, ((5, 2), 10): 2, ((4, 8), 32): 2, ((7, 4), 16): 2, ((5, 6), 30): 2, ((9, 6), 54): 2, ((7, 8), 56): 2, ((4, 6), 12): 2, ((1, 1), 1): 2, ((7, 2), 14): 2, ((6, 4), 24): 2, ((6, 5), 30): 2, ((5, 0), 0): 2, ((6, 8), 18): 2, ((3, 0), 0): 2, ((9, 0), 0): 2, ((2, 8), 10): 2, ((4, 9), 36): 2, ((6, 2), 12): 2, ((1, 2), 2): 2, ((0, 7), 28): 1, ((8, 1), 36): 1, ((8, 3), 24): 1, ((4, 7), 28): 1, ((4, 4), 10): 1, ((6, 0), 0): 1, ((9, 5), 45): 1, ((2, 2), 4): 1, ((3, 6), 48): 1, ((2, 7), 14): 1, ((1, 0), 0): 1, ((6, 7), 42): 1, ((9, 1), 45): 1, ((5, 7), 15): 1, ((1, 9), 9): 1, ((7, 7), 49): 1, ((1, 5), 5): 1, ((2, 6), 8): 1, ((7, 3), 15): 1, ((8, 5), 40): 1, ((3, 2), 6): 1, ((1, 7), 7): 1, ((4, 5), 20): 1, ((7, 9), 21): 1, ((8, 0), 0): 1, ((2, 4), 6): 1, ((0, 5), 5): 1, ((3, 7), 11): 1, ((9, 8), 72): 1, ((8, 7), 21): 1, ((4, 3), 9): 1, ((1, 3), 3): 1, ((1, 4), 4): 1, ((5, 3), 40): 1, ((4, 1), 35): 1, ((9, 3), 27): 1, ((2, 9), 18): 1, ((2, 3), 6): 1, ((3, 8), 12): 1, ((8, 2), 16): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((1, 7), 8): 2, ((9, 2), 11): 2, ((1, 1), 2): 2, ((7, 3), 10): 2, ((4, 5), 9): 2, ((9, 7), 16): 2, ((0, 6), 6): 2, ((7, 4), 11): 2, ((3, 6), 9): 2, ((1, 4), 5): 2, ((0, 8), 8): 2, ((1, 3), 4): 2, ((4, 4), 8): 2, ((8, 1), 9): 2, ((8, 9), 17): 2, ((3, 1), 4): 2, ((5, 4), 9): 2, ((0, 3), 3): 2, ((1, 5), 6): 2, ((0, 7), 7): 2, ((7, 1), 8): 2, ((8, 6), 14): 2, ((6, 6), 12): 2, ((4, 6), 10): 2, ((5, 2), 7): 2, ((7, 6), 13): 1, ((8, 8), 16): 1, ((3, 2), 5): 1, ((4, 7), 11): 1, ((8, 5), 13): 1, ((9, 0), 4): 1, ((0, 0), 0): 1, ((3, 0), 1): 1, ((0, 9), 9): 1, ((2, 7), 9): 1, ((0, 2), 2): 1, ((6, 1), 7): 1, ((9, 1), 10): 1, ((4, 2), 6): 1, ((3, 7), 10): 1, ((9, 4), 13): 1, ((9, 5), 14): 1, ((6, 8), 14): 1, ((6, 2), 8): 1, ((4, 1), 5): 1, ((7, 2), 9): 1, ((8, 3), 11): 1, ((2, 3), 5): 1, ((2, 6), 8): 1, ((2, 1), 3): 1, ((5, 5), 10): 1, ((7, 7), 14): 1, ((6, 4), 10): 1, ((3, 5), 8): 1, ((1, 8), 9): 1, ((5, 7), 12): 1, ((4, 8), 12): 1, ((1, 9), 10): 1, ((6, 3), 9): 1, ((2, 2), 4): 1, ((2, 5), 7): 1, ((9, 6), 15): 1, ((3, 3), 6): 1, ((4, 9), 13): 1, ((0, 4), 4): 1, ((6, 7), 13): 1, ((5, 1), 6): 1, ((0, 1), 1): 1, ((6, 5), 11): 1, ((8, 0), 5): 1, ((3, 4), 7): 1, ((2, 9), 11): 1, ((7, 8), 15): 1, ((2, 4), 6): 1, ((8, 7), 15): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.72
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 19s
------------------------------
Epoch 36/99 (max_len=3, data=4405)
Train acc: 69.31 (abduce 99.50)
Hit samples:  4383  Ave length:  2.54
Symbols:  13 Counter({8: 1425, 13: 1146, 4: 1030, 11: 887, 10: 812, 3: 793, 0: 791, 7: 770, 1: 753, 6: 744, 2: 708, 5: 659, 12: 631})
Dep:  Counter({(1, -1, 1): 3383, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((0, 0), 0): 3, ((1, 8), 8): 3, ((4, 6), 12): 3, ((5, 8), 16): 2, ((4, 2), 8): 2, ((6, 8), 18): 2, ((7, 8), 56): 2, ((1, 4), 4): 2, ((7, 2), 14): 2, ((1, 5), 5): 2, ((4, 9), 36): 2, ((1, 7), 7): 2, ((9, 5), 45): 2, ((8, 7), 21): 2, ((9, 0), 0): 2, ((9, 2), 18): 2, ((2, 0), 0): 2, ((1, 9), 9): 2, ((2, 2), 4): 2, ((6, 5), 15): 2, ((5, 2), 10): 2, ((8, 0), 0): 2, ((5, 7), 35): 1, ((9, 4), 20): 1, ((3, 0), 0): 1, ((1, 3), 3): 1, ((9, 8), 24): 1, ((7, 3), 15): 1, ((5, 6), 30): 1, ((8, 1), 72): 1, ((3, 7), 11): 1, ((1, 6), 6): 1, ((8, 2), 16): 1, ((4, 8), 32): 1, ((2, 1), 3): 1, ((9, 1), 81): 1, ((5, 3), 45): 1, ((9, 7), 63): 1, ((3, 4), 8): 1, ((0, 3), 3): 1, ((6, 7), 42): 1, ((3, 1), 5): 1, ((8, 8), 64): 1, ((7, 0), 0): 1, ((0, 9), 9): 1, ((1, 2), 2): 1, ((0, 2), 2): 1, ((4, 5), 20): 1, ((4, 1), 35): 1, ((6, 1), 4): 1, ((2, 9), 18): 1, ((9, 3), 27): 1, ((0, 7), 42): 1, ((3, 3), 25): 1, ((2, 5), 7): 1, ((5, 0), 0): 1, ((7, 1), 35): 1, ((3, 8), 12): 1, ((3, 9), 27): 1, ((6, 9), 54): 1, ((6, 3), 24): 1, ((6, 6), 36): 1, ((2, 6), 8): 1, ((0, 8), 15): 1, ((1, 0), 0): 1, ((8, 3), 24): 1, ((1, 1), 1): 1, ((2, 3), 5): 1, ((6, 0), 0): 1, ((2, 7), 14): 1, ((4, 0), 0): 1, ((5, 5), 25): 1, ((9, 6), 54): 1, ((7, 6), 42): 1, ((3, 5), 9): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((4, 7), 11): 2, ((9, 6), 15): 2, ((1, 9), 10): 2, ((5, 2), 7): 2, ((5, 8), 13): 2, ((1, 1), 2): 2, ((4, 8), 12): 2, ((6, 6), 12): 2, ((7, 3), 10): 2, ((1, 2), 3): 2, ((4, 2), 6): 2, ((0, 3), 3): 2, ((7, 6), 13): 2, ((7, 1), 8): 2, ((2, 2), 4): 2, ((2, 3), 5): 2, ((6, 4), 10): 2, ((6, 1), 7): 2, ((6, 5), 11): 2, ((2, 1), 3): 2, ((7, 4), 11): 2, ((0, 6), 6): 2, ((8, 2), 10): 2, ((8, 5), 13): 2, ((4, 4), 8): 2, ((9, 9), 18): 2, ((9, 5), 14): 1, ((0, 1), 1): 1, ((9, 7), 16): 1, ((0, 9), 9): 1, ((5, 6), 11): 1, ((6, 2), 8): 1, ((6, 7), 13): 1, ((5, 1), 6): 1, ((9, 3), 12): 1, ((2, 6), 8): 1, ((4, 5), 9): 1, ((3, 8), 11): 1, ((7, 2), 9): 1, ((1, 4), 5): 1, ((4, 1), 5): 1, ((4, 6), 10): 1, ((3, 6), 9): 1, ((2, 7), 9): 1, ((1, 7), 8): 1, ((2, 8), 10): 1, ((3, 7), 10): 1, ((8, 6), 14): 1, ((1, 8), 9): 1, ((2, 9), 11): 1, ((6, 8), 14): 1, ((5, 3), 8): 1, ((9, 1), 10): 1, ((1, 0), 1): 1, ((1, 5), 6): 1, ((6, 3), 9): 1, ((7, 7), 14): 1, ((3, 5), 8): 1, ((2, 5), 7): 1, ((5, 9), 14): 1, ((1, 3), 4): 1, ((8, 1), 9): 1, ((0, 2), 2): 1, ((8, 7), 15): 1, ((7, 0), 1): 1, ((5, 5), 10): 1, ((3, 4), 7): 1, ((9, 4), 13): 1, ((7, 8), 15): 1, ((9, 2), 11): 1, ((3, 9), 12): 1, ((3, 2), 5): 1, ((3, 3), 6): 1, ((2, 4), 6): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.74
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 24s
------------------------------
Epoch 37/99 (max_len=3, data=4405)
Train acc: 70.29 (abduce 99.48)
Hit samples:  4382  Ave length:  2.54
Symbols:  13 Counter({8: 1432, 13: 1142, 4: 1037, 11: 882, 10: 808, 0: 796, 3: 792, 1: 770, 6: 746, 7: 743, 2: 724, 5: 658, 12: 616})
Dep:  Counter({(1, -1, 1): 3382, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((8, 2), 16): 3, ((1, 8), 8): 3, ((9, 0), 0): 3, ((8, 6), 48): 2, ((2, 4), 6): 2, ((1, 6), 6): 2, ((1, 1), 1): 2, ((3, 2), 6): 2, ((2, 0), 0): 2, ((1, 0), 0): 2, ((1, 4), 4): 2, ((7, 0), 0): 2, ((1, 9), 9): 2, ((7, 6), 18): 2, ((2, 8), 10): 2, ((9, 2), 18): 2, ((1, 7), 7): 2, ((1, 5), 5): 2, ((1, 2), 2): 2, ((7, 9), 21): 2, ((3, 0), 0): 2, ((8, 7), 21): 2, ((4, 6), 12): 2, ((3, 4), 8): 1, ((9, 6), 54): 1, ((5, 0), 0): 1, ((7, 4), 16): 1, ((4, 8), 32): 1, ((8, 9), 72): 1, ((6, 8), 18): 1, ((0, 3), 3): 1, ((7, 3), 15): 1, ((6, 5), 15): 1, ((2, 6), 8): 1, ((0, 6), 48): 1, ((5, 2), 10): 1, ((0, 9), 9): 1, ((7, 8), 56): 1, ((3, 8), 12): 1, ((4, 3), 9): 1, ((8, 8), 64): 1, ((5, 7), 35): 1, ((4, 4), 10): 1, ((3, 9), 27): 1, ((6, 9), 54): 1, ((0, 4), 4): 1, ((8, 0), 0): 1, ((3, 5), 9): 1, ((6, 0), 0): 1, ((8, 4), 32): 1, ((2, 2), 4): 1, ((0, 8), 32): 1, ((4, 0), 0): 1, ((4, 5), 20): 1, ((6, 4), 24): 1, ((9, 9), 81): 1, ((9, 8), 24): 1, ((6, 3), 30): 1, ((7, 2), 14): 1, ((6, 2), 12): 1, ((4, 2), 8): 1, ((4, 1), 7): 1, ((4, 7), 28): 1, ((6, 1), 54): 1, ((3, 6), 48): 1, ((3, 7), 11): 1, ((5, 5), 25): 1, ((0, 1), 1): 1, ((5, 6), 30): 1, ((6, 7), 42): 1, ((5, 8), 16): 1, ((0, 0), 0): 1, ((3, 1), 5): 1, ((2, 1), 3): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((6, 9), 15): 2, ((9, 7), 16): 2, ((6, 3), 9): 2, ((7, 2), 9): 2, ((3, 9), 12): 2, ((9, 5), 14): 2, ((0, 4), 4): 2, ((6, 1), 7): 2, ((2, 4), 6): 2, ((5, 6), 11): 2, ((8, 9), 17): 2, ((4, 5), 9): 2, ((3, 3), 6): 2, ((0, 6), 6): 2, ((4, 4), 8): 2, ((8, 7), 15): 2, ((9, 1), 10): 2, ((4, 9), 13): 2, ((7, 6), 13): 2, ((9, 6), 15): 2, ((4, 1), 5): 2, ((1, 5), 6): 2, ((1, 8), 9): 2, ((0, 1), 1): 2, ((8, 5), 13): 2, ((1, 4), 5): 2, ((6, 7), 13): 1, ((9, 9), 18): 1, ((3, 7), 10): 1, ((8, 1), 9): 1, ((8, 3), 11): 1, ((3, 6), 9): 1, ((9, 4), 13): 1, ((2, 7), 9): 1, ((1, 2), 3): 1, ((7, 9), 16): 1, ((7, 5), 12): 1, ((0, 9), 9): 1, ((4, 6), 10): 1, ((3, 4), 7): 1, ((5, 8), 13): 1, ((1, 7), 8): 1, ((0, 8), 8): 1, ((2, 8), 10): 1, ((4, 2), 6): 1, ((9, 3), 12): 1, ((8, 4), 12): 1, ((6, 2), 8): 1, ((0, 2), 2): 1, ((0, 3), 3): 1, ((2, 3), 5): 1, ((6, 4), 10): 1, ((4, 7), 11): 1, ((4, 3), 7): 1, ((0, 5), 5): 1, ((2, 0), 1): 1, ((5, 2), 7): 1, ((5, 1), 6): 1, ((3, 2), 5): 1, ((3, 1), 4): 1, ((1, 0), 1): 1, ((7, 1), 8): 1, ((1, 3), 4): 1, ((2, 2), 4): 1, ((2, 9), 11): 1, ((1, 9), 10): 1, ((6, 8), 14): 1, ((9, 2), 11): 1, ((1, 6), 7): 1, ((5, 7), 12): 1, ((0, 7), 7): 1, ((2, 6), 8): 1, ((8, 2), 10): 1, ((3, 8), 11): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.76
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 25s
------------------------------
Epoch 38/99 (max_len=3, data=4405)
Train acc: 69.93 (abduce 99.48)
Hit samples:  4382  Ave length:  2.54
Symbols:  13 Counter({8: 1431, 13: 1143, 4: 1037, 11: 878, 10: 808, 0: 796, 3: 790, 7: 775, 6: 748, 1: 745, 2: 713, 5: 653, 12: 629})
Dep:  Counter({(1, -1, 1): 3382, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 6), 6): 3, ((9, 5), 45): 2, ((6, 2), 12): 2, ((7, 2), 14): 2, ((8, 7), 56): 2, ((9, 0), 0): 2, ((7, 0), 0): 2, ((3, 2), 6): 2, ((2, 0), 0): 2, ((5, 6), 30): 2, ((1, 8), 8): 2, ((2, 2), 4): 2, ((7, 9), 21): 2, ((5, 8), 16): 2, ((9, 8), 24): 2, ((1, 3), 3): 2, ((7, 6), 42): 2, ((1, 1), 1): 2, ((0, 8), 32): 1, ((7, 1), 28): 1, ((0, 6), 54): 1, ((4, 9), 36): 1, ((5, 0), 0): 1, ((5, 1), 9): 1, ((8, 2), 16): 1, ((9, 4), 20): 1, ((4, 5), 20): 1, ((6, 6), 36): 1, ((3, 0), 0): 1, ((4, 0), 0): 1, ((4, 3), 9): 1, ((5, 2), 10): 1, ((8, 3), 24): 1, ((8, 0), 0): 1, ((6, 4), 24): 1, ((8, 8), 64): 1, ((1, 2), 2): 1, ((5, 7), 35): 1, ((6, 9), 54): 1, ((8, 6), 48): 1, ((8, 1), 32): 1, ((2, 8), 10): 1, ((1, 9), 9): 1, ((9, 7), 63): 1, ((4, 4), 16): 1, ((1, 4), 4): 1, ((7, 4), 16): 1, ((9, 2), 18): 1, ((3, 4), 8): 1, ((0, 4), 4): 1, ((6, 7), 42): 1, ((9, 3), 27): 1, ((0, 9), 9): 1, ((6, 0), 0): 1, ((0, 0), 0): 1, ((0, 5), 45): 1, ((3, 8), 12): 1, ((1, 5), 5): 1, ((6, 8), 18): 1, ((7, 5), 35): 1, ((0, 3), 3): 1, ((2, 9), 18): 1, ((8, 4), 32): 1, ((6, 5), 15): 1, ((7, 8), 56): 1, ((0, 7), 7): 1, ((0, 2), 2): 1, ((4, 8), 32): 1, ((4, 6), 12): 1, ((5, 4), 12): 1, ((3, 6), 48): 1, ((7, 3), 15): 1, ((1, 0), 0): 1, ((1, 7), 7): 1, ((9, 9), 81): 1, ((3, 3), 25): 1, ((6, 1), 54): 1, ((5, 5), 25): 1, ((2, 7), 14): 1, ((3, 5), 9): 1, ((8, 9), 72): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((2, 4), 6): 2, ((2, 8), 10): 2, ((8, 5), 13): 2, ((6, 3), 9): 2, ((4, 9), 13): 2, ((0, 5), 5): 2, ((0, 4), 4): 2, ((5, 1), 6): 2, ((8, 8), 16): 2, ((3, 9), 12): 2, ((6, 7), 13): 2, ((1, 9), 10): 2, ((6, 6), 12): 2, ((1, 7), 8): 2, ((3, 3), 6): 2, ((2, 6), 8): 2, ((9, 6), 15): 2, ((8, 3), 11): 2, ((1, 4), 5): 2, ((3, 8), 11): 2, ((8, 7), 15): 2, ((5, 2), 7): 2, ((8, 9), 17): 2, ((6, 2), 8): 2, ((2, 2), 4): 2, ((0, 6), 6): 2, ((8, 4), 12): 2, ((9, 9), 18): 1, ((7, 8), 15): 1, ((0, 1), 1): 1, ((3, 6), 9): 1, ((0, 9), 9): 1, ((4, 1), 5): 1, ((7, 7), 14): 1, ((1, 6), 7): 1, ((0, 0), 0): 1, ((5, 3), 8): 1, ((6, 9), 15): 1, ((2, 7), 9): 1, ((6, 1), 7): 1, ((4, 8), 12): 1, ((9, 2), 11): 1, ((1, 5), 6): 1, ((5, 6), 11): 1, ((3, 2), 5): 1, ((7, 5), 12): 1, ((9, 8), 17): 1, ((2, 1), 3): 1, ((1, 3), 4): 1, ((4, 7), 11): 1, ((5, 7), 12): 1, ((7, 2), 9): 1, ((3, 5), 8): 1, ((5, 5), 10): 1, ((5, 8), 13): 1, ((4, 5), 9): 1, ((7, 6), 13): 1, ((3, 4), 7): 1, ((9, 1), 10): 1, ((4, 6), 10): 1, ((7, 9), 16): 1, ((1, 2), 3): 1, ((9, 7), 16): 1, ((4, 4), 8): 1, ((2, 3), 5): 1, ((1, 1), 2): 1, ((2, 9), 11): 1, ((5, 4), 9): 1, ((7, 3), 10): 1, ((9, 5), 14): 1, ((6, 4), 10): 1, ((2, 5), 7): 1, ((8, 2), 10): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.72
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 20s
------------------------------
Epoch 39/99 (max_len=3, data=4405)
Train acc: 69.67 (abduce 99.36)
Hit samples:  4377  Ave length:  2.54
Symbols:  13 Counter({8: 1424, 13: 1143, 4: 1035, 11: 879, 10: 810, 3: 795, 0: 786, 7: 763, 6: 749, 1: 746, 2: 707, 5: 660, 12: 634})
Dep:  Counter({(1, -1, 1): 3377, (-1,): 1000})
Learn perception with 3793 samples for 500 iterations, take 29 sec.
result accuracy by length:
1 ( 3%) 89.00
3 (12%) 45.64
5 (55%) 26.91
7 (29%) 18.26
result accuracy by symbol:
* (45%) 18.10
+ (45%) 26.08
- (45%) 16.94
/ (42%) 35.40
0 (23%) 43.54
1 (28%) 28.48
2 (29%) 23.59
3 (28%) 23.85
4 (28%) 23.74
5 (28%) 23.46
6 (28%) 22.72
7 (28%) 24.04
8 (27%) 23.92
9 (28%) 22.64
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 80.00
4 ( 0%) 70.00
5 ( 0%) 90.00
6 ( 0%) 100.00
7 ( 0%) 90.00
8 ( 0%) 80.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%) 23.21
1 ( 9%) 73.55
2 ( 5%) 33.51
3 ( 5%) 22.70
4 ( 4%) 25.83
5 ( 4%) 29.03
6 ( 4%) 35.00
7 ( 4%) 31.79
8 ( 4%) 34.93
9 ( 4%) 40.00
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 32.28
unseen (41%) 23.22
val (Perception Acc=10.33, Syntax Acc=100.00, Result Acc=28.51)
Epoch time: 0m 34s
------------------------------
Epoch 40/99 (max_len=3, data=4405)
Train acc: 70.41 (abduce 99.57)
Hit samples:  4386  Ave length:  2.54
Symbols:  13 Counter({8: 1427, 13: 1125, 4: 1029, 11: 859, 10: 834, 0: 811, 3: 794, 1: 757, 7: 755, 6: 747, 2: 717, 5: 666, 12: 637})
Dep:  Counter({(1, -1, 1): 3386, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((6, 0), 0): 3, ((2, 0), 0): 3, ((8, 2), 16): 3, ((4, 6), 12): 2, ((7, 8), 56): 2, ((7, 9), 21): 2, ((4, 2), 8): 2, ((5, 8), 16): 2, ((9, 8), 24): 2, ((1, 2), 2): 2, ((6, 8), 18): 2, ((1, 3), 3): 2, ((7, 2), 14): 2, ((1, 0), 0): 2, ((1, 4), 4): 2, ((7, 6), 18): 2, ((1, 9), 9): 2, ((1, 6), 6): 2, ((8, 7), 21): 2, ((3, 7), 11): 1, ((5, 0), 0): 1, ((6, 2), 12): 1, ((0, 3), 3): 1, ((1, 1), 1): 1, ((0, 6), 48): 1, ((8, 3), 24): 1, ((3, 2), 6): 1, ((2, 7), 14): 1, ((8, 0), 0): 1, ((9, 0), 0): 1, ((0, 5), 5): 1, ((2, 4), 6): 1, ((9, 6), 54): 1, ((5, 9), 45): 1, ((0, 7), 7): 1, ((4, 9), 36): 1, ((6, 4), 24): 1, ((8, 5), 40): 1, ((8, 1), 36): 1, ((9, 4), 20): 1, ((2, 8), 10): 1, ((1, 7), 7): 1, ((8, 9), 72): 1, ((2, 9), 18): 1, ((0, 1), 1): 1, ((6, 3), 54): 1, ((3, 3), 27): 1, ((6, 5), 15): 1, ((1, 8), 8): 1, ((3, 5), 9): 1, ((4, 3), 9): 1, ((9, 2), 18): 1, ((6, 7), 42): 1, ((2, 2), 4): 1, ((0, 4), 4): 1, ((5, 5), 25): 1, ((7, 1), 35): 1, ((5, 2), 10): 1, ((5, 7), 35): 1, ((4, 4), 28): 1, ((4, 0), 0): 1, ((1, 5), 5): 1, ((2, 1), 3): 1, ((0, 8), 8): 1, ((4, 7), 28): 1, ((3, 8), 12): 1, ((6, 9), 54): 1, ((3, 4), 8): 1, ((7, 4), 16): 1, ((9, 9), 81): 1, ((9, 7), 63): 1, ((3, 9), 27): 1, ((7, 0), 0): 1, ((2, 3), 5): 1, ((9, 3), 27): 1, ((7, 3), 15): 1, ((5, 4), 12): 1, ((4, 5), 20): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((8, 7), 15): 2, ((1, 4), 5): 2, ((7, 5), 12): 2, ((2, 3), 5): 2, ((9, 1), 10): 2, ((4, 8), 12): 2, ((7, 3), 10): 2, ((6, 4), 10): 2, ((8, 5), 13): 2, ((2, 2), 4): 2, ((0, 7), 7): 2, ((9, 3), 12): 2, ((8, 2), 10): 2, ((7, 1), 8): 2, ((3, 1), 4): 2, ((9, 4), 13): 2, ((5, 6), 11): 2, ((9, 9), 18): 2, ((3, 2), 5): 2, ((0, 9), 9): 2, ((5, 2), 7): 2, ((1, 1), 2): 2, ((3, 6), 9): 2, ((0, 8), 8): 1, ((1, 9), 10): 1, ((1, 5), 6): 1, ((5, 7), 12): 1, ((0, 2), 2): 1, ((6, 7), 13): 1, ((9, 2), 11): 1, ((7, 4), 11): 1, ((2, 9), 11): 1, ((3, 8), 11): 1, ((8, 1), 9): 1, ((6, 3), 9): 1, ((9, 0), 4): 1, ((3, 5), 8): 1, ((0, 1), 1): 1, ((5, 4), 9): 1, ((5, 1), 6): 1, ((4, 2), 6): 1, ((8, 3), 11): 1, ((5, 0), 1): 1, ((7, 8), 15): 1, ((4, 3), 7): 1, ((8, 4), 12): 1, ((6, 1), 7): 1, ((6, 6), 12): 1, ((8, 6), 14): 1, ((6, 8), 14): 1, ((5, 8), 13): 1, ((0, 4), 4): 1, ((1, 3), 4): 1, ((0, 0), 0): 1, ((2, 6), 8): 1, ((6, 5), 11): 1, ((4, 7), 11): 1, ((8, 9), 17): 1, ((7, 2), 9): 1, ((1, 2), 3): 1, ((9, 6), 15): 1, ((4, 5), 9): 1, ((0, 3), 3): 1, ((6, 0), 5): 1, ((9, 8), 17): 1, ((4, 4), 8): 1, ((3, 3), 6): 1, ((2, 8), 10): 1, ((2, 4), 6): 1, ((4, 6), 10): 1, ((8, 8), 16): 1, ((1, 7), 8): 1, ((2, 5), 7): 1, ((5, 9), 14): 1, ((1, 8), 9): 1, ((4, 9), 13): 1, ((4, 1), 5): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 16s
------------------------------
Epoch 41/99 (max_len=3, data=4405)
Train acc: 71.85 (abduce 99.48)
Hit samples:  4382  Ave length:  2.54
Symbols:  13 Counter({8: 1428, 13: 1139, 4: 1042, 11: 866, 10: 815, 0: 801, 3: 798, 1: 760, 7: 754, 6: 738, 2: 713, 5: 648, 12: 644})
Dep:  Counter({(1, -1, 1): 3382, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 0), 0): 3, ((6, 0), 0): 2, ((2, 6), 8): 2, ((9, 4), 20): 2, ((1, 7), 7): 2, ((8, 0), 0): 2, ((6, 5), 15): 2, ((2, 0), 0): 2, ((5, 6), 30): 2, ((0, 0), 0): 2, ((5, 8), 16): 2, ((6, 2), 12): 2, ((9, 0), 0): 2, ((4, 2), 8): 2, ((1, 3), 3): 2, ((7, 0), 0): 2, ((3, 0), 0): 2, ((2, 2), 4): 2, ((1, 6), 6): 2, ((6, 4), 24): 2, ((7, 6), 42): 2, ((3, 2), 6): 2, ((7, 2), 14): 2, ((6, 8), 18): 2, ((1, 8), 8): 2, ((2, 9), 18): 1, ((3, 7), 35): 1, ((2, 4), 6): 1, ((8, 1), 32): 1, ((1, 2), 2): 1, ((2, 8), 10): 1, ((1, 1), 1): 1, ((4, 5), 20): 1, ((8, 8), 64): 1, ((6, 9), 54): 1, ((1, 9), 9): 1, ((5, 1), 9): 1, ((4, 6), 12): 1, ((4, 1), 7): 1, ((5, 0), 0): 1, ((8, 3), 24): 1, ((8, 4), 32): 1, ((8, 2), 16): 1, ((6, 1), 54): 1, ((1, 5), 5): 1, ((5, 5), 25): 1, ((0, 8), 32): 1, ((7, 3), 15): 1, ((3, 5), 9): 1, ((0, 1), 1): 1, ((8, 6), 48): 1, ((3, 6), 4): 1, ((7, 5), 35): 1, ((7, 4), 16): 1, ((4, 7), 28): 1, ((9, 2), 18): 1, ((8, 9), 72): 1, ((4, 9), 36): 1, ((0, 4), 4): 1, ((2, 7), 14): 1, ((2, 5), 7): 1, ((4, 8), 32): 1, ((0, 5), 5): 1, ((0, 7), 7): 1, ((0, 3), 3): 1, ((6, 6), 36): 1, ((3, 9), 27): 1, ((9, 7), 63): 1, ((7, 8), 56): 1, ((5, 3), 11): 1, ((3, 4), 8): 1, ((3, 1), 5): 1, ((8, 7), 21): 1, ((0, 6), 54): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((6, 1), 7): 2, ((1, 7), 8): 2, ((3, 4), 7): 2, ((2, 3), 5): 2, ((0, 3), 3): 2, ((7, 1), 8): 2, ((9, 9), 18): 2, ((3, 1), 4): 2, ((0, 1), 1): 2, ((4, 6), 10): 2, ((9, 6), 15): 2, ((6, 6), 12): 2, ((1, 4), 5): 2, ((8, 5), 13): 2, ((6, 4), 10): 2, ((2, 4), 6): 2, ((5, 2), 7): 2, ((1, 5), 6): 2, ((3, 9), 12): 2, ((4, 2), 6): 2, ((1, 1), 2): 2, ((9, 4), 13): 2, ((2, 2), 4): 2, ((5, 8), 13): 2, ((5, 7), 12): 1, ((9, 8), 17): 1, ((1, 8), 9): 1, ((0, 8), 8): 1, ((4, 8), 12): 1, ((4, 1), 5): 1, ((4, 5), 9): 1, ((8, 6), 14): 1, ((8, 7), 15): 1, ((0, 4), 4): 1, ((1, 6), 7): 1, ((2, 6), 8): 1, ((7, 3), 10): 1, ((0, 6), 6): 1, ((0, 7), 7): 1, ((6, 3), 9): 1, ((1, 2), 3): 1, ((9, 0), 1): 1, ((0, 5), 5): 1, ((7, 4), 11): 1, ((5, 4), 9): 1, ((6, 5), 11): 1, ((6, 2), 8): 1, ((8, 0), 6): 1, ((4, 4), 8): 1, ((0, 0), 0): 1, ((9, 5), 14): 1, ((3, 3), 6): 1, ((2, 5), 7): 1, ((8, 2), 10): 1, ((2, 8), 10): 1, ((8, 1), 9): 1, ((5, 3), 8): 1, ((4, 7), 11): 1, ((4, 0), 1): 1, ((1, 3), 4): 1, ((3, 7), 10): 1, ((8, 9), 17): 1, ((7, 2), 9): 1, ((7, 7), 14): 1, ((4, 9), 13): 1, ((3, 6), 9): 1, ((5, 9), 14): 1, ((6, 9), 15): 1, ((5, 5), 10): 1, ((8, 4), 12): 1, ((9, 3), 12): 1, ((3, 2), 5): 1, ((2, 7), 9): 1, ((7, 5), 12): 1, ((1, 0), 1): 1, ((5, 1), 6): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.76
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 17s
------------------------------
Epoch 42/99 (max_len=3, data=4405)
Train acc: 72.17 (abduce 99.70)
Hit samples:  4392  Ave length:  2.54
Symbols:  13 Counter({8: 1429, 13: 1129, 4: 1039, 11: 870, 10: 834, 0: 797, 3: 788, 1: 773, 7: 757, 6: 746, 2: 715, 5: 665, 12: 634})
Dep:  Counter({(1, -1, 1): 3392, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((6, 0), 0): 3, ((4, 6), 12): 3, ((9, 0), 0): 3, ((0, 0), 0): 3, ((1, 6), 6): 2, ((1, 0), 0): 2, ((3, 0), 0): 2, ((1, 3), 3): 2, ((8, 0), 0): 2, ((7, 5), 35): 2, ((8, 2), 16): 2, ((1, 2), 2): 2, ((2, 4), 6): 2, ((4, 0), 0): 2, ((7, 8), 56): 2, ((8, 5), 40): 2, ((9, 4), 20): 2, ((1, 7), 7): 2, ((5, 7), 35): 2, ((9, 5), 45): 2, ((6, 7), 42): 1, ((7, 1), 63): 1, ((6, 4), 24): 1, ((0, 1), 1): 1, ((5, 8), 16): 1, ((5, 1), 9): 1, ((9, 9), 81): 1, ((0, 3), 3): 1, ((5, 9), 45): 1, ((8, 4), 32): 1, ((0, 9), 9): 1, ((4, 2), 8): 1, ((4, 4), 10): 1, ((0, 4), 4): 1, ((3, 9), 27): 1, ((7, 7), 49): 1, ((3, 8), 12): 1, ((7, 6), 18): 1, ((1, 8), 8): 1, ((4, 5), 20): 1, ((7, 0), 0): 1, ((9, 8), 24): 1, ((2, 1), 3): 1, ((2, 7), 14): 1, ((6, 8), 18): 1, ((2, 6), 8): 1, ((2, 2), 4): 1, ((9, 2), 18): 1, ((4, 1), 7): 1, ((8, 3), 24): 1, ((7, 3), 15): 1, ((5, 4), 12): 1, ((0, 7), 7): 1, ((3, 6), 54): 1, ((4, 9), 36): 1, ((6, 6), 36): 1, ((3, 2), 6): 1, ((1, 1), 1): 1, ((4, 3), 9): 1, ((0, 2), 20): 1, ((5, 5), 25): 1, ((1, 4), 4): 1, ((3, 5), 9): 1, ((5, 2), 10): 1, ((1, 5), 5): 1, ((7, 9), 21): 1, ((6, 3), 54): 1, ((4, 8), 32): 1, ((2, 0), 0): 1, ((0, 5), 5): 1, ((5, 0), 0): 1, ((9, 3), 27): 1, ((3, 3), 25): 1, ((6, 5), 15): 1, ((6, 2), 12): 1, ((7, 4), 16): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((2, 2), 4): 2, ((4, 7), 11): 2, ((2, 4), 6): 2, ((5, 4), 9): 2, ((6, 5), 11): 2, ((7, 1), 8): 2, ((8, 3), 11): 2, ((3, 3), 6): 2, ((8, 7), 15): 2, ((9, 1), 10): 2, ((7, 7), 14): 2, ((4, 8), 12): 2, ((6, 3), 9): 2, ((9, 8), 17): 2, ((2, 3), 5): 2, ((7, 9), 16): 2, ((6, 1), 7): 2, ((9, 4), 13): 2, ((2, 8), 10): 2, ((6, 4), 10): 2, ((8, 5), 13): 2, ((1, 3), 4): 2, ((2, 6), 8): 2, ((1, 8), 9): 2, ((4, 2), 6): 2, ((9, 2), 11): 2, ((9, 5), 14): 2, ((5, 9), 14): 1, ((8, 4), 12): 1, ((9, 7), 16): 1, ((6, 2), 8): 1, ((3, 4), 7): 1, ((3, 8), 11): 1, ((3, 2), 5): 1, ((0, 9), 9): 1, ((7, 2), 9): 1, ((6, 6), 12): 1, ((0, 1), 1): 1, ((7, 8), 15): 1, ((1, 9), 10): 1, ((8, 1), 9): 1, ((0, 4), 4): 1, ((0, 8), 8): 1, ((0, 3), 3): 1, ((1, 1), 2): 1, ((5, 8), 13): 1, ((5, 6), 11): 1, ((4, 1), 5): 1, ((0, 6), 6): 1, ((3, 5), 8): 1, ((5, 7), 12): 1, ((5, 2), 7): 1, ((7, 3), 10): 1, ((2, 5), 7): 1, ((6, 8), 14): 1, ((4, 4), 8): 1, ((1, 0), 1): 1, ((3, 1), 4): 1, ((4, 3), 7): 1, ((8, 6), 14): 1, ((3, 6), 9): 1, ((5, 3), 8): 1, ((3, 9), 12): 1, ((8, 2), 10): 1, ((4, 9), 13): 1, ((7, 6), 13): 1, ((0, 2), 2): 1, ((4, 5), 9): 1, ((8, 8), 16): 1, ((8, 9), 17): 1, ((2, 1), 3): 1, ((4, 6), 10): 1, ((6, 9), 15): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.74
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 24s
------------------------------
Epoch 43/99 (max_len=3, data=4405)
Train acc: 71.45 (abduce 99.55)
Hit samples:  4385  Ave length:  2.54
Symbols:  14 Counter({8: 1430, 13: 1128, 4: 1035, 11: 864, 10: 826, 0: 808, 3: 796, 7: 760, 1: 760, 2: 732, 6: 729, 5: 650, 12: 636, 9: 1})
Dep:  Counter({(1, -1, 1): 3385, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((4, 6), 12): 3, ((0, 0), 0): 3, ((8, 0), 0): 3, ((8, 4), 32): 2, ((2, 0), 0): 2, ((7, 8), 56): 2, ((7, 6), 18): 2, ((8, 7), 21): 2, ((5, 2), 10): 2, ((9, 6), 54): 2, ((1, 6), 6): 2, ((1, 7), 7): 2, ((1, 9), 9): 2, ((1, 0), 0): 2, ((2, 8), 10): 2, ((5, 8), 16): 2, ((1, 2), 2): 2, ((1, 8), 8): 2, ((1, 4), 4): 2, ((2, 7), 9): 1, ((4, 9), 36): 1, ((7, 9), 21): 1, ((4, 0), 0): 1, ((6, 3), 30): 1, ((8, 2), 16): 1, ((9, 7), 63): 1, ((7, 7), 49): 1, ((1, 3), 3): 1, ((8, 3), 24): 1, ((6, 9), 54): 1, ((6, 6), 36): 1, ((5, 3), 10): 1, ((1, 1), 1): 1, ((7, 3), 15): 1, ((7, 2), 14): 1, ((0, 9), 9): 1, ((6, 4), 24): 1, ((9, 2), 18): 1, ((9, 5), 45): 1, ((6, 2), 12): 1, ((3, 4), 8): 1, ((6, 5), 15): 1, ((7, 4), 16): 1, ((3, 7), 21): 1, ((2, 6), 8): 1, ((0, 5), 10): 1, ((3, 8), 12): 1, ((4, 1), 35): 1, ((0, 4), 4): 1, ((3, 2), 6): 1, ((4, 8), 32): 1, ((2, 3), 56): 1, ((6, 7), 42): 1, ((3, 1), 5): 1, ((8, 6), 48): 1, ((3, 5), 9): 1, ((0, 8), 8): 1, ((3, 9), 27): 1, ((2, 4), 6): 1, ((8, 9), 72): 1, ((8, 5), 40): 1, ((2, 9), 18): 1, ((0, 2), 2): 1, ((7, 0), 0): 1, ((4, 7), 28): 1, ((5, 9), 45): 1, ((4, 2), 8): 1, ((1, 5), 5): 1, ((5, 6), 30): 1, ((5, 5), 25): 1, ((6, 0), 0): 1, ((8, 8), 64): 1, ((9, 0), 0): 1, ((4, 5), 20): 1, ((2, 2), 4): 1, ((0, 7), 7): 1, ((4, 3), 9): 1, ((6, 8), 18): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((2, 9), 11): 2, ((4, 2), 6): 2, ((3, 4), 7): 2, ((9, 4), 13): 2, ((6, 9), 15): 2, ((2, 6), 8): 2, ((6, 1), 7): 2, ((2, 4), 6): 2, ((4, 8), 12): 2, ((9, 8), 17): 2, ((0, 6), 6): 2, ((3, 3), 6): 2, ((1, 3), 4): 2, ((5, 2), 7): 2, ((6, 7), 13): 2, ((3, 6), 9): 2, ((5, 4), 9): 2, ((9, 1), 10): 2, ((7, 1), 8): 2, ((8, 7), 15): 2, ((4, 1), 5): 2, ((3, 9), 12): 2, ((1, 2), 3): 2, ((3, 2), 5): 2, ((7, 7), 14): 1, ((6, 4), 10): 1, ((8, 2), 10): 1, ((4, 9), 13): 1, ((9, 7), 16): 1, ((3, 8), 11): 1, ((2, 2), 4): 1, ((4, 3), 7): 1, ((3, 1), 4): 1, ((1, 9), 10): 1, ((7, 0), 35): 1, ((5, 5), 10): 1, ((7, 2), 9): 1, ((6, 8), 14): 1, ((9, 5), 14): 1, ((5, 9), 14): 1, ((9, 9), 18): 1, ((0, 9), 9): 1, ((1, 6), 7): 1, ((5, 1), 6): 1, ((8, 8), 16): 1, ((6, 2), 8): 1, ((2, 7), 9): 1, ((4, 4), 8): 1, ((7, 9), 16): 1, ((2, 1), 3): 1, ((8, 1), 9): 1, ((1, 7), 8): 1, ((1, 5), 6): 1, ((0, 1), 1): 1, ((9, 6), 15): 1, ((0, 2), 2): 1, ((1, 8), 9): 1, ((0, 5), 5): 1, ((8, 3), 11): 1, ((9, 3), 12): 1, ((8, 4), 12): 1, ((6, 6), 12): 1, ((7, 4), 11): 1, ((0, 8), 8): 1, ((7, 6), 13): 1, ((2, 5), 7): 1, ((6, 5), 11): 1, ((9, 2), 11): 1, ((5, 7), 12): 1, ((8, 9), 17): 1, ((1, 1), 2): 1, ((0, 3), 3): 1, ((3, 5), 8): 1, ((0, 7), 7): 1, ((7, 3), 10): 1, ((7, 5), 12): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.76
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 26s
------------------------------
Epoch 44/99 (max_len=3, data=4405)
Train acc: 71.24 (abduce 99.64)
Hit samples:  4389  Ave length:  2.54
Symbols:  13 Counter({8: 1428, 13: 1128, 4: 1048, 11: 877, 10: 833, 3: 798, 0: 794, 6: 755, 7: 755, 1: 749, 2: 722, 5: 653, 12: 627})
Dep:  Counter({(1, -1, 1): 3389, (-1,): 1000})
Learn perception with 3813 samples for 500 iterations, take 30 sec.
result accuracy by length:
1 ( 3%) 85.00
3 (12%) 43.85
5 (55%) 26.74
7 (29%) 17.63
result accuracy by symbol:
* (45%) 17.76
+ (45%) 25.47
- (45%) 16.39
/ (42%) 34.96
0 (23%) 43.41
1 (28%) 28.26
2 (29%) 23.27
3 (28%) 22.86
4 (28%) 23.30
5 (28%) 23.25
6 (28%) 22.17
7 (28%) 23.49
8 (27%) 24.26
9 (28%) 21.89
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 90.00
2 ( 0%) 90.00
3 ( 0%) 70.00
4 ( 0%) 60.00
5 ( 0%) 90.00
6 ( 0%) 90.00
7 ( 0%) 90.00
8 ( 0%) 80.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%) 23.72
1 ( 9%) 73.23
2 ( 5%) 31.94
3 ( 5%) 22.09
4 ( 4%) 23.18
5 ( 4%) 30.97
6 ( 4%) 30.71
7 ( 4%) 29.14
8 ( 4%) 34.93
9 ( 4%) 37.86
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 31.64
unseen (41%) 22.63
val (Perception Acc=10.25, Syntax Acc=100.00, Result Acc=27.89)
Epoch time: 0m 35s
------------------------------
Epoch 45/99 (max_len=3, data=4405)
Train acc: 72.04 (abduce 99.75)
Hit samples:  4394  Ave length:  2.54
Symbols:  13 Counter({8: 1429, 13: 1125, 4: 1048, 11: 854, 10: 840, 0: 813, 3: 799, 7: 767, 1: 754, 6: 751, 2: 729, 5: 652, 12: 621})
Dep:  Counter({(1, -1, 1): 3394, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 6), 6): 3, ((8, 2), 16): 3, ((0, 0), 0): 3, ((5, 2), 10): 2, ((9, 0), 0): 2, ((3, 2), 6): 2, ((4, 8), 32): 2, ((1, 0), 0): 2, ((1, 7), 7): 2, ((7, 2), 14): 2, ((2, 0), 0): 2, ((1, 1), 1): 2, ((4, 6), 12): 2, ((6, 5), 15): 2, ((7, 4), 16): 2, ((1, 8), 8): 2, ((1, 2), 2): 2, ((5, 8), 16): 2, ((4, 0), 0): 2, ((8, 0), 0): 2, ((9, 6), 54): 2, ((8, 7), 21): 2, ((1, 3), 3): 2, ((0, 9), 9): 1, ((5, 5), 25): 1, ((5, 4), 12): 1, ((0, 3), 3): 1, ((4, 2), 8): 1, ((6, 7), 42): 1, ((2, 6), 8): 1, ((9, 9), 81): 1, ((7, 6), 18): 1, ((4, 3), 9): 1, ((7, 8), 56): 1, ((8, 3), 24): 1, ((7, 9), 21): 1, ((5, 0), 0): 1, ((5, 3), 15): 1, ((0, 2), 2): 1, ((5, 1), 9): 1, ((4, 4), 10): 1, ((3, 0), 0): 1, ((7, 7), 49): 1, ((3, 3), 27): 1, ((7, 0), 0): 1, ((7, 3), 15): 1, ((6, 9), 54): 1, ((8, 6), 48): 1, ((0, 1), 1): 1, ((9, 7), 63): 1, ((1, 9), 9): 1, ((8, 4), 32): 1, ((2, 9), 18): 1, ((9, 5), 45): 1, ((4, 9), 36): 1, ((6, 2), 12): 1, ((9, 1), 45): 1, ((6, 8), 18): 1, ((5, 6), 30): 1, ((4, 5), 20): 1, ((9, 2), 18): 1, ((2, 7), 9): 1, ((6, 3), 30): 1, ((8, 1), 15): 1, ((2, 1), 3): 1, ((8, 9), 72): 1, ((1, 4), 4): 1, ((8, 5), 40): 1, ((7, 1), 35): 1, ((3, 9), 27): 1, ((0, 7), 7): 1, ((4, 1), 35): 1, ((2, 8), 10): 1, ((7, 5), 35): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((5, 2), 7): 2, ((6, 4), 10): 2, ((0, 4), 4): 2, ((8, 4), 12): 2, ((2, 6), 8): 2, ((7, 5), 12): 2, ((3, 8), 11): 2, ((3, 9), 12): 2, ((1, 8), 9): 2, ((8, 3), 11): 2, ((1, 1), 2): 2, ((7, 6), 13): 2, ((5, 8), 13): 2, ((1, 9), 10): 2, ((1, 2), 3): 2, ((9, 1), 10): 2, ((4, 5), 9): 2, ((6, 1), 7): 2, ((1, 5), 6): 2, ((0, 6), 6): 2, ((4, 6), 10): 2, ((4, 2), 6): 2, ((4, 3), 7): 2, ((2, 2), 4): 2, ((6, 7), 13): 1, ((2, 9), 11): 1, ((6, 9), 15): 1, ((3, 1), 4): 1, ((4, 9), 13): 1, ((6, 8), 14): 1, ((7, 7), 14): 1, ((1, 3), 4): 1, ((9, 7), 16): 1, ((2, 8), 10): 1, ((2, 3), 5): 1, ((5, 3), 8): 1, ((2, 1), 3): 1, ((6, 2), 8): 1, ((0, 8), 8): 1, ((1, 0), 1): 1, ((5, 6), 11): 1, ((6, 6), 12): 1, ((5, 4), 9): 1, ((0, 9), 9): 1, ((5, 1), 6): 1, ((2, 7), 9): 1, ((9, 3), 12): 1, ((1, 6), 7): 1, ((9, 9), 18): 1, ((0, 1), 1): 1, ((3, 4), 7): 1, ((7, 9), 16): 1, ((4, 1), 5): 1, ((9, 0), 4): 1, ((7, 2), 9): 1, ((7, 4), 11): 1, ((3, 3), 6): 1, ((8, 6), 14): 1, ((9, 8), 17): 1, ((1, 4), 5): 1, ((2, 4), 6): 1, ((8, 7), 15): 1, ((2, 5), 7): 1, ((7, 1), 8): 1, ((3, 5), 8): 1, ((8, 9), 17): 1, ((5, 7), 12): 1, ((4, 8), 12): 1, ((9, 2), 11): 1, ((0, 2), 2): 1, ((1, 7), 8): 1, ((7, 8), 15): 1, ((5, 5), 10): 1, ((6, 3), 9): 1, ((7, 3), 10): 1, ((9, 5), 14): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.77
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 18s
------------------------------
Epoch 46/99 (max_len=3, data=4405)
Train acc: 73.32 (abduce 99.61)
Hit samples:  4388  Ave length:  2.54
Symbols:  13 Counter({8: 1436, 13: 1128, 4: 1041, 11: 863, 10: 824, 0: 813, 3: 792, 6: 761, 7: 756, 1: 739, 2: 727, 5: 650, 12: 634})
Dep:  Counter({(1, -1, 1): 3388, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((4, 6), 12): 3, ((4, 2), 8): 3, ((9, 2), 18): 3, ((5, 8), 16): 2, ((1, 1), 1): 2, ((7, 2), 14): 2, ((7, 8), 56): 2, ((2, 4), 6): 2, ((4, 0), 0): 2, ((6, 8), 18): 2, ((8, 2), 16): 2, ((7, 9), 21): 2, ((1, 3), 3): 2, ((0, 0), 0): 2, ((2, 2), 4): 2, ((8, 7), 21): 2, ((1, 9), 9): 2, ((1, 2), 2): 2, ((8, 0), 0): 2, ((5, 2), 10): 2, ((9, 0), 0): 2, ((1, 0), 0): 2, ((3, 6), 18): 1, ((2, 9), 11): 1, ((3, 8), 12): 1, ((7, 7), 49): 1, ((9, 5), 45): 1, ((8, 8), 64): 1, ((0, 5), 45): 1, ((0, 8), 8): 1, ((8, 4), 32): 1, ((4, 7), 28): 1, ((3, 2), 6): 1, ((6, 9), 54): 1, ((7, 3), 15): 1, ((8, 6), 48): 1, ((5, 9), 45): 1, ((3, 1), 5): 1, ((2, 8), 10): 1, ((9, 3), 27): 1, ((2, 0), 0): 1, ((4, 1), 35): 1, ((2, 6), 8): 1, ((0, 6), 6): 1, ((5, 1), 9): 1, ((6, 5), 15): 1, ((6, 6), 36): 1, ((1, 8), 8): 1, ((6, 7), 42): 1, ((2, 3), 5): 1, ((6, 2), 12): 1, ((5, 6), 30): 1, ((1, 5), 5): 1, ((7, 4), 16): 1, ((0, 7), 42): 1, ((5, 7), 35): 1, ((5, 3), 11): 1, ((2, 1), 3): 1, ((3, 3), 25): 1, ((6, 0), 0): 1, ((0, 3), 3): 1, ((9, 8), 24): 1, ((9, 6), 54): 1, ((0, 2), 2): 1, ((9, 1), 81): 1, ((9, 9), 81): 1, ((3, 4), 8): 1, ((0, 4), 4): 1, ((9, 7), 63): 1, ((7, 6), 18): 1, ((2, 5), 7): 1, ((8, 3), 24): 1, ((6, 3), 30): 1, ((1, 4), 4): 1, ((5, 0), 0): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((9, 1), 10): 2, ((9, 7), 16): 2, ((2, 1), 3): 2, ((7, 1), 8): 2, ((6, 6), 12): 2, ((7, 7), 14): 2, ((4, 1), 5): 2, ((5, 3), 8): 2, ((6, 1), 7): 2, ((9, 2), 11): 2, ((5, 2), 7): 2, ((2, 8), 10): 2, ((1, 2), 3): 2, ((1, 7), 8): 2, ((3, 3), 6): 2, ((9, 4), 13): 2, ((7, 9), 16): 2, ((8, 3), 11): 2, ((9, 9), 18): 2, ((9, 5), 14): 2, ((2, 9), 11): 2, ((2, 4), 6): 2, ((0, 7), 7): 2, ((4, 2), 6): 2, ((1, 8), 9): 2, ((3, 9), 12): 2, ((4, 5), 9): 2, ((8, 2), 10): 2, ((8, 7), 15): 1, ((2, 3), 5): 1, ((9, 3), 12): 1, ((3, 7), 10): 1, ((4, 4), 8): 1, ((8, 5), 13): 1, ((5, 7), 12): 1, ((9, 0), 4): 1, ((3, 8), 11): 1, ((8, 4), 12): 1, ((2, 5), 7): 1, ((1, 0), 1): 1, ((6, 2), 8): 1, ((5, 5), 10): 1, ((5, 8), 13): 1, ((5, 6), 11): 1, ((8, 9), 17): 1, ((3, 5), 8): 1, ((8, 8), 16): 1, ((7, 3), 10): 1, ((3, 1), 4): 1, ((7, 8), 15): 1, ((0, 3), 3): 1, ((4, 9), 13): 1, ((0, 4), 4): 1, ((4, 8), 12): 1, ((5, 4), 9): 1, ((3, 6), 9): 1, ((1, 3), 4): 1, ((6, 7), 13): 1, ((1, 1), 2): 1, ((9, 6), 15): 1, ((2, 7), 9): 1, ((1, 4), 5): 1, ((4, 3), 7): 1, ((7, 5), 12): 1, ((9, 8), 17): 1, ((2, 2), 4): 1, ((2, 6), 8): 1, ((4, 6), 10): 1, ((6, 5), 11): 1, ((5, 9), 14): 1, ((0, 1), 1): 1, ((1, 5), 6): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.77
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 19s
------------------------------
Epoch 47/99 (max_len=3, data=4405)
Train acc: 73.68 (abduce 99.59)
Hit samples:  4387  Ave length:  2.54
Symbols:  14 Counter({8: 1443, 13: 1124, 4: 1048, 11: 862, 10: 819, 0: 818, 3: 782, 7: 758, 6: 752, 1: 751, 2: 721, 5: 653, 12: 629, 9: 1})
Dep:  Counter({(1, -1, 1): 3387, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((2, 0), 0): 3, ((0, 0), 0): 3, ((1, 9), 9): 2, ((8, 2), 16): 2, ((8, 4), 32): 2, ((5, 2), 10): 2, ((6, 8), 18): 2, ((8, 7), 21): 2, ((1, 2), 2): 2, ((3, 2), 6): 2, ((1, 7), 7): 2, ((4, 2), 8): 2, ((2, 8), 10): 2, ((1, 5), 5): 2, ((4, 6), 12): 2, ((1, 3), 3): 2, ((7, 0), 0): 2, ((8, 6), 48): 2, ((6, 5), 15): 2, ((1, 0), 0): 2, ((9, 9), 81): 1, ((4, 0), 0): 1, ((0, 4), 4): 1, ((1, 8), 8): 1, ((3, 8), 12): 1, ((5, 3), 11): 1, ((3, 7), 21): 1, ((6, 7), 42): 1, ((8, 5), 40): 1, ((7, 7), 49): 1, ((3, 1), 5): 1, ((0, 2), 2): 1, ((4, 9), 36): 1, ((3, 9), 27): 1, ((6, 6), 36): 1, ((9, 4), 20): 1, ((4, 5), 20): 1, ((5, 8), 16): 1, ((1, 4), 4): 1, ((2, 6), 8): 1, ((4, 4), 10): 1, ((6, 4), 24): 1, ((9, 1), 45): 1, ((0, 3), 3): 1, ((9, 5), 45): 1, ((6, 9), 54): 1, ((7, 1), 28): 1, ((5, 9), 45): 1, ((2, 1), 3): 1, ((1, 6), 6): 1, ((8, 9), 72): 1, ((7, 2), 14): 1, ((6, 2), 12): 1, ((4, 3), 9): 1, ((8, 1), 72): 1, ((7, 3), 15): 1, ((8, 3), 24): 1, ((2, 9), 18): 1, ((5, 1), 9): 1, ((3, 4), 8): 1, ((0, 8), 32): 1, ((2, 7), 14): 1, ((9, 8), 24): 1, ((2, 3), 42): 1, ((3, 6), 18): 1, ((7, 6), 18): 1, ((7, 8), 56): 1, ((4, 1), 35): 1, ((2, 2), 4): 1, ((6, 0), 0): 1, ((9, 0), 0): 1, ((0, 9), 9): 1, ((7, 9), 21): 1, ((5, 4), 12): 1, ((5, 5), 25): 1, ((5, 6), 30): 1, ((7, 4), 16): 1, ((9, 2), 18): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((2, 2), 4): 3, ((1, 8), 9): 2, ((7, 1), 8): 2, ((4, 9), 13): 2, ((5, 4), 9): 2, ((8, 6), 14): 2, ((9, 6), 15): 2, ((8, 1), 9): 2, ((1, 5), 6): 2, ((9, 9), 18): 2, ((8, 3), 11): 2, ((9, 3), 12): 2, ((4, 8), 12): 2, ((0, 4), 4): 2, ((8, 9), 17): 2, ((3, 3), 6): 2, ((9, 7), 16): 2, ((2, 1), 3): 2, ((5, 2), 7): 2, ((0, 7), 7): 2, ((8, 8), 16): 2, ((5, 9), 14): 1, ((1, 2), 3): 1, ((4, 2), 6): 1, ((6, 6), 12): 1, ((1, 7), 8): 1, ((6, 4), 10): 1, ((9, 2), 11): 1, ((7, 9), 16): 1, ((4, 3), 7): 1, ((8, 5), 13): 1, ((4, 5), 9): 1, ((4, 6), 10): 1, ((0, 1), 1): 1, ((5, 1), 6): 1, ((2, 8), 10): 1, ((6, 3), 9): 1, ((0, 6), 6): 1, ((6, 1), 7): 1, ((4, 1), 5): 1, ((2, 7), 9): 1, ((3, 2), 5): 1, ((7, 7), 14): 1, ((3, 7), 10): 1, ((5, 3), 8): 1, ((0, 8), 8): 1, ((7, 3), 10): 1, ((4, 4), 8): 1, ((9, 4), 13): 1, ((0, 2), 2): 1, ((1, 4), 5): 1, ((3, 4), 7): 1, ((6, 2), 8): 1, ((1, 0), 1): 1, ((2, 5), 7): 1, ((0, 9), 9): 1, ((7, 6), 13): 1, ((7, 8), 15): 1, ((4, 0), 32): 1, ((1, 3), 4): 1, ((2, 3), 5): 1, ((8, 7), 15): 1, ((6, 9), 15): 1, ((8, 2), 10): 1, ((4, 7), 11): 1, ((3, 5), 8): 1, ((1, 1), 2): 1, ((5, 5), 10): 1, ((3, 1), 4): 1, ((9, 5), 14): 1, ((1, 6), 7): 1, ((7, 4), 11): 1, ((9, 8), 17): 1, ((6, 7), 13): 1, ((3, 8), 11): 1, ((5, 7), 12): 1, ((3, 6), 9): 1, ((7, 5), 12): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.76
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 17s
------------------------------
Epoch 48/99 (max_len=3, data=4405)
Train acc: 72.96 (abduce 99.68)
Hit samples:  4391  Ave length:  2.54
Symbols:  13 Counter({8: 1425, 13: 1133, 4: 1044, 11: 857, 10: 833, 0: 818, 3: 811, 1: 758, 7: 752, 6: 737, 2: 732, 5: 638, 12: 635})
Dep:  Counter({(1, -1, 1): 3391, (-1,): 1000})
Semantics: 14/11/2 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((4, 6), 12): 3, ((8, 2), 16): 3, ((1, 0), 0): 3, ((6, 2), 12): 2, ((7, 4), 16): 2, ((1, 2), 2): 2, ((6, 0), 0): 2, ((2, 0), 0): 2, ((6, 5), 15): 2, ((9, 8), 24): 2, ((1, 9), 9): 2, ((2, 2), 4): 2, ((9, 2), 18): 2, ((1, 6), 6): 2, ((4, 2), 8): 2, ((9, 4), 20): 2, ((8, 0), 0): 2, ((1, 7), 7): 2, ((1, 3), 3): 2, ((2, 6), 8): 1, ((5, 7), 35): 1, ((8, 9), 72): 1, ((0, 5), 5): 1, ((5, 5), 25): 1, ((7, 7), 49): 1, ((9, 6), 54): 1, ((4, 5), 20): 1, ((8, 6), 48): 1, ((4, 0), 0): 1, ((3, 8), 12): 1, ((0, 6), 48): 1, ((6, 4), 24): 1, ((4, 7), 28): 1, ((3, 5), 9): 1, ((0, 4), 4): 1, ((9, 0), 0): 1, ((3, 6), 18): 1, ((5, 1), 9): 1, ((2, 7), 14): 1, ((7, 6), 18): 1, ((8, 7), 21): 1, ((5, 3), 27): 1, ((1, 5), 5): 1, ((0, 0), 0): 1, ((3, 4), 8): 1, ((4, 1), 7): 1, ((5, 4), 12): 1, ((1, 8), 8): 1, ((4, 4), 10): 1, ((0, 8), 8): 1, ((6, 3), 54): 1, ((9, 1), 45): 1, ((0, 1), 1): 1, ((7, 0), 0): 1, ((8, 1), 64): 1, ((4, 9), 36): 1, ((7, 9), 21): 1, ((3, 0), 0): 1, ((7, 5), 35): 1, ((0, 9), 9): 1, ((0, 7), 7): 1, ((8, 3), 24): 1, ((8, 8), 64): 1, ((9, 9), 81): 1, ((9, 7), 63): 1, ((7, 1), 35): 1, ((9, 5), 45): 1, ((0, 2), 2): 1, ((5, 9), 45): 1, ((3, 2), 6): 1, ((0, 3), 3): 1, ((4, 3), 9): 1, ((2, 3), 56): 1, ((3, 7), 35): 1, ((2, 4), 6): 1, ((6, 7), 42): 1, ((5, 8), 16): 1, ((1, 4), 4): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((9, 9), 18): 2, ((2, 8), 10): 2, ((1, 3), 4): 2, ((7, 9), 16): 2, ((0, 3), 3): 2, ((6, 2), 8): 2, ((8, 5), 13): 2, ((3, 6), 9): 2, ((8, 2), 10): 2, ((3, 9), 12): 2, ((3, 3), 6): 2, ((9, 4), 13): 2, ((9, 1), 10): 2, ((5, 8), 13): 2, ((4, 4), 8): 2, ((6, 5), 11): 2, ((9, 7), 16): 2, ((0, 8), 8): 2, ((8, 1), 9): 2, ((1, 8), 9): 2, ((8, 7), 15): 2, ((9, 5), 14): 2, ((6, 4), 10): 2, ((1, 9), 10): 2, ((9, 2), 11): 2, ((9, 8), 17): 2, ((4, 6), 10): 2, ((0, 4), 4): 1, ((2, 7), 9): 1, ((6, 6), 12): 1, ((7, 3), 10): 1, ((5, 5), 10): 1, ((2, 1), 3): 1, ((1, 6), 7): 1, ((1, 7), 8): 1, ((2, 2), 4): 1, ((3, 8), 11): 1, ((3, 7), 10): 1, ((5, 7), 12): 1, ((7, 2), 9): 1, ((2, 6), 8): 1, ((5, 3), 8): 1, ((3, 5), 8): 1, ((5, 4), 9): 1, ((9, 6), 15): 1, ((4, 3), 7): 1, ((1, 0), 1): 1, ((6, 9), 15): 1, ((7, 6), 13): 1, ((5, 1), 6): 1, ((0, 1), 1): 1, ((0, 2), 2): 1, ((6, 7), 13): 1, ((2, 3), 5): 1, ((4, 8), 12): 1, ((8, 8), 16): 1, ((2, 5), 7): 1, ((6, 8), 14): 1, ((7, 5), 12): 1, ((0, 9), 9): 1, ((3, 1), 4): 1, ((5, 2), 7): 1, ((0, 7), 7): 1, ((7, 1), 8): 1, ((9, 0), 4): 1, ((1, 2), 3): 1, ((4, 7), 11): 1, ((1, 5), 6): 1, ((4, 2), 6): 1, ((6, 1), 7): 1, ((6, 3), 9): 1, ((2, 9), 11): 1, ((5, 9), 14): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 0.77
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 14m 22s
------------------------------
Epoch 49/99 (max_len=3, data=4405)
Train acc: 73.63 (abduce 99.59)
Hit samples:  4387  Ave length:  2.54
Symbols:  14 Counter({8: 1435, 13: 1131, 4: 1058, 11: 874, 10: 820, 0: 806, 3: 804, 7: 762, 1: 738, 6: 731, 2: 727, 5: 651, 12: 623, 9: 1})
Dep:  Counter({(1, -1, 1): 3387, (-1,): 1000})
Learn perception with 3833 samples for 500 iterations, take 30 sec.
result accuracy by length:
1 ( 3%) 89.00
3 (12%) 43.85
5 (55%) 27.19
7 (29%) 18.15
result accuracy by symbol:
* (45%) 17.83
+ (45%) 26.21
- (45%) 16.73
/ (42%) 35.54
0 (23%) 41.99
1 (28%) 28.80
2 (29%) 23.59
3 (28%) 24.07
4 (28%) 24.73
5 (28%) 23.36
6 (28%) 24.04
7 (28%) 23.16
8 (27%) 24.15
9 (28%) 23.19
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 70.00
4 ( 0%) 70.00
5 ( 0%) 90.00
6 ( 0%) 100.00
7 ( 0%) 90.00
8 ( 0%) 80.00
9 ( 0%) 90.00
result accuracy by res:
0 (24%) 22.69
1 ( 9%) 75.16
2 ( 5%) 32.98
3 ( 5%) 22.70
4 ( 4%) 23.84
5 ( 4%) 29.68
6 ( 4%) 34.29
7 ( 4%) 31.79
8 ( 4%) 31.51
9 ( 4%) 41.43
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 32.43
unseen (41%) 22.77
val (Perception Acc=10.20, Syntax Acc=100.00, Result Acc=28.41)
Epoch time: 0m 35s
------------------------------
Epoch 50/99 (max_len=5, data=13285)
Train acc: 39.08 (abduce 96.42)
Hit samples:  12809  Ave length:  4.16
Symbols:  13 Counter({8: 9552, 13: 6414, 0: 4715, 10: 4263, 4: 4036, 11: 3424, 1: 3339, 3: 3150, 7: 3108, 2: 3026, 6: 3018, 5: 2678, 12: 2544})
Dep:  Counter({(1, 3, 1, -1, 3): 6218, (1, -1, 1): 3389, (1, -1, 3, 1, 3): 2202, (-1,): 1000})
211 [((0, 0), 0), ((0, 1), 1), ((0, 2), 2), ((0, 3), 3), ((0, 4), 4), ((0, 5), 5), ((0, 6), 6), ((0, 7), 7), ((0, 8), 8), ((0, 9), 9), ((0, 15), 41), ((0, 20), 48), ((1, 0), 0), ((1, 1), 1), ((1, 2), 2), ((1, 3), 3), ((1, 4), 4), ((1, 5), 5), ((1, 6), 6), ((1, 7), 7), ((1, 8), 8), ((1, 9), 9), ((1, 13), 26), ((2, 0), 0), ((2, 1), 3), ((2, 2), 4), ((2, 3), 5), ((2, 4), 6), ((2, 5), 7), ((2, 6), 8), ((2, 7), 9), ((2, 8), 10), ((2, 9), 11), ((3, 0), 0), ((3, 1), 5), ((3, 2), 6), ((3, 3), 7), ((3, 4), 8), ((3, 5), 9), ((3, 6), 10), ((3, 7), 11), ((3, 8), 12), ((3, 9), 13), ((3, 16), 66), ((4, 0), 0), ((4, 1), 7), ((4, 2), 8), ((4, 3), 9), ((4, 4), 10), ((4, 5), 11), ((4, 6), 12), ((4, 7), 13), ((4, 8), 14), ((4, 9), 15), ((4, 11), 10), ((4, 17), 10), ((4, 19), 53), ((4, 21), 60), ((5, 0), 0), ((5, 1), 9), ((5, 2), 10), ((5, 3), 11), ((5, 4), 12), ((5, 5), 13), ((5, 6), 14), ((5, 7), 15), ((5, 8), 16), ((5, 9), 17), ((5, 11), 59), ((6, 0), 0), ((6, 1), 11), ((6, 2), 12), ((6, 3), 13), ((6, 4), 14), ((6, 5), 15), ((6, 6), 16), ((6, 7), 17), ((6, 8), 18), ((6, 9), 19), ((6, 14), 24), ((7, 0), 0), ((7, 1), 13), ((7, 2), 14), ((7, 3), 15), ((7, 4), 16), ((7, 5), 35), ((7, 6), 18), ((7, 7), 19), ((7, 8), 20), ((7, 9), 21), ((7, 11), 23), ((8, 0), 0), ((8, 1), 15), ((8, 2), 16), ((8, 3), 17), ((8, 4), 18), ((8, 5), 19), ((8, 6), 20), ((8, 7), 21), ((8, 8), 22), ((8, 9), 23), ((8, 11), 26), ((8, 14), 28), ((9, 0), 0), ((9, 1), 17), ((9, 2), 18), ((9, 3), 27), ((9, 4), 20), ((9, 5), 21), ((9, 6), 22), ((9, 7), 23), ((9, 8), 24), ((9, 9), 25), ((10, 0), 7), ((10, 2), 36), ((10, 3), 42), ((10, 5), 160), ((10, 6), 13), ((10, 8), 36), ((11, 0), 0), ((11, 1), 120), ((11, 2), 126), ((11, 3), 84), ((11, 4), 96), ((11, 6), 120), ((11, 8), 144), ((12, 0), 0), ((12, 2), 72), ((12, 4), 8), ((12, 5), 20), ((12, 6), 144), ((12, 8), 8), ((13, 0), 0), ((13, 2), 54), ((13, 3), 14), ((13, 4), 28), ((13, 6), 144), ((13, 7), 144), ((13, 8), 144), ((13, 9), 378), ((14, 0), 0), ((14, 1), 60), ((14, 2), 60), ((14, 3), 160), ((14, 4), 96), ((14, 5), 160), ((14, 6), 72), ((14, 7), 84), ((14, 8), 144), ((14, 9), 378), ((15, 0), 0), ((15, 3), 24), ((15, 5), 4), ((15, 8), 112), ((16, 1), 31), ((16, 2), 60), ((16, 3), 33), ((16, 4), 10), ((16, 5), 84), ((16, 6), 216), ((16, 7), 224), ((16, 8), 144), ((16, 9), 4), ((17, 0), 0), ((17, 2), 9), ((17, 4), 96), ((17, 6), 216), ((17, 7), 320), ((17, 9), 378), ((18, 0), 0), ((18, 2), 36), ((18, 3), 5), ((18, 7), 224), ((18, 8), 42), ((18, 9), 378), ((19, 0), 0), ((19, 3), 144), ((19, 6), 112), ((19, 7), 36), ((19, 8), 441), ((19, 9), 441), ((20, 0), 0), ((20, 2), 126), ((20, 5), 43), ((20, 6), 216), ((20, 7), 84), ((20, 8), 216), ((21, 1), 54), ((21, 2), 42), ((21, 3), 84), ((21, 5), 405), ((21, 6), 8), ((21, 8), 112), ((22, 0), 0), ((22, 1), 54), ((22, 2), 320), ((22, 5), 320), ((22, 7), 504), ((23, 1), 22), ((23, 2), 126), ((23, 4), 378), ((23, 6), 378), ((23, 7), 126), ((24, 1), 72), ((24, 2), 162), ((24, 7), 504), ((24, 8), 162), ((25, 1), 162), ((25, 2), 162), ((25, 4), 85), ((25, 5), 405)]
336 [((0, 0), 0), ((0, 1), 1), ((0, 2), 2), ((0, 3), 3), ((0, 4), 4), ((0, 5), 5), ((0, 6), 6), ((0, 7), 7), ((0, 8), 8), ((0, 9), 9), ((0, 10), 40), ((0, 11), 10), ((0, 12), 6), ((0, 14), 14), ((0, 15), 41), ((0, 16), 40), ((0, 18), 40), ((0, 19), 40), ((0, 20), 48), ((0, 22), 6), ((1, 0), 1), ((1, 1), 2), ((1, 2), 3), ((1, 3), 4), ((1, 4), 5), ((1, 5), 6), ((1, 6), 7), ((1, 7), 8), ((1, 8), 9), ((1, 9), 10), ((1, 10), 26), ((1, 11), 16), ((1, 12), 26), ((1, 13), 26), ((1, 14), 33), ((1, 15), 16), ((1, 16), 60), ((1, 18), 19), ((1, 22), 56), ((2, 0), 1), ((2, 1), 3), ((2, 2), 4), ((2, 3), 5), ((2, 4), 6), ((2, 5), 7), ((2, 6), 8), ((2, 7), 9), ((2, 8), 10), ((2, 9), 11), ((2, 10), 25), ((2, 11), 26), ((2, 12), 14), ((2, 13), 29), ((2, 16), 42), ((2, 17), 66), ((2, 18), 60), ((2, 19), 53), ((2, 20), 38), ((2, 21), 66), ((2, 22), 56), ((2, 25), 3), ((3, 0), 2), ((3, 1), 4), ((3, 2), 5), ((3, 3), 6), ((3, 4), 7), ((3, 5), 8), ((3, 6), 9), ((3, 7), 10), ((3, 8), 11), ((3, 9), 12), ((3, 10), 13), ((3, 11), 3), ((3, 12), 66), ((3, 13), 66), ((3, 15), 48), ((3, 16), 33), ((3, 18), 33), ((3, 19), 59), ((3, 20), 66), ((3, 21), 66), ((4, 0), 1), ((4, 1), 5), ((4, 2), 6), ((4, 3), 7), ((4, 4), 8), ((4, 5), 9), ((4, 6), 10), ((4, 7), 11), ((4, 8), 12), ((4, 9), 13), ((4, 10), 28), ((4, 11), 26), ((4, 12), 28), ((4, 13), 24), ((4, 14), 28), ((4, 15), 40), ((4, 17), 60), ((4, 18), 59), ((4, 19), 53), ((4, 20), 7), ((4, 21), 60), ((5, 0), 1), ((5, 1), 6), ((5, 2), 7), ((5, 3), 8), ((5, 4), 9), ((5, 5), 10), ((5, 6), 11), ((5, 7), 12), ((5, 8), 13), ((5, 9), 14), ((5, 10), 54), ((5, 11), 16), ((5, 12), 25), ((5, 14), 19), ((5, 16), 33), ((5, 18), 0), ((5, 19), 59), ((5, 20), 25), ((5, 22), 0), ((5, 23), 59), ((6, 0), 1), ((6, 1), 7), ((6, 2), 8), ((6, 3), 9), ((6, 4), 10), ((6, 5), 11), ((6, 6), 12), ((6, 7), 13), ((6, 8), 14), ((6, 9), 15), ((6, 12), 42), ((6, 13), 6), ((6, 14), 0), ((6, 15), 41), ((6, 16), 42), ((6, 18), 54), ((6, 20), 26), ((7, 0), 6), ((7, 1), 8), ((7, 2), 9), ((7, 3), 10), ((7, 4), 11), ((7, 5), 12), ((7, 6), 13), ((7, 7), 14), ((7, 8), 15), ((7, 9), 16), ((7, 10), 10), ((7, 11), 33), ((7, 14), 37), ((7, 15), 55), ((7, 16), 23), ((7, 18), 25), ((7, 19), 0), ((7, 22), 0), ((7, 23), 10), ((8, 0), 1), ((8, 1), 9), ((8, 2), 10), ((8, 3), 11), ((8, 4), 12), ((8, 5), 13), ((8, 6), 14), ((8, 7), 15), ((8, 8), 16), ((8, 9), 17), ((8, 10), 18), ((8, 11), 43), ((8, 12), 42), ((8, 14), 0), ((8, 15), 43), ((8, 18), 26), ((8, 19), 64), ((8, 20), 64), ((8, 23), 0), ((9, 0), 3), ((9, 1), 10), ((9, 2), 11), ((9, 3), 12), ((9, 4), 13), ((9, 5), 14), ((9, 6), 15), ((9, 7), 16), ((9, 8), 17), ((9, 9), 18), ((9, 10), 19), ((9, 11), 20), ((9, 14), 23), ((9, 15), 44), ((9, 16), 43), ((9, 17), 3), ((9, 18), 27), ((9, 19), 53), ((9, 21), 54), ((10, 0), 2), ((10, 1), 11), ((10, 2), 4), ((10, 3), 13), ((10, 4), 14), ((10, 5), 4), ((10, 6), 16), ((10, 7), 17), ((10, 8), 25), ((10, 9), 19), ((11, 0), 9), ((11, 1), 41), ((11, 2), 13), ((11, 3), 14), ((11, 4), 6), ((11, 5), 7), ((11, 6), 5), ((11, 7), 4), ((11, 8), 6), ((11, 9), 20), ((12, 0), 24), ((12, 1), 24), ((12, 2), 10), ((12, 3), 15), ((12, 4), 16), ((12, 5), 4), ((12, 6), 18), ((12, 7), 19), ((12, 8), 10), ((12, 9), 21), ((13, 0), 28), ((13, 1), 5), ((13, 2), 15), ((13, 3), 4), ((13, 4), 32), ((13, 5), 4), ((13, 6), 31), ((13, 7), 11), ((13, 8), 10), ((13, 9), 22), ((14, 0), 30), ((14, 1), 30), ((14, 2), 60), ((14, 3), 17), ((14, 4), 7), ((14, 5), 19), ((14, 6), 120), ((14, 7), 37), ((14, 8), 0), ((14, 9), 23), ((15, 0), 31), ((15, 1), 31), ((15, 2), 17), ((15, 3), 12), ((15, 4), 5), ((15, 5), 15), ((15, 6), 41), ((15, 7), 39), ((15, 8), 41), ((15, 9), 24), ((16, 0), 49), ((16, 1), 17), ((16, 2), 18), ((16, 3), 7), ((16, 4), 43), ((16, 5), 8), ((16, 6), 6), ((16, 7), 43), ((16, 8), 24), ((16, 9), 25), ((17, 0), 27), ((17, 1), 41), ((17, 2), 15), ((17, 3), 27), ((17, 4), 7), ((17, 5), 19), ((17, 6), 7), ((17, 7), 15), ((17, 8), 19), ((17, 9), 36), ((18, 0), 61), ((18, 1), 0), ((18, 2), 20), ((18, 4), 8), ((18, 5), 8), ((18, 6), 24), ((18, 8), 53), ((18, 9), 27), ((19, 0), 49), ((19, 1), 9), ((19, 2), 41), ((19, 4), 44), ((19, 5), 15), ((19, 6), 38), ((19, 7), 49), ((19, 8), 37), ((19, 9), 9), ((20, 1), 53), ((20, 2), 53), ((20, 3), 68), ((20, 4), 44), ((20, 5), 53), ((20, 6), 62), ((20, 8), 10), ((21, 0), 45), ((21, 1), 57), ((21, 2), 33), ((21, 3), 42), ((21, 4), 10), ((21, 5), 5), ((21, 6), 8), ((21, 8), 53), ((21, 9), 30), ((22, 1), 53), ((22, 3), 12), ((22, 5), 27), ((22, 6), 6), ((22, 7), 61), ((22, 9), 63), ((23, 0), 49), ((23, 2), 70), ((23, 3), 70), ((23, 4), 85), ((23, 5), 68), ((23, 6), 75), ((23, 7), 30), ((23, 9), 68), ((24, 1), 72), ((24, 2), 72), ((24, 3), 42), ((24, 4), 85), ((24, 6), 87), ((24, 8), 63), ((24, 9), 63), ((25, 0), 45), ((25, 2), 85), ((25, 3), 87), ((25, 4), 85), ((25, 5), 17), ((25, 6), 87)]
Semantics: 14/13/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 0m 20s
------------------------------
Epoch 51/99 (max_len=5, data=13285)
Train acc: 39.35 (abduce 96.81)
Hit samples:  12861  Ave length:  4.16
Symbols:  14 Counter({8: 9551, 0: 4657, 13: 4568, 4: 4058, 10: 3463, 11: 3451, 1: 3348, 3: 3200, 6: 3106, 7: 3104, 2: 2999, 9: 2744, 5: 2680, 12: 2584})
Dep:  Counter({(1, 3, 1, -1, 3): 6249, (1, -1, 1): 3396, (1, -1, 3, 1, 3): 2216, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((6, 5), 30): 2, ((9, 8), 8): 2, ((18, 3), 24): 1, ((14, 9), 4): 1, ((1, 12), 26): 1, ((20, 8), 53): 1, ((2, 8), 9): 1, ((8, 19), 0): 1, ((18, 6), 216): 1, ((14, 0), 30): 1, ((7, 0), 15): 1, ((11, 6), 120): 1, ((23, 6), 378): 1, ((6, 17), 10): 1, ((9, 7), 63): 1, ((20, 3), 43): 1, ((6, 18), 14): 1, ((6, 1), 3): 1, ((4, 0), 32): 1, ((2, 4), 32): 1, ((22, 6), 144): 1, ((8, 11), 26): 1, ((12, 1), 24): 1, ((2, 19), 53): 1, ((9, 17), 59): 1, ((19, 9), 441): 1, ((21, 1), 57): 1, ((3, 8), 24): 1, ((9, 15), 44): 1, ((13, 5), 4): 1, ((19, 6), 75): 1, ((21, 6), 8): 1, ((6, 15), 41): 1, ((5, 16), 33): 1, ((5, 25), 0): 1, ((13, 7), 11): 1, ((9, 21), 54): 1, ((13, 0), 28): 1, ((24, 1), 72): 1, ((2, 25), 0): 1, ((17, 2), 14): 1, ((5, 6), 30): 1, ((22, 2), 61): 1, ((8, 18), 17): 1, ((4, 12), 28): 1, ((7, 7), 49): 1, ((21, 7), 224): 1, ((7, 18), 55): 1, ((17, 8), 216): 1, ((12, 7), 10): 1, ((3, 2), 66): 1, ((21, 8), 37): 1, ((1, 8), 16): 1, ((17, 1), 41): 1, ((3, 3), 25): 1, ((16, 5), 8): 1, ((15, 7), 3): 1, ((17, 0), 27): 1, ((9, 19), 53): 1, ((8, 2), 4): 1, ((4, 9), 36): 1, ((7, 8), 3): 1, ((6, 9), 41): 1, ((2, 3), 16): 1, ((7, 22), 0): 1, ((7, 5), 35): 1, ((6, 0), 4): 1, ((6, 20), 64): 1, ((6, 3), 10): 1, ((17, 7), 36): 1, ((21, 4), 10): 1, ((25, 7), 85): 1, ((14, 3), 39): 1, ((0, 21), 8): 1, ((17, 9), 2): 1, ((1, 5), 10): 1, ((0, 4), 2): 1, ((18, 9), 200): 1, ((20, 6), 216): 1, ((7, 17), 23): 1, ((2, 20), 38): 1, ((4, 21), 60): 1, ((0, 20), 48): 1, ((7, 13), 27): 1, ((8, 16), 8): 1, ((19, 5), 68): 1, ((17, 6), 7): 1, ((9, 14), 54): 1, ((2, 6), 0): 1, ((15, 2), 70): 1, ((5, 4), 35): 1, ((9, 1), 14): 1, ((8, 4), 32): 1, ((5, 21), 59): 1, ((5, 0), 3): 1, ((3, 20), 66): 1, ((8, 10), 13): 1, ((2, 10), 38): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0)))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 15m 2s
------------------------------
Epoch 52/99 (max_len=5, data=13285)
Train acc: 39.60 (abduce 96.80)
Hit samples:  12860  Ave length:  4.16
Symbols:  14 Counter({8: 9574, 0: 4731, 13: 4541, 4: 4059, 10: 3459, 11: 3411, 1: 3380, 3: 3205, 7: 3089, 2: 3026, 6: 3015, 9: 2753, 5: 2690, 12: 2581})
Dep:  Counter({(1, 3, 1, -1, 3): 6256, (1, -1, 1): 3393, (1, -1, 3, 1, 3): 2211, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((4, 9), 36): 2, ((6, 9), 41): 2, ((11, 6), 120): 1, ((16, 7), 43): 1, ((2, 9), 45): 1, ((9, 3), 27): 1, ((0, 0), 48): 1, ((5, 0), 12): 1, ((17, 6), 15): 1, ((10, 6), 7): 1, ((0, 16), 40): 1, ((4, 5), 20): 1, ((7, 7), 49): 1, ((7, 5), 35): 1, ((5, 23), 0): 1, ((2, 15), 42): 1, ((6, 0), 4): 1, ((12, 2), 10): 1, ((3, 21), 66): 1, ((17, 0), 45): 1, ((5, 18), 59): 1, ((18, 3), 84): 1, ((10, 4), 6): 1, ((7, 13), 55): 1, ((15, 2), 14): 1, ((7, 10), 64): 1, ((1, 10), 33): 1, ((21, 2), 162): 1, ((0, 22), 48): 1, ((2, 21), 66): 1, ((6, 5), 10): 1, ((1, 4), 6): 1, ((0, 6), 7): 1, ((11, 8), 144): 1, ((2, 1), 5): 1, ((1, 20), 4): 1, ((5, 13), 33): 1, ((25, 3), 405): 1, ((15, 5), 7): 1, ((10, 0), 30): 1, ((8, 4), 32): 1, ((12, 4), 5): 1, ((5, 1), 0): 1, ((5, 9), 45): 1, ((23, 4), 85): 1, ((16, 4), 43): 1, ((3, 0), 13): 1, ((10, 7), 3): 1, ((25, 2), 162): 1, ((3, 13), 33): 1, ((21, 5), 68): 1, ((3, 1), 2): 1, ((19, 1), 57): 1, ((20, 8), 10): 1, ((19, 4), 44): 1, ((6, 18), 54): 1, ((9, 11), 8): 1, ((18, 1), 53): 1, ((8, 8), 64): 1, ((2, 0), 3): 1, ((1, 6), 5): 1, ((9, 2), 14): 1, ((9, 6), 54): 1, ((22, 7), 61): 1, ((8, 5), 40): 1, ((17, 1), 7): 1, ((8, 13), 6): 1, ((0, 15), 41): 1, ((3, 9), 27): 1, ((11, 0), 27): 1, ((4, 21), 60): 1, ((2, 7), 49): 1, ((15, 4), 6): 1, ((24, 4), 85): 1, ((14, 4), 96): 1, ((8, 16), 42): 1, ((6, 6), 48): 1, ((3, 12), 3): 1, ((7, 0), 28): 1, ((11, 3), 9): 1, ((8, 1), 26): 1, ((20, 9), 3): 1, ((3, 14), 13): 1, ((15, 0), 3): 1, ((7, 8), 56): 1, ((22, 3), 15): 1, ((13, 4), 32): 1, ((2, 20), 38): 1, ((22, 9), 63): 1, ((14, 7), 39): 1, ((10, 5), 7): 1, ((2, 19), 59): 1, ((14, 2), 60): 1, ((4, 0), 24): 1, ((5, 14), 0): 1, ((2, 8), 16): 1, ((8, 19), 53): 1, ((4, 2), 5): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0)))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 15m 4s
------------------------------
Epoch 53/99 (max_len=5, data=13285)
Train acc: 39.55 (abduce 96.44)
Hit samples:  12812  Ave length:  4.16
Symbols:  14 Counter({8: 9532, 0: 4708, 13: 4557, 4: 4021, 10: 3426, 11: 3398, 1: 3370, 3: 3166, 7: 3130, 6: 3029, 2: 3000, 9: 2715, 5: 2662, 12: 2558})
Dep:  Counter({(1, 3, 1, -1, 3): 6215, (1, -1, 1): 3394, (1, -1, 3, 1, 3): 2203, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-09 (int -> int -> int), Samples: 100,  Counter({((3, 1), 9): 2, ((5, 18), 59): 1, ((6, 11), 10): 1, ((16, 9), 15): 1, ((22, 1), 53): 1, ((5, 4), 0): 1, ((15, 0), 24): 1, ((15, 2), 70): 1, ((0, 13), 6): 1, ((6, 4), 24): 1, ((24, 7), 504): 1, ((23, 7), 15): 1, ((6, 3), 3): 1, ((2, 5), 10): 1, ((23, 5), 15): 1, ((1, 13), 16): 1, ((5, 17), 54): 1, ((0, 7), 10): 1, ((13, 6), 87): 1, ((13, 0), 28): 1, ((12, 0), 22): 1, ((2, 15), 42): 1, ((19, 4), 44): 1, ((4, 1), 6): 1, ((2, 7), 11): 1, ((6, 5), 30): 1, ((3, 2), 13): 1, ((1, 9), 3): 1, ((1, 10), 54): 1, ((22, 9), 63): 1, ((9, 21), 54): 1, ((0, 9), 45): 1, ((19, 8), 49): 1, ((8, 12), 42): 1, ((16, 4), 22): 1, ((17, 6), 15): 1, ((25, 7), 14): 1, ((1, 7), 84): 1, ((11, 4), 9): 1, ((5, 8), 40): 1, ((7, 9), 63): 1, ((14, 9), 378): 1, ((9, 6), 54): 1, ((16, 1), 41): 1, ((3, 19), 55): 1, ((0, 6), 72): 1, ((11, 5), 7): 1, ((10, 9), 0): 1, ((8, 8), 18): 1, ((5, 7), 35): 1, ((15, 1), 9): 1, ((18, 1), 53): 1, ((22, 4), 15): 1, ((16, 5), 53): 1, ((1, 1), 3): 1, ((21, 3), 42): 1, ((22, 6), 42): 1, ((6, 15), 41): 1, ((21, 5), 19): 1, ((0, 21), 6): 1, ((11, 1), 41): 1, ((12, 4), 6): 1, ((2, 16), 33): 1, ((1, 0), 4): 1, ((9, 8), 72): 1, ((0, 19), 40): 1, ((11, 8), 144): 1, ((2, 4), 8): 1, ((13, 1), 41): 1, ((4, 15), 40): 1, ((23, 0), 126): 1, ((23, 8), 70): 1, ((4, 21), 60): 1, ((16, 3), 84): 1, ((9, 19), 53): 1, ((2, 8), 16): 1, ((0, 18), 48): 1, ((8, 4), 32): 1, ((19, 7), 3): 1, ((0, 22), 48): 1, ((8, 9), 72): 1, ((22, 5), 320): 1, ((18, 5), 11): 1, ((17, 2), 14): 1, ((10, 7), 3): 1, ((19, 1), 49): 1, ((14, 4), 96): 1, ((25, 5), 17): 1, ((6, 7), 15): 1, ((7, 1), 9): 1, ((22, 2), 72): 1, ((9, 12), 19): 1, ((8, 5), 40): 1, ((12, 9), 16): 1, ((21, 1), 57): 1, ((6, 1), 36): 1, ((7, 3), 4): 1, ((6, 18), 54): 1, ((9, 3), 3): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0)))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0)))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-11: 1 (incr 0) 1.00
Symbol-04: 2 (incr (incr 0)) 1.00
Symbol-12: 3 (incr (incr (incr 0))) 1.00
Symbol-02: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-06: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-03: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-07: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-09: None 0.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 (decr0 $0) (incr (if0 (decr0 $1) (decr0 $0) (incr ($2 (decr0 $1) $0))))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 (incr ($2 (if0 $0 0 (decr0 $1)) $0))))))))) 1.00
Symbol-08: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (if0 (decr0 $0) $1 (if0 (decr0 (decr0 $0)) $0 (incr ($2 0 0))))))))))) 1.00
Epoch time: 15m 4s
------------------------------
Epoch 54/99 (max_len=5, data=13285)
Train acc: 39.47 (abduce 96.49)
Hit samples:  12819  Ave length:  4.16
Symbols:  14 Counter({8: 9508, 0: 4711, 13: 4605, 4: 4029, 10: 3431, 1: 3410, 11: 3394, 3: 3135, 7: 3087, 6: 3055, 2: 2995, 9: 2704, 5: 2687, 12: 2564})
Dep:  Counter({(1, 3, 1, -1, 3): 6238, (1, -1, 1): 3390, (1, -1, 3, 1, 3): 2191, (-1,): 1000})
Learn perception with 10115 samples for 500 iterations, take 17 sec.
