train: 18405 val: 3238 test: 58965
CUDA is available?: True
using cuda?: True
Namespace(curriculum=True, epochs=10, epochs_eval=5, excludes='!', output_dir='./outputs/exp_perception_syntax_curriculum/', perception=True, resume=None, seed=314, semantics=False, syntax=True)
use ground-truth perception.
use ground-truth syntax.
Symbol-00: None 0.00
Symbol-01: None 0.00
Symbol-02: None 0.00
Symbol-03: None 0.00
Symbol-04: None 0.00
Symbol-05: None 0.00
Symbol-06: None 0.00
Symbol-07: None 0.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Curriculum: [(0, 1), (5, 3), (50, 5), (100, inf)]
result accuracy by length:
1 ( 3%)  0.00
3 (12%)  0.00
5 (55%)  0.00
7 (29%)  0.00
result accuracy by symbol:
* (45%)  0.00
+ (45%)  0.00
- (45%)  0.00
/ (42%)  0.00
0 (23%)  0.00
1 (28%)  0.00
2 (29%)  0.00
3 (28%)  0.00
4 (28%)  0.00
5 (28%)  0.00
6 (28%)  0.00
7 (28%)  0.00
8 (27%)  0.00
9 (28%)  0.00
result accuracy by digit:
0 ( 0%)  0.00
1 ( 0%)  0.00
2 ( 0%)  0.00
3 ( 0%)  0.00
4 ( 0%)  0.00
5 ( 0%)  0.00
6 ( 0%)  0.00
7 ( 0%)  0.00
8 ( 0%)  0.00
9 ( 0%)  0.00
result accuracy by res:
0 (24%)  0.00
1 ( 9%)  0.00
2 ( 5%)  0.00
3 ( 5%)  0.00
4 ( 4%)  0.00
5 ( 4%)  0.00
6 ( 4%)  0.00
7 ( 4%)  0.00
8 ( 4%)  0.00
9 ( 4%)  0.00
result accuracy by condition:
long ( 0%)  0.00
seen (58%)  0.00
unseen (41%)  0.00
val (Perception Acc=100.00, Syntax Acc=100.00, Result Acc=0.00)
------------------------------
Epoch 0/9 (max_len=1, data=1000)
Train acc: 0.00 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({4: 100, 1: 100, 0: 100, 8: 100, 7: 100, 5: 100, 3: 100, 2: 100, 6: 100, 9: 100})
Dep:  Counter({(-1,): 1000})
Semantics: 14/0/10 (total/solved/learn).
Symbol-00 (int), Samples: 100,  Counter({((), 0): 100})
Symbol-01 (int), Samples: 100,  Counter({((), 1): 100})
Symbol-02 (int), Samples: 100,  Counter({((), 2): 100})
Symbol-03 (int), Samples: 100,  Counter({((), 3): 100})
Symbol-04 (int), Samples: 100,  Counter({((), 4): 100})
Symbol-05 (int), Samples: 100,  Counter({((), 5): 100})
Symbol-06 (int), Samples: 100,  Counter({((), 6): 100})
Symbol-07 (int), Samples: 100,  Counter({((), 7): 100})
Symbol-08 (int), Samples: 100,  Counter({((), 8): 100})
Symbol-09 (int), Samples: 100,  Counter({((), 9): 100})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr (decr0 0)))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 16s
------------------------------
Epoch 1/9 (max_len=1, data=1000)
Train acc: 100.00 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({9: 100, 0: 100, 4: 100, 8: 100, 6: 100, 1: 100, 5: 100, 2: 100, 7: 100, 3: 100})
Dep:  Counter({(-1,): 1000})
Semantics: 14/10/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr (decr0 0)))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 0s
------------------------------
Epoch 2/9 (max_len=1, data=1000)
Train acc: 100.00 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({0: 100, 7: 100, 1: 100, 2: 100, 3: 100, 6: 100, 9: 100, 8: 100, 4: 100, 5: 100})
Dep:  Counter({(-1,): 1000})
Semantics: 14/10/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr (decr0 0)))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 0s
------------------------------
Epoch 3/9 (max_len=1, data=1000)
Train acc: 100.00 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({4: 100, 8: 100, 1: 100, 6: 100, 0: 100, 2: 100, 9: 100, 7: 100, 3: 100, 5: 100})
Dep:  Counter({(-1,): 1000})
Semantics: 14/10/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr (decr0 0)))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Epoch time: 0m 0s
------------------------------
Epoch 4/9 (max_len=1, data=1000)
Train acc: 100.00 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 Counter({5: 100, 9: 100, 0: 100, 7: 100, 3: 100, 2: 100, 6: 100, 8: 100, 4: 100, 1: 100})
Dep:  Counter({(-1,): 1000})
result accuracy by length:
1 ( 3%) 100.00
3 (12%)  0.00
5 (55%)  0.00
7 (29%)  0.00
result accuracy by symbol:
* (45%)  0.00
+ (45%)  0.00
- (45%)  0.00
/ (42%)  0.00
0 (23%)  1.29
1 (28%)  1.09
2 (29%)  1.06
3 (28%)  1.10
4 (28%)  1.10
5 (28%)  1.10
6 (28%)  1.10
7 (28%)  1.10
8 (27%)  1.14
9 (28%)  1.08
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by res:
0 (24%)  1.28
1 ( 9%)  3.23
2 ( 5%)  5.24
3 ( 5%)  6.13
4 ( 4%)  6.62
5 ( 4%)  6.45
6 ( 4%)  7.14
7 ( 4%)  6.62
8 ( 4%)  6.85
9 ( 4%)  7.14
result accuracy by condition:
long ( 0%)  0.00
seen (58%)  5.29
unseen (41%)  0.00
val (Perception Acc=100.00, Syntax Acc=100.00, Result Acc=3.09)
Epoch time: 0m 2s
------------------------------
Epoch 5/9 (max_len=3, data=4405)
Train acc: 22.78 (abduce 100.00)
Hit samples:  4405  Ave length:  2.55
Symbols:  14 Counter({12: 1000, 10: 1000, 13: 900, 4: 791, 3: 791, 9: 791, 1: 791, 8: 791, 5: 791, 2: 791, 7: 791, 6: 791, 0: 691, 11: 505})
Dep:  Counter({(1, -1, 1): 3405, (-1,): 1000})
Semantics: 14/10/4 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  Counter({((1, 4), 5): 2, ((1, 3), 4): 2, ((2, 2), 4): 2, ((5, 3), 8): 2, ((7, 1), 8): 2, ((8, 4), 12): 2, ((1, 8), 9): 2, ((9, 4), 13): 2, ((7, 0), 7): 2, ((5, 6), 11): 2, ((2, 9), 11): 2, ((7, 5), 12): 2, ((5, 9), 14): 2, ((1, 0), 1): 2, ((4, 6), 10): 2, ((1, 2), 3): 2, ((7, 2), 9): 2, ((7, 8), 15): 2, ((4, 8), 12): 2, ((4, 7), 11): 2, ((0, 7), 7): 2, ((8, 2), 10): 2, ((3, 3), 6): 1, ((3, 9), 12): 1, ((7, 9), 16): 1, ((9, 0), 9): 1, ((1, 7), 8): 1, ((8, 0), 8): 1, ((4, 4), 8): 1, ((8, 3), 11): 1, ((0, 0), 0): 1, ((2, 8), 10): 1, ((4, 2), 6): 1, ((0, 8), 8): 1, ((5, 7), 12): 1, ((1, 1), 2): 1, ((3, 4), 7): 1, ((3, 0), 3): 1, ((5, 4), 9): 1, ((2, 4), 6): 1, ((3, 8), 11): 1, ((4, 1), 5): 1, ((6, 2), 8): 1, ((5, 8), 13): 1, ((8, 8), 16): 1, ((5, 2), 7): 1, ((2, 7), 9): 1, ((6, 0), 6): 1, ((1, 9), 10): 1, ((6, 9), 15): 1, ((9, 7), 16): 1, ((9, 2), 11): 1, ((9, 6), 15): 1, ((9, 3), 12): 1, ((1, 5), 6): 1, ((2, 3), 5): 1, ((7, 4), 11): 1, ((0, 1), 1): 1, ((6, 1), 7): 1, ((6, 8), 14): 1, ((6, 4), 10): 1, ((2, 0), 2): 1, ((0, 6), 6): 1, ((4, 5), 9): 1, ((0, 2), 2): 1, ((5, 0), 5): 1, ((9, 9), 18): 1, ((2, 1), 3): 1, ((5, 1), 6): 1, ((8, 5), 13): 1, ((6, 3), 9): 1, ((9, 8), 17): 1, ((0, 9), 9): 1, ((4, 9), 13): 1, ((0, 5), 5): 1, ((7, 6), 13): 1, ((9, 1), 10): 1, ((3, 6), 9): 1})
Symbol-11 (int -> int -> int), Samples: 100,  Counter({((7, 6), 1): 2, ((8, 3), 5): 2, ((4, 3), 1): 2, ((5, 1), 4): 2, ((9, 6), 3): 2, ((5, 0), 5): 2, ((5, 4), 1): 2, ((6, 5), 1): 2, ((7, 1), 6): 2, ((6, 1), 5): 2, ((9, 3), 6): 2, ((3, 1), 2): 2, ((7, 5), 2): 2, ((8, 0), 8): 2, ((5, 2), 3): 2, ((4, 2), 2): 2, ((8, 6), 2): 2, ((6, 0), 6): 2, ((2, 2), 0): 1, ((8, 7), 1): 1, ((6, 6), 0): 1, ((3, 6), 0): 1, ((0, 6), 0): 1, ((0, 2), 0): 1, ((0, 4), 0): 1, ((4, 6), 0): 1, ((1, 8), 0): 1, ((2, 6), 0): 1, ((4, 1), 3): 1, ((5, 3), 2): 1, ((6, 3), 3): 1, ((9, 8), 1): 1, ((8, 2), 6): 1, ((2, 1), 1): 1, ((2, 0), 2): 1, ((9, 4), 5): 1, ((2, 4), 0): 1, ((4, 4), 0): 1, ((8, 5), 3): 1, ((7, 7), 0): 1, ((5, 7), 0): 1, ((1, 0), 1): 1, ((5, 6), 0): 1, ((6, 7), 0): 1, ((7, 3), 4): 1, ((9, 7), 2): 1, ((5, 9), 0): 1, ((1, 6), 0): 1, ((0, 3), 0): 1, ((2, 5), 0): 1, ((8, 8), 0): 1, ((3, 3), 0): 1, ((6, 4), 2): 1, ((7, 9), 0): 1, ((3, 9), 0): 1, ((1, 7), 0): 1, ((4, 9), 0): 1, ((3, 2), 1): 1, ((6, 8), 0): 1, ((3, 5), 0): 1, ((1, 4), 0): 1, ((2, 9), 0): 1, ((2, 3), 0): 1, ((0, 0), 0): 1, ((0, 5), 0): 1, ((1, 9), 0): 1, ((8, 4), 4): 1, ((5, 8), 0): 1, ((0, 8), 0): 1, ((9, 0), 9): 1, ((4, 0), 4): 1, ((9, 5), 4): 1, ((2, 8), 0): 1, ((7, 0), 7): 1, ((6, 2), 4): 1, ((6, 9), 0): 1, ((9, 1), 8): 1, ((9, 9), 0): 1, ((8, 1), 7): 1, ((8, 9), 0): 1, ((4, 5), 0): 1, ((9, 2), 7): 1})
Symbol-12 (int -> int -> int), Samples: 100,  Counter({((0, 1), 0): 2, ((2, 6), 12): 2, ((2, 8), 16): 2, ((9, 5), 45): 2, ((6, 0), 0): 2, ((2, 3), 6): 2, ((5, 9), 45): 2, ((4, 2), 8): 2, ((9, 9), 81): 2, ((1, 7), 7): 2, ((8, 3), 24): 2, ((6, 6), 36): 2, ((3, 6), 18): 2, ((5, 5), 25): 2, ((4, 5), 20): 2, ((3, 9), 27): 2, ((0, 7), 0): 2, ((2, 0), 0): 2, ((4, 9), 36): 2, ((9, 2), 18): 2, ((8, 8), 64): 2, ((9, 3), 27): 2, ((6, 1), 6): 2, ((5, 3), 15): 1, ((0, 6), 0): 1, ((8, 5), 40): 1, ((0, 3), 0): 1, ((9, 1), 9): 1, ((8, 9), 72): 1, ((7, 4), 28): 1, ((0, 9), 0): 1, ((0, 2), 0): 1, ((2, 1), 2): 1, ((3, 0), 0): 1, ((5, 7), 35): 1, ((7, 2), 14): 1, ((3, 1), 3): 1, ((9, 8), 72): 1, ((4, 4), 16): 1, ((6, 2), 12): 1, ((3, 5), 15): 1, ((4, 3), 12): 1, ((7, 9), 63): 1, ((2, 9), 18): 1, ((0, 0), 0): 1, ((8, 4), 32): 1, ((5, 8), 40): 1, ((1, 2), 2): 1, ((5, 6), 30): 1, ((2, 4), 8): 1, ((7, 7), 49): 1, ((1, 0), 0): 1, ((8, 1), 8): 1, ((9, 6), 54): 1, ((8, 2), 16): 1, ((6, 4), 24): 1, ((3, 2), 6): 1, ((0, 4), 0): 1, ((9, 7), 63): 1, ((4, 1), 4): 1, ((3, 4), 12): 1, ((7, 6), 42): 1, ((8, 7), 56): 1, ((9, 0), 0): 1, ((1, 3), 3): 1, ((1, 5), 5): 1, ((7, 5), 35): 1, ((5, 1), 5): 1, ((4, 6), 24): 1, ((4, 7), 28): 1, ((3, 3), 9): 1, ((5, 2), 10): 1, ((6, 5), 30): 1, ((4, 8), 32): 1, ((6, 3), 18): 1, ((6, 8), 48): 1, ((7, 0), 0): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((7, 4), 2): 2, ((3, 8), 1): 2, ((4, 1), 4): 2, ((0, 4), 0): 2, ((0, 6), 0): 2, ((9, 9), 1): 2, ((9, 3), 3): 2, ((2, 1), 2): 2, ((8, 7), 2): 2, ((5, 5), 1): 2, ((3, 4), 1): 2, ((2, 8), 1): 2, ((2, 6), 1): 2, ((4, 2), 2): 2, ((5, 4), 2): 2, ((4, 9), 1): 2, ((6, 7), 1): 2, ((5, 3), 2): 2, ((8, 9), 1): 2, ((0, 9), 0): 2, ((2, 9), 1): 2, ((3, 3), 1): 2, ((8, 4), 2): 2, ((7, 3), 3): 2, ((6, 5), 2): 2, ((1, 7), 1): 2, ((7, 1), 7): 1, ((0, 8), 0): 1, ((1, 8), 1): 1, ((7, 2), 4): 1, ((1, 1), 1): 1, ((4, 5), 1): 1, ((6, 6), 1): 1, ((4, 7), 1): 1, ((7, 6), 2): 1, ((8, 3), 3): 1, ((8, 2), 4): 1, ((6, 1), 6): 1, ((9, 2), 5): 1, ((4, 4), 1): 1, ((0, 7), 0): 1, ((6, 9), 1): 1, ((9, 5), 2): 1, ((1, 2), 1): 1, ((9, 8), 2): 1, ((7, 5), 2): 1, ((3, 1), 3): 1, ((5, 2), 3): 1, ((7, 9), 1): 1, ((5, 8), 1): 1, ((5, 6), 1): 1, ((8, 1), 8): 1, ((3, 2), 2): 1, ((7, 8), 1): 1, ((2, 5), 1): 1, ((3, 5), 1): 1, ((9, 1), 9): 1, ((3, 6), 1): 1, ((0, 5), 0): 1, ((8, 8), 1): 1, ((2, 2), 1): 1, ((5, 9), 1): 1, ((9, 6), 2): 1, ((8, 5), 2): 1, ((6, 3), 2): 1, ((1, 6), 1): 1, ((0, 2), 0): 1, ((7, 7), 1): 1, ((5, 1), 5): 1, ((5, 7), 1): 1, ((6, 4), 2): 1, ((1, 4), 1): 1, ((2, 7), 1): 1, ((4, 3), 2): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
100 [((0, 0), 0), ((0, 1), 1), ((0, 2), 2), ((0, 3), 3), ((0, 4), 4), ((0, 5), 5), ((0, 6), 6), ((0, 7), 7), ((0, 8), 8), ((0, 9), 9), ((1, 0), 1), ((1, 1), 2), ((1, 2), 3), ((1, 3), 4), ((1, 4), 5), ((1, 5), 6), ((1, 6), 7), ((1, 7), 8), ((1, 8), 9), ((1, 9), 10), ((2, 0), 2), ((2, 1), 3), ((2, 2), 4), ((2, 3), 5), ((2, 4), 6), ((2, 5), 7), ((2, 6), 8), ((2, 7), 9), ((2, 8), 10), ((2, 9), 11), ((3, 0), 3), ((3, 1), 4), ((3, 2), 5), ((3, 3), 6), ((3, 4), 7), ((3, 5), 8), ((3, 6), 9), ((3, 7), 10), ((3, 8), 11), ((3, 9), 12), ((4, 0), 4), ((4, 1), 5), ((4, 2), 6), ((4, 3), 7), ((4, 4), 8), ((4, 5), 9), ((4, 6), 10), ((4, 7), 11), ((4, 8), 12), ((4, 9), 13), ((5, 0), 5), ((5, 1), 6), ((5, 2), 7), ((5, 3), 8), ((5, 4), 9), ((5, 5), 10), ((5, 6), 11), ((5, 7), 12), ((5, 8), 13), ((5, 9), 14), ((6, 0), 6), ((6, 1), 7), ((6, 2), 8), ((6, 3), 9), ((6, 4), 10), ((6, 5), 11), ((6, 6), 12), ((6, 7), 13), ((6, 8), 14), ((6, 9), 15), ((7, 0), 7), ((7, 1), 8), ((7, 2), 9), ((7, 3), 10), ((7, 4), 11), ((7, 5), 12), ((7, 6), 13), ((7, 7), 14), ((7, 8), 15), ((7, 9), 16), ((8, 0), 8), ((8, 1), 9), ((8, 2), 10), ((8, 3), 11), ((8, 4), 12), ((8, 5), 13), ((8, 6), 14), ((8, 7), 15), ((8, 8), 16), ((8, 9), 17), ((9, 0), 9), ((9, 1), 10), ((9, 2), 11), ((9, 3), 12), ((9, 4), 13), ((9, 5), 14), ((9, 6), 15), ((9, 7), 16), ((9, 8), 17), ((9, 9), 18)]
100 [((0, 0), 0), ((0, 1), 0), ((0, 2), 0), ((0, 3), 0), ((0, 4), 0), ((0, 5), 0), ((0, 6), 0), ((0, 7), 0), ((0, 8), 0), ((0, 9), 0), ((1, 0), 1), ((1, 1), 0), ((1, 2), 0), ((1, 3), 0), ((1, 4), 0), ((1, 5), 0), ((1, 6), 0), ((1, 7), 0), ((1, 8), 0), ((1, 9), 0), ((2, 0), 2), ((2, 1), 1), ((2, 2), 0), ((2, 3), 0), ((2, 4), 0), ((2, 5), 0), ((2, 6), 0), ((2, 7), 0), ((2, 8), 0), ((2, 9), 0), ((3, 0), 3), ((3, 1), 2), ((3, 2), 1), ((3, 3), 0), ((3, 4), 0), ((3, 5), 0), ((3, 6), 0), ((3, 7), 0), ((3, 8), 0), ((3, 9), 0), ((4, 0), 4), ((4, 1), 3), ((4, 2), 2), ((4, 3), 1), ((4, 4), 0), ((4, 5), 0), ((4, 6), 0), ((4, 7), 0), ((4, 8), 0), ((4, 9), 0), ((5, 0), 5), ((5, 1), 4), ((5, 2), 3), ((5, 3), 2), ((5, 4), 1), ((5, 5), 0), ((5, 6), 0), ((5, 7), 0), ((5, 8), 0), ((5, 9), 0), ((6, 0), 6), ((6, 1), 5), ((6, 2), 4), ((6, 3), 3), ((6, 4), 2), ((6, 5), 1), ((6, 6), 0), ((6, 7), 0), ((6, 8), 0), ((6, 9), 0), ((7, 0), 7), ((7, 1), 6), ((7, 2), 5), ((7, 3), 4), ((7, 4), 3), ((7, 5), 2), ((7, 6), 1), ((7, 7), 0), ((7, 8), 0), ((7, 9), 0), ((8, 0), 8), ((8, 1), 7), ((8, 2), 6), ((8, 3), 5), ((8, 4), 4), ((8, 5), 3), ((8, 6), 2), ((8, 7), 1), ((8, 8), 0), ((8, 9), 0), ((9, 0), 9), ((9, 1), 8), ((9, 2), 7), ((9, 3), 6), ((9, 4), 5), ((9, 5), 4), ((9, 6), 3), ((9, 7), 2), ((9, 8), 1), ((9, 9), 0)]
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr (decr0 0)))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 (decr0 (if0 (decr0 $0) $0 $1)) $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.77
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 (if0 $0 $1 ($2 $1 (decr0 $0))) $1 $0))))))) 0.36
Epoch time: 13m 36s
------------------------------
Epoch 6/9 (max_len=3, data=4405)
Train acc: 80.72 (abduce 100.00)
Hit samples:  4405  Ave length:  2.55
Symbols:  14 Counter({10: 1000, 12: 1000, 13: 900, 1: 791, 7: 791, 4: 791, 9: 791, 2: 791, 8: 791, 3: 791, 6: 791, 5: 791, 0: 691, 11: 505})
Dep:  Counter({(1, -1, 1): 3405, (-1,): 1000})
Semantics: 14/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  Counter({((2, 2), 4): 1, ((2, 6), 12): 1, ((7, 9), 63): 1, ((0, 3), 0): 1, ((9, 6), 54): 1, ((1, 9), 9): 1, ((1, 3), 3): 1, ((5, 0), 0): 1, ((5, 4), 20): 1, ((0, 4), 0): 1, ((1, 6), 6): 1, ((4, 2), 8): 1, ((2, 9), 18): 1, ((6, 5), 30): 1, ((8, 5), 40): 1, ((3, 4), 12): 1, ((5, 2), 10): 1, ((3, 8), 24): 1, ((9, 8), 72): 1, ((3, 1), 3): 1, ((9, 4), 36): 1, ((7, 6), 42): 1, ((6, 0), 0): 1, ((3, 6), 18): 1, ((3, 7), 21): 1, ((9, 1), 9): 1, ((6, 8), 48): 1, ((9, 0), 0): 1, ((6, 9), 54): 1, ((9, 5), 45): 1, ((5, 9), 45): 1, ((2, 4), 8): 1, ((1, 2), 2): 1, ((5, 6), 30): 1, ((2, 1), 2): 1, ((6, 1), 6): 1, ((7, 8), 56): 1, ((7, 3), 21): 1, ((3, 9), 27): 1, ((4, 6), 24): 1, ((8, 4), 32): 1, ((3, 5), 15): 1, ((1, 8), 8): 1, ((4, 8), 32): 1, ((0, 1), 0): 1, ((4, 4), 16): 1, ((2, 7), 14): 1, ((6, 3), 18): 1, ((1, 5), 5): 1, ((9, 2), 18): 1, ((0, 9), 0): 1, ((1, 0), 0): 1, ((8, 8), 64): 1, ((5, 8), 40): 1, ((9, 9), 81): 1, ((8, 3), 24): 1, ((5, 7), 35): 1, ((6, 4), 24): 1, ((6, 7), 42): 1, ((2, 5), 10): 1, ((8, 2), 16): 1, ((8, 0), 0): 1, ((7, 5), 35): 1, ((4, 9), 36): 1, ((1, 7), 7): 1, ((4, 3), 12): 1, ((5, 5), 25): 1, ((8, 1), 8): 1, ((3, 3), 9): 1, ((0, 2), 0): 1, ((7, 0), 0): 1, ((4, 5), 20): 1, ((0, 5), 0): 1, ((8, 6), 48): 1, ((7, 4), 28): 1, ((4, 1), 4): 1, ((3, 2), 6): 1, ((0, 7), 0): 1, ((6, 2), 12): 1, ((9, 7), 63): 1, ((4, 0), 0): 1, ((1, 4), 4): 1, ((0, 8), 0): 1, ((2, 3), 6): 1, ((5, 1), 5): 1, ((3, 0), 0): 1, ((7, 7), 49): 1, ((0, 0), 0): 1, ((4, 7), 28): 1, ((6, 6), 36): 1, ((1, 1), 1): 1, ((8, 7), 56): 1, ((9, 3), 27): 1, ((5, 3), 15): 1, ((7, 2), 14): 1, ((0, 6), 0): 1, ((2, 0), 0): 1, ((8, 9), 72): 1, ((7, 1), 7): 1, ((2, 8), 16): 1})
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((2, 3), 1): 2, ((2, 2), 1): 2, ((8, 6), 2): 2, ((5, 3), 2): 2, ((7, 6), 2): 2, ((6, 4), 2): 2, ((5, 2), 3): 2, ((5, 4), 2): 2, ((7, 1), 7): 2, ((3, 3), 1): 2, ((9, 4), 3): 2, ((9, 5), 2): 2, ((1, 1), 1): 2, ((7, 5), 2): 2, ((0, 5), 0): 2, ((4, 4), 1): 2, ((5, 1), 5): 2, ((7, 7), 1): 2, ((3, 7), 1): 2, ((0, 2), 0): 2, ((4, 6), 1): 2, ((0, 7), 0): 2, ((8, 1), 8): 2, ((8, 8), 1): 2, ((3, 9), 1): 2, ((6, 3), 2): 2, ((1, 6), 1): 1, ((4, 8), 1): 1, ((5, 6), 1): 1, ((1, 7), 1): 1, ((2, 8), 1): 1, ((1, 3), 1): 1, ((8, 2), 4): 1, ((3, 4), 1): 1, ((9, 7), 2): 1, ((4, 7), 1): 1, ((9, 3), 3): 1, ((5, 7), 1): 1, ((2, 6), 1): 1, ((0, 8), 0): 1, ((8, 7), 2): 1, ((6, 2), 3): 1, ((4, 3), 2): 1, ((6, 8), 1): 1, ((8, 4), 2): 1, ((6, 6), 1): 1, ((3, 5), 1): 1, ((6, 1), 6): 1, ((5, 5), 1): 1, ((9, 9), 1): 1, ((0, 6), 0): 1, ((0, 1), 0): 1, ((8, 9), 1): 1, ((4, 9), 1): 1, ((4, 1), 4): 1, ((5, 9), 1): 1, ((6, 9), 1): 1, ((1, 2), 1): 1, ((2, 4), 1): 1, ((6, 5), 2): 1, ((3, 6), 1): 1, ((9, 1), 9): 1, ((0, 3), 0): 1, ((7, 3), 3): 1, ((9, 6), 2): 1, ((4, 2), 2): 1, ((2, 9), 1): 1, ((1, 4), 1): 1, ((2, 5), 1): 1, ((7, 9), 1): 1, ((7, 8), 1): 1, ((6, 7), 1): 1, ((2, 1), 2): 1, ((2, 7), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
100 [((0, 0), 0), ((0, 1), 0), ((0, 2), 0), ((0, 3), 0), ((0, 4), 0), ((0, 5), 0), ((0, 6), 0), ((0, 7), 0), ((0, 8), 0), ((0, 9), 0), ((1, 0), 0), ((1, 1), 1), ((1, 2), 2), ((1, 3), 3), ((1, 4), 4), ((1, 5), 5), ((1, 6), 6), ((1, 7), 7), ((1, 8), 8), ((1, 9), 9), ((2, 0), 0), ((2, 1), 2), ((2, 2), 4), ((2, 3), 6), ((2, 4), 8), ((2, 5), 10), ((2, 6), 12), ((2, 7), 14), ((2, 8), 16), ((2, 9), 18), ((3, 0), 0), ((3, 1), 3), ((3, 2), 6), ((3, 3), 9), ((3, 4), 12), ((3, 5), 15), ((3, 6), 18), ((3, 7), 21), ((3, 8), 24), ((3, 9), 27), ((4, 0), 0), ((4, 1), 4), ((4, 2), 8), ((4, 3), 12), ((4, 4), 16), ((4, 5), 20), ((4, 6), 24), ((4, 7), 28), ((4, 8), 32), ((4, 9), 36), ((5, 0), 0), ((5, 1), 5), ((5, 2), 10), ((5, 3), 15), ((5, 4), 20), ((5, 5), 25), ((5, 6), 30), ((5, 7), 35), ((5, 8), 40), ((5, 9), 45), ((6, 0), 0), ((6, 1), 6), ((6, 2), 12), ((6, 3), 18), ((6, 4), 24), ((6, 5), 30), ((6, 6), 36), ((6, 7), 42), ((6, 8), 48), ((6, 9), 54), ((7, 0), 0), ((7, 1), 7), ((7, 2), 14), ((7, 3), 21), ((7, 4), 28), ((7, 5), 35), ((7, 6), 42), ((7, 7), 49), ((7, 8), 56), ((7, 9), 63), ((8, 0), 0), ((8, 1), 8), ((8, 2), 16), ((8, 3), 24), ((8, 4), 32), ((8, 5), 40), ((8, 6), 48), ((8, 7), 56), ((8, 8), 64), ((8, 9), 72), ((9, 0), 0), ((9, 1), 9), ((9, 2), 18), ((9, 3), 27), ((9, 4), 36), ((9, 5), 45), ((9, 6), 54), ((9, 7), 63), ((9, 8), 72), ((9, 9), 81)]
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr (decr0 0)))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $1 ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Epoch time: 13m 39s
------------------------------
Epoch 7/9 (max_len=3, data=4405)
Train acc: 100.00 (abduce 100.00)
Hit samples:  4405  Ave length:  2.55
Symbols:  14 Counter({10: 1000, 12: 1000, 13: 900, 4: 791, 1: 791, 7: 791, 6: 791, 5: 791, 9: 791, 2: 791, 3: 791, 8: 791, 0: 691, 11: 505})
Dep:  Counter({(1, -1, 1): 3405, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((6, 3), 2): 2, ((4, 3), 2): 2, ((8, 9), 1): 2, ((5, 2), 3): 2, ((1, 4), 1): 2, ((7, 7), 1): 2, ((5, 1), 5): 2, ((2, 1), 2): 2, ((6, 4), 2): 2, ((3, 6), 1): 2, ((7, 6), 2): 2, ((7, 9), 1): 2, ((0, 5), 0): 2, ((2, 8), 1): 2, ((5, 3), 2): 2, ((0, 6), 0): 2, ((4, 7), 1): 2, ((0, 3), 0): 2, ((7, 3), 3): 2, ((3, 8), 1): 2, ((6, 7), 1): 2, ((1, 1), 1): 2, ((4, 4), 1): 2, ((1, 9), 1): 2, ((9, 5), 2): 2, ((9, 7), 2): 2, ((0, 8), 0): 2, ((6, 2), 3): 2, ((7, 4), 2): 2, ((3, 9), 1): 2, ((4, 9), 1): 1, ((0, 2), 0): 1, ((5, 5), 1): 1, ((1, 8), 1): 1, ((8, 2), 4): 1, ((3, 1), 3): 1, ((5, 7), 1): 1, ((3, 5), 1): 1, ((9, 1), 9): 1, ((8, 4), 2): 1, ((2, 5), 1): 1, ((2, 4), 1): 1, ((0, 1), 0): 1, ((8, 6), 2): 1, ((1, 3), 1): 1, ((2, 9), 1): 1, ((8, 1), 8): 1, ((9, 6), 2): 1, ((5, 4), 2): 1, ((9, 2), 5): 1, ((2, 6), 1): 1, ((9, 8), 2): 1, ((7, 1), 7): 1, ((3, 3), 1): 1, ((3, 2), 2): 1, ((3, 4), 1): 1, ((0, 9), 0): 1, ((6, 8), 1): 1, ((9, 3), 3): 1, ((2, 3), 1): 1, ((0, 7), 0): 1, ((4, 6), 1): 1, ((6, 6), 1): 1, ((8, 3), 3): 1, ((6, 5), 2): 1, ((7, 2), 4): 1, ((7, 5), 2): 1, ((6, 1), 6): 1, ((8, 7), 2): 1, ((5, 9), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $1 ($2 $1 (decr0 $0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr (decr0 0)))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $1 ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Epoch time: 14m 23s
------------------------------
Epoch 8/9 (max_len=3, data=4405)
Train acc: 100.00 (abduce 100.00)
Hit samples:  4405  Ave length:  2.55
Symbols:  14 Counter({10: 1000, 12: 1000, 13: 900, 1: 791, 5: 791, 2: 791, 4: 791, 8: 791, 7: 791, 9: 791, 3: 791, 6: 791, 0: 691, 11: 505})
Dep:  Counter({(1, -1, 1): 3405, (-1,): 1000})
Semantics: 14/13/1 (total/solved/learn).
Symbol-13 (int -> int -> int), Samples: 100,  Counter({((5, 7), 1): 2, ((3, 9), 1): 2, ((2, 9), 1): 2, ((4, 9), 1): 2, ((9, 1), 9): 2, ((9, 6), 2): 2, ((6, 4), 2): 2, ((1, 4), 1): 2, ((5, 4), 2): 2, ((4, 4), 1): 2, ((9, 3), 3): 2, ((5, 9), 1): 2, ((9, 7), 2): 2, ((4, 7), 1): 2, ((5, 8), 1): 2, ((4, 3), 2): 2, ((9, 5), 2): 2, ((6, 8), 1): 2, ((8, 4), 2): 2, ((6, 3), 2): 2, ((3, 8), 1): 2, ((4, 5), 1): 2, ((9, 8), 2): 2, ((3, 4), 1): 2, ((0, 8), 0): 2, ((8, 9), 1): 2, ((2, 3), 1): 2, ((7, 7), 1): 2, ((6, 1), 6): 2, ((5, 3), 2): 1, ((5, 5), 1): 1, ((2, 2), 1): 1, ((0, 3), 0): 1, ((7, 8), 1): 1, ((0, 2), 0): 1, ((7, 1), 7): 1, ((3, 6), 1): 1, ((1, 5), 1): 1, ((4, 2), 2): 1, ((9, 9), 1): 1, ((1, 7), 1): 1, ((5, 1), 5): 1, ((2, 1), 2): 1, ((3, 2), 2): 1, ((3, 3), 1): 1, ((0, 5), 0): 1, ((8, 2), 4): 1, ((8, 3), 3): 1, ((8, 6), 2): 1, ((2, 4), 1): 1, ((8, 1), 8): 1, ((4, 6), 1): 1, ((0, 1), 0): 1, ((6, 5), 2): 1, ((7, 5), 2): 1, ((2, 7), 1): 1, ((7, 3), 3): 1, ((8, 5), 2): 1, ((7, 9), 1): 1, ((3, 7), 1): 1, ((0, 9), 0): 1, ((2, 6), 1): 1, ((2, 5), 1): 1, ((1, 1), 1): 1, ((3, 5), 1): 1, ((7, 6), 2): 1, ((0, 6), 0): 1, ((9, 4), 3): 1, ((0, 4), 0): 1, ((1, 9), 1): 1, ((6, 9), 1): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $1 ($2 $1 (decr0 $0))))))))))
Reusing dreams from previous iteration.
Reusing dreams from previous iteration.
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr (decr0 0)))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) $1 ($2 $1 (decr0 $0)))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Epoch time: 14m 31s
------------------------------
Epoch 9/9 (max_len=3, data=4405)
Train acc: 100.00 (abduce 100.00)
Hit samples:  4405  Ave length:  2.55
Symbols:  14 Counter({10: 1000, 12: 1000, 13: 900, 6: 791, 9: 791, 3: 791, 5: 791, 8: 791, 7: 791, 4: 791, 2: 791, 1: 791, 0: 691, 11: 505})
Dep:  Counter({(1, -1, 1): 3405, (-1,): 1000})
result accuracy by length:
1 ( 3%) 100.00
3 (12%) 100.00
5 (55%) 99.05
7 (29%) 98.13
result accuracy by symbol:
* (45%) 97.61
+ (45%) 99.66
- (45%) 99.59
/ (42%) 99.78
0 (23%) 99.87
1 (28%) 99.89
2 (29%) 99.79
3 (28%) 99.34
4 (28%) 99.12
5 (28%) 98.25
6 (28%) 98.79
7 (28%) 98.35
8 (27%) 98.06
9 (28%) 97.40
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by res:
0 (24%) 99.87
1 ( 9%) 100.00
2 ( 5%) 100.00
3 ( 5%) 100.00
4 ( 4%) 100.00
5 ( 4%) 100.00
6 ( 4%) 100.00
7 ( 4%) 100.00
8 ( 4%) 100.00
9 ( 4%) 100.00
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 99.15
unseen (41%) 98.59
val (Perception Acc=100.00, Syntax Acc=100.00, Result Acc=98.92)
Epoch time: 0m 3s
------------------------------
result accuracy by length:
1 ( 3%) 100.00
3 (12%) 100.00
5 (55%) 99.05
7 (29%) 98.13
result accuracy by symbol:
* (45%) 97.61
+ (45%) 99.66
- (45%) 99.59
/ (42%) 99.78
0 (23%) 99.87
1 (28%) 99.89
2 (29%) 99.79
3 (28%) 99.34
4 (28%) 99.12
5 (28%) 98.25
6 (28%) 98.79
7 (28%) 98.35
8 (27%) 98.06
9 (28%) 97.40
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by res:
0 (24%) 99.87
1 ( 9%) 100.00
2 ( 5%) 100.00
3 ( 5%) 100.00
4 ( 4%) 100.00
5 ( 4%) 100.00
6 ( 4%) 100.00
7 ( 4%) 100.00
8 ( 4%) 100.00
9 ( 4%) 100.00
result accuracy by condition:
long ( 0%)  0.00
seen (58%) 99.15
unseen (41%) 98.59
val (Perception Acc=100.00, Syntax Acc=100.00, Result Acc=98.92)
Best val acc: 98.92
------------------------------
Evaluate on test set...
result accuracy by length:
1 ( 1%) 100.00
3 ( 5%) 100.00
5 (30%) 99.05
7 (16%) 98.13
9 (12%) 98.63
11 ( 9%) 98.39
13 ( 7%) 94.93
15 ( 5%) 94.56
17 ( 4%) 95.67
19 ( 3%) 94.18
21 ( 2%) 90.36
result accuracy by symbol:
* (62%) 96.35
+ (62%) 97.79
- (61%) 97.59
/ (59%) 97.82
0 (33%) 98.37
1 (39%) 98.19
2 (38%) 98.08
3 (39%) 97.44
4 (38%) 97.03
5 (39%) 96.70
6 (39%) 97.18
7 (38%) 96.65
8 (39%) 96.37
9 (39%) 95.89
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by res:
0 (24%) 97.76
1 ( 7%) 99.77
2 ( 4%) 100.00
3 ( 4%) 99.61
4 ( 4%) 99.18
5 ( 4%) 99.19
6 ( 4%) 99.58
7 ( 4%) 100.00
8 ( 4%) 99.61
9 ( 3%) 99.57
result accuracy by condition:
long (45%) 96.34
seen (31%) 99.13
unseen (22%) 98.59
test (Perception Acc=100.00, Syntax Acc=100.00, Result Acc=97.73)
