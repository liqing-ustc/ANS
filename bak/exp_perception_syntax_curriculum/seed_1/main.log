train: 11170 val: 4900 test: 48910
CUDA is available?: True
using cuda?: True
Namespace(curriculum=True, epochs=100, epochs_eval=5, excludes='!', output_dir='./outputs/exp_perception_syntax_curriculum/seed_1/', perception=True, perception_pretrain='data/perception-pretrain/model.pth.tar_78.2_match', resume=None, seed=1, semantics=False, syntax=True)
use ground-truth perception.
use ground-truth syntax.
Symbol-00: None 0.00
Symbol-01: None 0.00
Symbol-02: None 0.00
Symbol-03: None 0.00
Symbol-04: None 0.00
Symbol-05: None 0.00
Symbol-06: None 0.00
Symbol-07: None 0.00
Symbol-08: None 0.00
Symbol-09: None 0.00
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Curriculum: [(0, 1), (1, 3), (20, 7), (40, 11), (60, 15), (80, inf)]
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%)  0.00
3 ( 2%)  0.00
5 ( 2%)  0.00
7 ( 4%)  0.00
9 ( 4%)  0.00
11 ( 3%)  0.00
13 ( 4%)  0.00
15 ( 4%)  0.00
17 ( 4%)  0.00
19 ( 4%)  0.00
21 ( 4%)  0.00
23 ( 4%)  0.00
25 ( 4%)  0.00
27 ( 4%)  0.00
29 ( 3%)  0.00
31 ( 3%)  0.00
33 ( 2%)  0.00
35 ( 2%)  0.00
37 ( 2%)  0.00
39 ( 3%)  0.00
41 ( 3%)  0.00
43 ( 2%)  0.00
45 ( 2%)  0.00
47 ( 2%)  0.00
49 ( 2%)  0.00
51 ( 2%)  0.00
53 ( 2%)  0.00
55 ( 2%)  0.00
57 ( 2%)  0.00
59 ( 2%)  0.00
61 ( 1%)  0.00
63 ( 0%)  0.00
65 ( 0%)  0.00
67 ( 0%)  0.00
result accuracy by symbol:
( (91%)  0.00
) (91%)  0.00
* (87%)  0.00
+ (84%)  0.00
- (77%)  0.00
/ (76%)  0.00
0 (52%)  0.00
1 (60%)  0.00
2 (61%)  0.00
3 (62%)  0.00
4 (61%)  0.00
5 (62%)  0.00
6 (62%)  0.00
7 (63%)  0.00
8 (64%)  0.00
9 (63%)  0.00
result accuracy by digit:
0 ( 0%)  0.00
1 ( 0%)  0.00
2 ( 0%)  0.00
3 ( 0%)  0.00
4 ( 0%)  0.00
5 ( 0%)  0.00
6 ( 0%)  0.00
7 ( 0%)  0.00
8 ( 0%)  0.00
9 ( 0%)  0.00
result accuracy by result:
0 (21%)  0.00
1 (10%)  0.00
2 ( 4%)  0.00
3 ( 2%)  0.00
4 ( 2%)  0.00
5 ( 2%)  0.00
6 ( 2%)  0.00
7 ( 2%)  0.00
8 ( 2%)  0.00
9 ( 1%)  0.00
result accuracy by generalization:
1 (22.45%)  0.00
2 (22.96%)  0.00
3 (22.53%)  0.00
4 (15.82%)  0.00
5 (16.24%)  0.00
error cases:
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
7 7 [-1] [-1] 7 None
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=0.00)
------------------------------
Epoch 0/99 (max_len=1, data=1000)
Train acc: 0.00 (abduce 100.00)
Hit samples:  1000  Ave length:  1.0
Symbols:  10 [(0, 100), (1, 100), (2, 100), (3, 100), (4, 100), (5, 100), (6, 100), (7, 100), (8, 100), (9, 100)]
Head:  [((-1,), 1000)]
Semantics: 16/0/10 (total/solved/learn).
Symbol-00 (int), Samples: 100,  [(((), 0), 100)]
Symbol-01 (int), Samples: 100,  [(((), 1), 100)]
Symbol-02 (int), Samples: 100,  [(((), 2), 100)]
Symbol-03 (int), Samples: 100,  [(((), 3), 100)]
Symbol-04 (int), Samples: 100,  [(((), 4), 100)]
Symbol-05 (int), Samples: 100,  [(((), 5), 100)]
Symbol-06 (int), Samples: 100,  [(((), 6), 100)]
Symbol-07 (int), Samples: 100,  [(((), 7), 100)]
Symbol-08 (int), Samples: 100,  [(((), 8), 100)]
Symbol-09 (int), Samples: 100,  [(((), 9), 100)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 0m 16s
------------------------------
Epoch 1/99 (max_len=3, data=2170)
Train acc: 45.96 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/10/4 (total/solved/learn).
Symbol-10 (int -> int -> int), Samples: 100,  [(((0, 5), 5), 3), (((0, 1), 1), 3), (((1, 7), 8), 3), (((2, 2), 4), 2), (((5, 9), 14), 2), (((9, 2), 11), 2), (((7, 9), 16), 2), (((2, 5), 7), 2), (((4, 3), 7), 2), (((4, 5), 9), 2)]
Symbol-11 (int -> int -> int), Samples: 100,  [(((3, 6), 0), 3), (((3, 2), 1), 3), (((5, 3), 2), 3), (((5, 5), 0), 3), (((2, 5), 0), 2), (((9, 6), 3), 2), (((4, 8), 0), 2), (((8, 8), 0), 2), (((2, 2), 0), 2), (((9, 7), 2), 2)]
Symbol-12 (int -> int -> int), Samples: 100,  [(((4, 8), 32), 3), (((9, 5), 45), 3), (((3, 3), 9), 3), (((9, 3), 27), 3), (((0, 3), 0), 3), (((1, 4), 4), 3), (((2, 3), 6), 3), (((1, 7), 7), 3), (((7, 4), 28), 2), (((6, 0), 0), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((3, 7), 1), 3), (((1, 1), 1), 3), (((8, 1), 8), 3), (((0, 6), 0), 2), (((5, 4), 2), 2), (((7, 2), 4), 2), (((5, 6), 1), 2), (((4, 9), 1), 2), (((6, 9), 1), 2), (((4, 1), 4), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Rescoring 10 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (if0 $1 0 $0))) 0.28
Symbol-13: fn (lambda (lambda (if0 (decr0 $1) $1 (incr (decr0 (if0 (decr0 $0) $1 0)))))) 0.69
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 10m 11s
------------------------------
Epoch 2/99 (max_len=3, data=2170)
Train acc: 86.15 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 9), 45), 3), (((9, 2), 18), 3), (((3, 2), 6), 3), (((9, 4), 36), 3), (((7, 3), 21), 3), (((2, 2), 4), 3), (((2, 8), 16), 3), (((5, 7), 35), 3), (((8, 6), 48), 3), (((4, 2), 8), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((9, 2), 5), 3), (((9, 3), 3), 3), (((3, 2), 2), 3), (((8, 2), 4), 3), (((7, 2), 4), 3), (((5, 3), 2), 3), (((6, 2), 3), 3), (((7, 6), 2), 3), (((8, 4), 2), 3), (((4, 2), 2), 3)]
Update grammar with invented programs and set frontiers to none.
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (if0 $1 0 $0))) 0.28
Symbol-13: fn (lambda (lambda (incr (if0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) 0 (incr 0))))) 0.72
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 10m 17s
------------------------------
Epoch 3/99 (max_len=3, data=2170)
Train acc: 86.57 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 2), 16), 3), (((6, 5), 30), 3), (((4, 7), 28), 3), (((5, 6), 30), 3), (((8, 8), 64), 3), (((4, 4), 16), 3), (((9, 5), 45), 3), (((6, 2), 12), 3), (((2, 2), 4), 2), (((9, 3), 27), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((0, 3), 0), 3), (((0, 2), 0), 3), (((5, 2), 3), 3), (((9, 1), 9), 3), (((0, 5), 0), 3), (((8, 2), 4), 3), (((9, 2), 5), 3), (((7, 2), 4), 3), (((0, 1), 0), 3), (((8, 1), 8), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (if0 $1 0 $0))) 0.28
Symbol-13: fn (lambda (lambda (if0 $1 $1 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0))))) 0.77
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 20s
------------------------------
Epoch 4/99 (max_len=3, data=2170)
Train acc: 87.12 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/12/2 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((4, 5), 20), 3), (((3, 1), 3), 3), (((8, 2), 16), 3), (((2, 2), 4), 3), (((4, 8), 32), 3), (((3, 5), 15), 3), (((3, 7), 21), 2), (((9, 6), 54), 2), (((9, 4), 36), 2), (((5, 6), 30), 2)]
Symbol-13 (int -> int -> int), Samples: 100,  [(((9, 2), 5), 3), (((7, 3), 3), 3), (((5, 3), 2), 3), (((4, 5), 1), 3), (((7, 4), 2), 3), (((6, 2), 3), 3), (((4, 2), 2), 3), (((8, 5), 2), 3), (((8, 6), 2), 3), (((6, 3), 2), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (if0 $1 0 $0))) 0.28
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 79.00
5 ( 2%) 58.14
7 ( 4%) 44.98
9 ( 4%) 48.24
11 ( 3%) 43.18
13 ( 4%) 49.07
15 ( 4%) 45.54
17 ( 4%) 44.17
19 ( 4%) 47.06
21 ( 4%) 45.96
23 ( 4%) 43.90
25 ( 4%) 41.00
27 ( 4%) 48.77
29 ( 3%) 46.60
31 ( 3%) 41.67
33 ( 2%) 40.00
35 ( 2%) 38.36
37 ( 2%) 40.17
39 ( 3%) 37.50
41 ( 3%) 38.93
43 ( 2%) 35.51
45 ( 2%) 39.29
47 ( 2%) 43.94
49 ( 2%) 41.55
51 ( 2%) 41.67
53 ( 2%) 43.28
55 ( 2%) 36.13
57 ( 2%) 38.46
59 ( 2%) 38.32
61 ( 1%) 37.50
63 ( 0%) 40.00
65 ( 0%) 44.44
67 ( 0%) 100.00
result accuracy by symbol:
( (91%) 42.87
) (91%) 42.87
* (87%) 37.60
+ (84%) 42.77
- (77%) 47.30
/ (76%) 46.34
0 (52%) 48.40
1 (60%) 45.21
2 (61%) 43.36
3 (62%) 43.02
4 (61%) 42.22
5 (62%) 42.22
6 (62%) 41.13
7 (63%) 41.69
8 (64%) 40.73
9 (63%) 41.00
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 91.52
1 (10%) 75.66
2 ( 4%) 70.20
3 ( 2%) 69.63
4 ( 2%) 61.65
5 ( 2%) 74.00
6 ( 2%) 65.22
7 ( 2%) 74.34
8 ( 2%) 54.70
9 ( 1%) 73.26
result accuracy by generalization:
1 (22.45%) 70.64
2 (22.96%) 64.44
3 (22.53%)  8.33
4 (15.82%) 61.68
5 (16.24%) 18.09
error cases:
5*9 5*9 [1, -1, 1] [1, -1, 1] 45 9
9*1 9*1 [1, -1, 1] [1, -1, 1] 9 1
4*6 4*6 [1, -1, 1] [1, -1, 1] 24 6
6*4 6*4 [1, -1, 1] [1, -1, 1] 24 4
3*5 3*5 [1, -1, 1] [1, -1, 1] 15 5
5*5 5*5 [1, -1, 1] [1, -1, 1] 25 5
2*4 2*4 [1, -1, 1] [1, -1, 1] 8 4
5*3 5*3 [1, -1, 1] [1, -1, 1] 15 3
7*9 7*9 [1, -1, 1] [1, -1, 1] 63 9
8*1 8*1 [1, -1, 1] [1, -1, 1] 8 1
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=45.22)
Epoch time: 5m 35s
------------------------------
Epoch 5/99 (max_len=3, data=2170)
Train acc: 90.03 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((4, 5), 20), 3), (((2, 1), 2), 3), (((2, 4), 8), 3), (((4, 2), 8), 3), (((8, 5), 40), 3), (((6, 3), 18), 2), (((5, 8), 40), 2), (((9, 9), 81), 2), (((3, 1), 3), 2), (((3, 2), 6), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 2 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (if0 $1 0 $0))) 0.28
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 17s
------------------------------
Epoch 6/99 (max_len=3, data=2170)
Train acc: 90.03 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 8), 16), 3), (((5, 1), 5), 3), (((7, 5), 35), 3), (((6, 1), 6), 3), (((6, 4), 24), 3), (((8, 3), 24), 2), (((3, 2), 6), 2), (((4, 9), 36), 2), (((3, 7), 21), 2), (((5, 4), 20), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (if0 $1 0 $0))) 0.28
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 18s
------------------------------
Epoch 7/99 (max_len=3, data=2170)
Train acc: 90.03 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((4, 2), 8), 3), (((7, 5), 35), 3), (((8, 8), 64), 3), (((2, 4), 8), 3), (((2, 3), 6), 3), (((9, 3), 27), 3), (((6, 5), 30), 2), (((6, 6), 36), 2), (((8, 7), 56), 2), (((3, 2), 6), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (if0 $1 0 $0))) 0.28
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 18s
------------------------------
Epoch 8/99 (max_len=3, data=2170)
Train acc: 90.03 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 2), 4), 3), (((3, 4), 12), 3), (((7, 3), 21), 3), (((6, 8), 48), 3), (((6, 2), 12), 3), (((7, 6), 42), 3), (((2, 7), 14), 3), (((6, 1), 6), 3), (((2, 1), 2), 3), (((9, 5), 45), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (if0 $1 0 $0))) 0.28
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 18s
------------------------------
Epoch 9/99 (max_len=3, data=2170)
Train acc: 90.03 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((3, 5), 15), 3), (((9, 1), 9), 3), (((5, 9), 45), 3), (((2, 2), 4), 3), (((9, 8), 72), 3), (((8, 1), 8), 3), (((4, 7), 28), 3), (((4, 3), 12), 2), (((8, 4), 32), 2), (((7, 2), 14), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (if0 $1 0 $0))) 0.28
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 79.00
5 ( 2%) 58.14
7 ( 4%) 44.98
9 ( 4%) 48.24
11 ( 3%) 43.18
13 ( 4%) 49.07
15 ( 4%) 45.54
17 ( 4%) 44.17
19 ( 4%) 47.06
21 ( 4%) 45.96
23 ( 4%) 43.90
25 ( 4%) 41.00
27 ( 4%) 48.77
29 ( 3%) 46.60
31 ( 3%) 41.67
33 ( 2%) 40.00
35 ( 2%) 38.36
37 ( 2%) 40.17
39 ( 3%) 37.50
41 ( 3%) 38.93
43 ( 2%) 35.51
45 ( 2%) 39.29
47 ( 2%) 43.94
49 ( 2%) 41.55
51 ( 2%) 41.67
53 ( 2%) 43.28
55 ( 2%) 36.13
57 ( 2%) 38.46
59 ( 2%) 38.32
61 ( 1%) 37.50
63 ( 0%) 40.00
65 ( 0%) 44.44
67 ( 0%) 100.00
result accuracy by symbol:
( (91%) 42.87
) (91%) 42.87
* (87%) 37.60
+ (84%) 42.77
- (77%) 47.30
/ (76%) 46.34
0 (52%) 48.40
1 (60%) 45.21
2 (61%) 43.36
3 (62%) 43.02
4 (61%) 42.22
5 (62%) 42.22
6 (62%) 41.13
7 (63%) 41.69
8 (64%) 40.73
9 (63%) 41.00
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 91.52
1 (10%) 75.66
2 ( 4%) 70.20
3 ( 2%) 69.63
4 ( 2%) 61.65
5 ( 2%) 74.00
6 ( 2%) 65.22
7 ( 2%) 74.34
8 ( 2%) 54.70
9 ( 1%) 73.26
result accuracy by generalization:
1 (22.45%) 70.64
2 (22.96%) 64.44
3 (22.53%)  8.33
4 (15.82%) 61.68
5 (16.24%) 18.09
error cases:
5*9 5*9 [1, -1, 1] [1, -1, 1] 45 9
9*1 9*1 [1, -1, 1] [1, -1, 1] 9 1
4*6 4*6 [1, -1, 1] [1, -1, 1] 24 6
6*4 6*4 [1, -1, 1] [1, -1, 1] 24 4
3*5 3*5 [1, -1, 1] [1, -1, 1] 15 5
5*5 5*5 [1, -1, 1] [1, -1, 1] 25 5
2*4 2*4 [1, -1, 1] [1, -1, 1] 8 4
5*3 5*3 [1, -1, 1] [1, -1, 1] 15 3
7*9 7*9 [1, -1, 1] [1, -1, 1] 63 9
8*1 8*1 [1, -1, 1] [1, -1, 1] 8 1
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=45.22)
Epoch time: 5m 32s
------------------------------
Epoch 10/99 (max_len=3, data=2170)
Train acc: 90.03 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 6), 12), 3), (((3, 8), 24), 3), (((8, 9), 72), 3), (((7, 4), 28), 3), (((9, 9), 81), 3), (((6, 9), 54), 3), (((6, 8), 48), 3), (((2, 2), 4), 3), (((7, 7), 49), 3), (((8, 6), 48), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 1m 17s
------------------------------
Epoch 11/99 (max_len=3, data=2170)
Train acc: 96.53 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((3, 0), 0), 3), (((1, 8), 8), 3), (((0, 5), 0), 3), (((1, 3), 3), 3), (((1, 9), 9), 3), (((7, 0), 0), 3), (((0, 3), 0), 3), (((1, 4), 4), 3), (((1, 7), 7), 3), (((9, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 19s
------------------------------
Epoch 12/99 (max_len=3, data=2170)
Train acc: 96.53 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 3), (((0, 5), 0), 3), (((1, 3), 3), 3), (((0, 3), 0), 3), (((1, 8), 8), 3), (((5, 0), 0), 3), (((1, 4), 4), 3), (((0, 6), 0), 3), (((2, 0), 0), 3), (((0, 7), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 17s
------------------------------
Epoch 13/99 (max_len=3, data=2170)
Train acc: 96.53 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((1, 5), 5), 3), (((1, 4), 4), 3), (((1, 8), 8), 3), (((2, 0), 0), 3), (((4, 0), 0), 3), (((0, 3), 0), 3), (((0, 6), 0), 3), (((0, 5), 0), 3), (((7, 0), 0), 3), (((0, 9), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 17s
------------------------------
Epoch 14/99 (max_len=3, data=2170)
Train acc: 96.53 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 4), 0), 3), (((1, 6), 6), 3), (((0, 7), 0), 3), (((1, 9), 9), 3), (((0, 1), 0), 3), (((1, 4), 4), 3), (((1, 3), 3), 3), (((0, 5), 0), 3), (((3, 0), 0), 3), (((5, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 10m 0s
------------------------------
Epoch 15/99 (max_len=3, data=2170)
Train acc: 96.53 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((1, 2), 2), 3), (((0, 6), 0), 3), (((0, 8), 0), 3), (((9, 0), 0), 3), (((1, 9), 9), 3), (((4, 0), 0), 3), (((2, 0), 0), 3), (((0, 9), 0), 3), (((6, 0), 0), 3), (((0, 7), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 18s
------------------------------
Epoch 16/99 (max_len=3, data=2170)
Train acc: 96.53 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 6), 0), 3), (((0, 7), 0), 3), (((4, 0), 0), 3), (((1, 3), 3), 3), (((0, 9), 0), 3), (((1, 5), 5), 3), (((2, 0), 0), 3), (((1, 8), 8), 3), (((0, 8), 0), 3), (((6, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 22s
------------------------------
Epoch 17/99 (max_len=3, data=2170)
Train acc: 96.53 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 7), 0), 3), (((0, 6), 0), 3), (((0, 3), 0), 3), (((8, 0), 0), 3), (((4, 0), 0), 3), (((1, 7), 7), 3), (((1, 5), 5), 3), (((0, 9), 0), 3), (((0, 4), 0), 3), (((0, 5), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 22s
------------------------------
Epoch 18/99 (max_len=3, data=2170)
Train acc: 96.53 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 0), 0), 3), (((0, 6), 0), 3), (((0, 1), 0), 3), (((0, 7), 0), 3), (((1, 2), 2), 3), (((3, 0), 0), 3), (((0, 3), 0), 3), (((4, 0), 0), 3), (((1, 9), 9), 3), (((1, 5), 5), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
Epoch time: 5m 22s
------------------------------
Epoch 19/99 (max_len=3, data=2170)
Train acc: 96.53 (abduce 100.00)
Hit samples:  2170  Ave length:  2.08
Symbols:  14 [(0, 307), (1, 337), (2, 337), (3, 337), (4, 337), (5, 337), (6, 337), (7, 337), (8, 337), (9, 337), (10, 300), (11, 300), (12, 300), (13, 270)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 8), 0), 3), (((0, 9), 0), 3), (((0, 2), 0), 3), (((2, 0), 0), 3), (((3, 0), 0), 3), (((0, 4), 0), 3), (((0, 5), 0), 3), (((0, 7), 0), 3), (((1, 7), 7), 3), (((5, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.75
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 1.00
Symbol-14: None 0.00
Symbol-15: None 0.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 34s
------------------------------
Epoch 20/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((3, 0), 0), 5), (((0, 6), 0), 5), (((8, 0), 0), 5), (((9, 0), 0), 5), (((0, 3), 0), 5), (((0, 1), 0), 5), (((0, 9), 0), 4), (((0, 8), 0), 4), (((0, 2), 0), 4), (((1, 2), 2), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 21/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 7), 0), 8), (((8, 0), 0), 6), (((0, 8), 0), 6), (((1, 2), 2), 5), (((5, 0), 0), 5), (((1, 4), 4), 5), (((7, 0), 0), 5), (((0, 9), 0), 4), (((0, 1), 0), 4), (((4, 0), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 22/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 7), (((0, 3), 0), 5), (((7, 0), 0), 5), (((0, 2), 0), 5), (((0, 7), 0), 5), (((1, 4), 4), 5), (((0, 6), 0), 5), (((1, 2), 2), 4), (((1, 8), 8), 4), (((9, 0), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 23/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 8), 0), 6), (((0, 1), 0), 6), (((8, 0), 0), 6), (((1, 4), 4), 6), (((9, 0), 0), 5), (((0, 2), 0), 5), (((4, 0), 0), 5), (((3, 0), 0), 5), (((1, 2), 2), 5), (((0, 7), 0), 5)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 19s
------------------------------
Epoch 24/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 7), (((9, 0), 0), 6), (((0, 7), 0), 6), (((3, 0), 0), 6), (((4, 0), 0), 5), (((1, 5), 5), 4), (((1, 2), 2), 4), (((0, 8), 0), 4), (((1, 8), 8), 4), (((7, 0), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 35s
------------------------------
Epoch 25/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 2), 0), 7), (((8, 0), 0), 7), (((0, 7), 0), 6), (((1, 2), 2), 5), (((9, 0), 0), 4), (((7, 0), 0), 4), (((5, 0), 0), 4), (((0, 5), 0), 4), (((1, 4), 4), 4), (((0, 8), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 18s
------------------------------
Epoch 26/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 7), (((0, 7), 0), 6), (((9, 0), 0), 5), (((1, 5), 5), 5), (((0, 8), 0), 5), (((0, 1), 0), 4), (((1, 9), 9), 4), (((1, 2), 2), 4), (((3, 0), 0), 4), (((0, 6), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 23s
------------------------------
Epoch 27/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 7), (((1, 4), 4), 6), (((0, 3), 0), 6), (((9, 0), 0), 6), (((7, 0), 0), 5), (((0, 7), 0), 5), (((0, 8), 0), 5), (((5, 0), 0), 4), (((4, 0), 0), 4), (((1, 3), 3), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 18s
------------------------------
Epoch 28/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 8), (((9, 0), 0), 6), (((0, 3), 0), 5), (((0, 7), 0), 5), (((0, 2), 0), 5), (((1, 4), 4), 5), (((5, 0), 0), 5), (((0, 5), 0), 5), (((7, 0), 0), 4), (((0, 6), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 18s
------------------------------
Epoch 29/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((3, 0), 0), 5), (((0, 5), 0), 5), (((7, 0), 0), 5), (((0, 7), 0), 4), (((1, 4), 4), 4), (((0, 6), 0), 4), (((0, 8), 0), 4), (((0, 1), 0), 4), (((1, 8), 8), 4), (((1, 2), 2), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 30s
------------------------------
Epoch 30/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 9), (((7, 0), 0), 5), (((0, 3), 0), 5), (((5, 0), 0), 5), (((0, 7), 0), 5), (((3, 0), 0), 5), (((0, 9), 0), 5), (((0, 1), 0), 4), (((0, 5), 0), 4), (((1, 4), 4), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 18s
------------------------------
Epoch 31/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 7), (((0, 7), 0), 6), (((0, 3), 0), 6), (((9, 0), 0), 6), (((0, 8), 0), 5), (((1, 8), 8), 5), (((3, 0), 0), 4), (((1, 2), 2), 4), (((0, 2), 0), 4), (((1, 4), 4), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 19s
------------------------------
Epoch 32/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((1, 2), 2), 5), (((8, 0), 0), 5), (((1, 8), 8), 5), (((4, 0), 0), 5), (((0, 5), 0), 5), (((0, 7), 0), 4), (((7, 0), 0), 4), (((1, 4), 4), 4), (((1, 3), 3), 4), (((0, 8), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 18s
------------------------------
Epoch 33/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 8), 0), 7), (((5, 0), 0), 6), (((3, 0), 0), 6), (((0, 2), 0), 5), (((7, 0), 0), 5), (((0, 1), 0), 5), (((1, 5), 5), 4), (((9, 0), 0), 4), (((1, 8), 8), 4), (((0, 9), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 18s
------------------------------
Epoch 34/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 7), 0), 7), (((0, 2), 0), 6), (((8, 0), 0), 6), (((5, 0), 0), 5), (((0, 3), 0), 5), (((0, 8), 0), 5), (((0, 6), 0), 4), (((1, 8), 8), 4), (((4, 0), 0), 4), (((1, 2), 2), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 30s
------------------------------
Epoch 35/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 7), 0), 7), (((8, 0), 0), 6), (((9, 0), 0), 6), (((0, 1), 0), 5), (((5, 0), 0), 5), (((0, 2), 0), 5), (((1, 4), 4), 4), (((7, 0), 0), 4), (((4, 0), 0), 4), (((0, 9), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 18s
------------------------------
Epoch 36/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 7), (((0, 7), 0), 7), (((0, 3), 0), 6), (((5, 0), 0), 6), (((1, 4), 4), 5), (((3, 0), 0), 5), (((1, 2), 2), 4), (((0, 2), 0), 4), (((1, 9), 9), 4), (((1, 5), 5), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 18s
------------------------------
Epoch 37/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((9, 0), 0), 6), (((0, 2), 0), 6), (((1, 4), 4), 6), (((0, 9), 0), 5), (((0, 1), 0), 5), (((1, 2), 2), 5), (((8, 0), 0), 5), (((1, 5), 5), 5), (((1, 3), 3), 4), (((0, 5), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 18s
------------------------------
Epoch 38/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 6), (((4, 0), 0), 5), (((0, 7), 0), 5), (((0, 3), 0), 5), (((7, 0), 0), 5), (((8, 0), 0), 5), (((9, 0), 0), 5), (((1, 8), 8), 4), (((1, 5), 5), 4), (((1, 2), 2), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 23s
------------------------------
Epoch 39/99 (max_len=7, data=3387)
Train acc: 93.03 (abduce 100.00)
Hit samples:  3387  Ave length:  3.56
Symbols:  16 [(0, 614), (1, 748), (2, 720), (3, 748), (4, 744), (5, 718), (6, 719), (7, 756), (8, 726), (9, 715), (10, 1005), (11, 1004), (12, 933), (13, 879), (14, 522), (15, 522)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, 5, 3, -1, 5), 88), ((1, 5, 3, 1, 3, -1, 5), 20), ((1, -1, 3, 5, 3, 1, 5), 17)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((9, 0), 0), 6), (((0, 1), 0), 5), (((0, 7), 0), 5), (((4, 0), 0), 5), (((1, 5), 5), 5), (((0, 8), 0), 5), (((1, 2), 2), 4), (((1, 3), 3), 4), (((7, 0), 0), 4), (((0, 2), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.97
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.98
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.82
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.99
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 35s
------------------------------
Epoch 40/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 8), (((5, 0), 0), 6), (((6, 0), 0), 6), (((4, 0), 0), 5), (((1, 4), 4), 4), (((1, 7), 7), 4), (((1, 2), 2), 4), (((7, 0), 0), 4), (((1, 6), 6), 3), (((0, 1), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 24s
------------------------------
Epoch 41/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((6, 0), 0), 8), (((5, 0), 0), 5), (((4, 0), 0), 5), (((7, 0), 0), 4), (((1, 4), 4), 4), (((2, 0), 0), 4), (((1, 8), 8), 4), (((1, 3), 3), 3), (((1, 9), 9), 3), (((9, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 23s
------------------------------
Epoch 42/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 3), 0), 6), (((6, 0), 0), 5), (((1, 4), 4), 5), (((0, 1), 0), 4), (((1, 2), 2), 4), (((0, 6), 0), 4), (((0, 7), 0), 4), (((3, 0), 0), 4), (((9, 0), 0), 3), (((0, 4), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 23s
------------------------------
Epoch 43/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 6), (((0, 2), 0), 5), (((0, 3), 0), 5), (((6, 0), 0), 5), (((4, 0), 0), 4), (((3, 0), 0), 4), (((0, 6), 0), 4), (((1, 8), 8), 4), (((2, 0), 0), 4), (((8, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 21s
------------------------------
Epoch 44/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((3, 0), 0), 6), (((0, 5), 0), 6), (((0, 1), 0), 5), (((0, 9), 0), 4), (((5, 0), 0), 4), (((7, 0), 0), 4), (((2, 0), 0), 4), (((0, 8), 0), 4), (((4, 0), 0), 4), (((0, 7), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 32s
------------------------------
Epoch 45/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 6), (((0, 5), 0), 5), (((1, 2), 2), 4), (((9, 0), 0), 4), (((0, 1), 0), 4), (((8, 0), 0), 4), (((6, 0), 0), 4), (((4, 0), 0), 4), (((0, 3), 0), 3), (((0, 8), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 20s
------------------------------
Epoch 46/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 7), (((0, 3), 0), 6), (((0, 1), 0), 6), (((1, 4), 4), 6), (((6, 0), 0), 6), (((7, 0), 0), 5), (((0, 7), 0), 4), (((1, 7), 7), 3), (((1, 2), 2), 3), (((0, 8), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 20s
------------------------------
Epoch 47/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 5), (((3, 0), 0), 5), (((9, 0), 0), 4), (((0, 6), 0), 4), (((8, 0), 0), 4), (((1, 4), 4), 4), (((0, 7), 0), 4), (((0, 5), 0), 4), (((2, 0), 0), 3), (((1, 5), 5), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 20s
------------------------------
Epoch 48/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 7), (((0, 5), 0), 6), (((0, 1), 0), 5), (((1, 3), 3), 4), (((1, 4), 4), 4), (((7, 0), 0), 4), (((4, 0), 0), 4), (((0, 6), 0), 4), (((0, 2), 0), 3), (((6, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 49/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 6), (((0, 9), 0), 5), (((0, 7), 0), 4), (((0, 3), 0), 4), (((1, 2), 2), 4), (((1, 4), 4), 4), (((8, 0), 0), 4), (((1, 3), 3), 4), (((2, 0), 0), 4), (((1, 9), 9), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 35s
------------------------------
Epoch 50/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 0), 0), 6), (((8, 0), 0), 6), (((0, 3), 0), 5), (((0, 6), 0), 5), (((5, 0), 0), 4), (((3, 0), 0), 4), (((1, 9), 9), 3), (((0, 1), 0), 3), (((7, 0), 0), 3), (((1, 3), 3), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 20s
------------------------------
Epoch 51/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 7), 0), 6), (((0, 1), 0), 6), (((9, 0), 0), 5), (((4, 0), 0), 5), (((7, 0), 0), 4), (((1, 2), 2), 4), (((8, 0), 0), 4), (((0, 2), 0), 3), (((1, 3), 3), 3), (((0, 6), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 20s
------------------------------
Epoch 52/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((4, 0), 0), 5), (((7, 0), 0), 5), (((0, 3), 0), 4), (((6, 0), 0), 4), (((1, 4), 4), 4), (((0, 1), 0), 4), (((1, 2), 2), 4), (((1, 7), 7), 3), (((0, 9), 0), 3), (((3, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 21s
------------------------------
Epoch 53/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((7, 0), 0), 6), (((0, 1), 0), 5), (((8, 0), 0), 5), (((4, 0), 0), 5), (((0, 8), 0), 4), (((9, 0), 0), 4), (((1, 4), 4), 4), (((2, 0), 0), 4), (((0, 3), 0), 4), (((1, 3), 3), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 21s
------------------------------
Epoch 54/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((1, 4), 4), 6), (((6, 0), 0), 6), (((5, 0), 0), 5), (((2, 0), 0), 5), (((0, 9), 0), 5), (((1, 9), 9), 4), (((0, 4), 0), 4), (((0, 5), 0), 4), (((0, 8), 0), 3), (((0, 2), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 33s
------------------------------
Epoch 55/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((4, 0), 0), 6), (((5, 0), 0), 5), (((0, 8), 0), 5), (((6, 0), 0), 4), (((2, 0), 0), 4), (((1, 2), 2), 4), (((0, 2), 0), 4), (((0, 3), 0), 4), (((0, 9), 0), 3), (((1, 4), 4), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 23s
------------------------------
Epoch 56/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 6), (((4, 0), 0), 6), (((0, 5), 0), 6), (((9, 0), 0), 6), (((7, 0), 0), 5), (((1, 4), 4), 4), (((5, 0), 0), 4), (((0, 1), 0), 4), (((0, 4), 0), 3), (((0, 6), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 57/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 9), (((8, 0), 0), 7), (((9, 0), 0), 5), (((0, 1), 0), 4), (((0, 7), 0), 4), (((4, 0), 0), 3), (((0, 3), 0), 3), (((6, 0), 0), 3), (((2, 0), 0), 3), (((0, 6), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 20s
------------------------------
Epoch 58/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((6, 0), 0), 6), (((1, 4), 4), 5), (((5, 0), 0), 5), (((4, 0), 0), 5), (((1, 8), 8), 5), (((0, 2), 0), 4), (((9, 0), 0), 4), (((0, 1), 0), 4), (((8, 0), 0), 4), (((0, 5), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 20s
------------------------------
Epoch 59/99 (max_len=11, data=4683)
Train acc: 88.91 (abduce 100.00)
Hit samples:  4683  Ave length:  5.34
Symbols:  16 [(0, 1111), (1, 1331), (2, 1334), (3, 1361), (4, 1308), (5, 1284), (6, 1285), (7, 1369), (8, 1267), (9, 1275), (10, 2227), (11, 2155), (12, 1916), (13, 1944), (14, 1915), (15, 1915)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((6, 0), 0), 9), (((0, 3), 0), 7), (((0, 7), 0), 7), (((2, 0), 0), 5), (((0, 1), 0), 5), (((1, 4), 4), 5), (((5, 0), 0), 4), (((4, 0), 0), 4), (((0, 5), 0), 3), (((8, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.85
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 33s
------------------------------
Epoch 60/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 7), (((6, 0), 0), 5), (((0, 1), 0), 5), (((9, 0), 0), 4), (((0, 2), 0), 4), (((1, 2), 2), 3), (((8, 0), 0), 3), (((0, 8), 0), 3), (((4, 0), 0), 3), (((2, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 61/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 6), (((0, 1), 0), 6), (((0, 5), 0), 5), (((9, 0), 0), 5), (((0, 7), 0), 4), (((0, 6), 0), 4), (((0, 2), 0), 4), (((0, 3), 0), 4), (((1, 5), 5), 3), (((1, 4), 4), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 25s
------------------------------
Epoch 62/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((9, 0), 0), 7), (((0, 1), 0), 6), (((3, 0), 0), 6), (((0, 9), 0), 5), (((4, 0), 0), 5), (((2, 0), 0), 4), (((0, 3), 0), 4), (((6, 0), 0), 3), (((1, 4), 4), 3), (((0, 7), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 25s
------------------------------
Epoch 63/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((1, 2), 2), 7), (((5, 0), 0), 4), (((6, 0), 0), 4), (((3, 0), 0), 4), (((0, 3), 0), 4), (((0, 1), 0), 3), (((0, 8), 0), 3), (((4, 0), 0), 3), (((0, 4), 0), 3), (((8, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 26s
------------------------------
Epoch 64/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((6, 0), 0), 6), (((0, 9), 0), 5), (((0, 6), 0), 5), (((2, 0), 0), 3), (((0, 1), 0), 3), (((0, 7), 0), 3), (((0, 8), 0), 3), (((1, 4), 4), 3), (((0, 3), 0), 3), (((1, 9), 9), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 37s
------------------------------
Epoch 65/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((6, 0), 0), 6), (((9, 0), 0), 4), (((0, 7), 0), 4), (((0, 6), 0), 3), (((0, 2), 0), 3), (((0, 3), 0), 3), (((0, 4), 0), 3), (((1, 6), 6), 3), (((1, 4), 4), 2), (((1, 5), 5), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 27s
------------------------------
Epoch 66/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 6), (((0, 5), 0), 6), (((1, 4), 4), 5), (((2, 0), 0), 5), (((4, 0), 0), 5), (((0, 1), 0), 4), (((0, 2), 0), 3), (((1, 5), 5), 3), (((9, 0), 0), 3), (((1, 14), 14), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 29s
------------------------------
Epoch 67/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 8), (((6, 0), 0), 6), (((4, 0), 0), 5), (((1, 4), 4), 5), (((0, 9), 0), 5), (((5, 0), 0), 4), (((0, 5), 0), 3), (((0, 7), 0), 3), (((0, 2), 0), 3), (((1, 8), 8), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 68/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 5), (((1, 2), 2), 4), (((5, 0), 0), 4), (((0, 5), 0), 4), (((0, 9), 0), 3), (((1, 4), 4), 3), (((1, 9), 9), 3), (((0, 1), 0), 3), (((2, 0), 0), 3), (((6, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 69/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((5, 0), 0), 6), (((0, 1), 0), 6), (((8, 0), 0), 5), (((0, 9), 0), 5), (((2, 0), 0), 4), (((1, 2), 2), 3), (((3, 0), 0), 3), (((1, 5), 5), 3), (((0, 7), 0), 3), (((1, 9), 9), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 33s
------------------------------
Epoch 70/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((1, 2), 2), 6), (((0, 1), 0), 6), (((2, 0), 0), 5), (((8, 0), 0), 5), (((5, 0), 0), 5), (((0, 5), 0), 3), (((0, 2), 0), 3), (((1, 4), 4), 3), (((0, 3), 0), 3), (((9, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 71/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 6), (((1, 4), 4), 5), (((2, 0), 0), 5), (((0, 8), 0), 4), (((1, 6), 6), 4), (((0, 7), 0), 4), (((7, 0), 0), 4), (((1, 3), 3), 4), (((0, 9), 0), 3), (((8, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 72/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((4, 0), 0), 4), (((0, 1), 0), 4), (((1, 2), 2), 4), (((0, 9), 0), 3), (((0, 3), 0), 3), (((0, 6), 0), 3), (((3, 0), 0), 3), (((0, 7), 0), 3), (((6, 0), 0), 3), (((0, 2), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 73/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((6, 0), 0), 6), (((5, 0), 0), 5), (((0, 9), 0), 5), (((0, 7), 0), 5), (((9, 0), 0), 4), (((0, 8), 0), 4), (((8, 0), 0), 4), (((1, 2), 2), 4), (((1, 3), 3), 4), (((0, 3), 0), 4)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 74/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 5), (((0, 6), 0), 5), (((3, 0), 0), 4), (((9, 0), 0), 4), (((0, 7), 0), 4), (((0, 1), 0), 3), (((1, 9), 9), 3), (((6, 0), 0), 3), (((0, 2), 0), 3), (((2, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 33s
------------------------------
Epoch 75/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 6), (((0, 7), 0), 5), (((1, 2), 2), 5), (((0, 4), 0), 4), (((0, 9), 0), 4), (((8, 0), 0), 4), (((1, 4), 4), 4), (((1, 9), 9), 4), (((0, 8), 0), 3), (((0, 2), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 76/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((9, 0), 0), 6), (((0, 7), 0), 5), (((6, 0), 0), 4), (((8, 0), 0), 4), (((1, 8), 8), 4), (((3, 0), 0), 4), (((1, 4), 4), 3), (((1, 14), 14), 3), (((0, 3), 0), 3), (((1, 2), 2), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 77/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 0), 0), 5), (((0, 9), 0), 5), (((0, 2), 0), 4), (((8, 0), 0), 4), (((4, 0), 0), 4), (((3, 0), 0), 3), (((0, 8), 0), 3), (((0, 1), 0), 3), (((1, 2), 2), 3), (((1, 7), 7), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 23s
------------------------------
Epoch 78/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 7), (((0, 2), 0), 5), (((6, 0), 0), 5), (((0, 6), 0), 4), (((0, 1), 0), 4), (((0, 3), 0), 3), (((0, 8), 0), 3), (((0, 5), 0), 3), (((0, 7), 0), 3), (((1, 3), 3), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 22s
------------------------------
Epoch 79/99 (max_len=15, data=6058)
Train acc: 85.10 (abduce 99.97)
Hit samples:  6056  Ave length:  7.31
Symbols:  16 [(0, 1749), (1, 2141), (2, 2182), (3, 2218), (4, 2095), (5, 2083), (6, 2070), (7, 2177), (8, 2035), (9, 2058), (10, 3955), (11, 3868), (12, 3423), (13, 3506), (14, 4342), (15, 4342)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 6), (((1, 2), 2), 6), (((6, 0), 0), 6), (((9, 0), 0), 5), (((0, 8), 0), 4), (((1, 7), 7), 3), (((5, 0), 0), 3), (((2, 0), 0), 3), (((0, 4), 0), 3), (((0, 1), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.86
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 34s
------------------------------
Epoch 80/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 0), 0), 4), (((9, 0), 0), 3), (((6, 0), 0), 3), (((3, 0), 0), 3), (((13, 0), 0), 3), (((0, 6), 0), 3), (((0, 9), 0), 2), (((0, 4), 0), 2), (((1, 2), 2), 2), (((1, 6), 6), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 41s
------------------------------
Epoch 81/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 6), 0), 5), (((0, 7), 0), 4), (((6, 0), 0), 4), (((1, 5), 5), 4), (((9, 0), 0), 3), (((4, 0), 0), 3), (((0, 9), 0), 2), (((0, 3), 0), 2), (((1, 4), 4), 2), (((7, 2), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 40s
------------------------------
Epoch 82/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 8), (((9, 0), 0), 5), (((0, 9), 0), 4), (((4, 0), 0), 4), (((6, 0), 0), 3), (((2, 0), 0), 2), (((1, 3), 3), 2), (((8, 0), 0), 2), (((0, 2), 0), 2), (((0, 7), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 51s
------------------------------
Epoch 83/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((6, 0), 0), 5), (((9, 0), 0), 4), (((0, 6), 0), 4), (((8, 0), 0), 3), (((0, 1), 0), 3), (((2, 0), 0), 3), (((1, 2), 2), 3), (((0, 3), 0), 3), (((4, 0), 0), 2), (((1, 9), 9), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 46s
------------------------------
Epoch 84/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 6), 0), 6), (((1, 2), 2), 4), (((0, 1), 0), 4), (((0, 3), 0), 4), (((8, 0), 0), 4), (((3, 0), 0), 4), (((1, 5), 5), 3), (((1, 9), 9), 3), (((0, 12), 0), 3), (((9, 0), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 51s
------------------------------
Epoch 85/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((6, 0), 0), 6), (((7, 0), 0), 5), (((9, 0), 0), 5), (((0, 7), 0), 4), (((0, 8), 0), 3), (((0, 1), 0), 3), (((1, 6), 6), 2), (((0, 6), 0), 2), (((0, 4), 0), 2), (((0, 2), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 38s
------------------------------
Epoch 86/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 2), 0), 6), (((0, 1), 0), 4), (((2, 0), 0), 3), (((6, 0), 0), 3), (((5, 0), 0), 3), (((0, 4), 0), 2), (((1, 7), 7), 2), (((13, 0), 0), 2), (((0, 5), 0), 2), (((1, 3), 3), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 36s
------------------------------
Epoch 87/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 7), 0), 5), (((1, 7), 7), 3), (((3, 0), 0), 3), (((0, 4), 0), 3), (((5, 0), 0), 2), (((4, 5), 12), 2), (((1, 8), 8), 2), (((0, 3), 0), 2), (((1, 7), 0), 2), (((0, 2), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 37s
------------------------------
Epoch 88/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 5), (((4, 0), 0), 4), (((2, 0), 0), 4), (((0, 6), 0), 4), (((5, 0), 0), 4), (((6, 0), 0), 3), (((0, 9), 0), 3), (((1, 3), 3), 2), (((0, 7), 0), 2), (((7, 0), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 37s
------------------------------
Epoch 89/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 5), (((0, 6), 0), 4), (((0, 9), 0), 4), (((1, 3), 3), 3), (((0, 8), 0), 3), (((6, 0), 0), 3), (((2, 0), 0), 3), (((1, 1), 0), 2), (((3, 0), 0), 2), (((1, 21), 21), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 48s
------------------------------
Epoch 90/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 7), 0), 6), (((0, 9), 0), 5), (((2, 0), 0), 4), (((8, 0), 0), 4), (((0, 6), 0), 4), (((0, 3), 0), 3), (((1, 12), 12), 2), (((1, 6), 6), 2), (((1, 3), 3), 2), (((1, 4), 4), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 37s
------------------------------
Epoch 91/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 6), (((2, 0), 0), 4), (((0, 7), 0), 4), (((6, 0), 0), 3), (((9, 0), 0), 3), (((3, 0), 0), 3), (((1, 6), 6), 3), (((0, 5), 0), 3), (((1, 3), 3), 2), (((1, 9), 9), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 35s
------------------------------
Epoch 92/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 6), 0), 4), (((8, 0), 0), 4), (((1, 8), 8), 4), (((0, 8), 0), 4), (((3, 0), 0), 3), (((5, 0), 0), 3), (((4, 0), 0), 3), (((1, 3), 3), 3), (((0, 3), 0), 3), (((7, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 36s
------------------------------
Epoch 93/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((1, 2), 2), 4), (((0, 1), 0), 4), (((0, 6), 0), 3), (((0, 7), 0), 3), (((5, 0), 0), 3), (((3, 0), 0), 3), (((8, 0), 0), 3), (((2, 7), 0), 2), (((1, 8), 0), 2), (((0, 4), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 34s
------------------------------
Epoch 94/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 1), 0), 6), (((0, 6), 0), 4), (((4, 0), 0), 4), (((0, 3), 0), 4), (((2, 0), 0), 3), (((8, 0), 0), 3), (((9, 0), 0), 2), (((13, 0), 0), 2), (((1, 3), 2), 2), (((4, 2), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 53s
------------------------------
Epoch 95/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 6), 0), 3), (((0, 8), 0), 3), (((0, 2), 0), 3), (((0, 1), 0), 3), (((0, 5), 0), 2), (((1, 21), 21), 2), (((1, 5), 5), 2), (((6, 0), 0), 2), (((8, 0), 0), 2), (((0, 4), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 42s
------------------------------
Epoch 96/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((0, 6), 0), 5), (((0, 5), 0), 4), (((2, 0), 0), 4), (((8, 0), 0), 3), (((0, 8), 0), 3), (((0, 4), 0), 3), (((1, 2), 2), 3), (((0, 7), 0), 3), (((0, 3), 0), 3), (((7, 0), 0), 3)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 38s
------------------------------
Epoch 97/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((1, 4), 4), 5), (((0, 1), 0), 3), (((0, 7), 0), 3), (((8, 0), 0), 3), (((0, 2), 0), 2), (((0, 5), 0), 2), (((1, 4), 0), 2), (((2, 0), 0), 2), (((18, 0), 0), 2), (((0, 8), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 39s
------------------------------
Epoch 98/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((8, 0), 0), 6), (((1, 2), 2), 4), (((0, 3), 0), 4), (((0, 1), 0), 3), (((5, 0), 0), 3), (((0, 2), 0), 3), (((6, 0), 0), 2), (((1, 6), 6), 2), (((36, 6), 0), 2), (((1, 3), 2), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
Epoch time: 5m 39s
------------------------------
Epoch 99/99 (max_len=inf, data=11170)
Train acc: 74.41 (abduce 99.84)
Hit samples:  11152  Ave length:  14.85
Symbols:  16 [(0, 5616), (1, 7038), (2, 6955), (3, 6905), (4, 6709), (5, 6706), (6, 6553), (7, 6640), (8, 6580), (9, 6477), (10, 14883), (11, 14404), (12, 12816), (13, 12924), (14, 22212), (15, 22212)]
Head:  [((-1,), 1000), ((1, -1, 1), 1170), ((1, 3, 1, -1, 3), 365), ((1, -1, 3, 1, 3), 113), ((1, -1, 4, 4, 1, 4, 4), 380), ((2, 2, 5, 2, 2, -1, 5), 142), ((1, 3, 1, -1, 5, 3, 5), 92), ((1, 3, 1, -1, 6, 6, 3, 6, 6), 146), ((1, -1, 6, 4, 6, 4, 1, 6, 6), 114), ((1, 7, 4, 4, 1, 4, 4, -1, 7), 105)]
Semantics: 16/13/1 (total/solved/learn).
Symbol-12 (int -> int -> int), Samples: 100,  [(((2, 0), 0), 6), (((7, 0), 0), 4), (((1, 4), 4), 4), (((0, 1), 0), 4), (((4, 0), 0), 3), (((5, 0), 0), 3), (((0, 3), 0), 3), (((9, 0), 0), 3), (((1, 2), 2), 2), (((0, 2), 0), 2)]
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0)))))))))
Rescoring 1 frontiers...
Symbol-00: 0 0 1.00
Symbol-01: 1 (incr 0) 1.00
Symbol-02: 2 (incr (incr 0)) 1.00
Symbol-03: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-05: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-06: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-07: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-08: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-10: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.95
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) 0.97
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 (decr0 (if0 (decr0 $0) $1 (incr ($2 $0 (decr0 $1)))))))))))) 0.89
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (incr ($2 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (decr0 $1) (decr0 $0))))))))) $1 $0) $0))))))))) 0.98
Symbol-14: None 1.00
Symbol-15: None 1.00
              precision    recall  f1-score   support

           0       1.00      1.00      1.00      4016
           1       1.00      1.00      1.00      5142
           2       1.00      1.00      1.00      5321
           3       1.00      1.00      1.00      5241
           4       1.00      1.00      1.00      5279
           5       1.00      1.00      1.00      5383
           6       1.00      1.00      1.00      5427
           7       1.00      1.00      1.00      5462
           8       1.00      1.00      1.00      5453
           9       1.00      1.00      1.00      5476
           +       1.00      1.00      1.00     13199
           -       1.00      1.00      1.00     10734
           *       1.00      1.00      1.00     13491
           /       1.00      1.00      1.00      9876
           (       1.00      1.00      1.00     21081
           )       1.00      1.00      1.00     21081

    accuracy                           1.00    141662
   macro avg       1.00      1.00      1.00    141662
weighted avg       1.00      1.00      1.00    141662

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  283    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  362    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  375    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  369    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  372    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  379    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  383    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  385    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  384    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  386    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  757    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  952    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  697     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.00
5 ( 2%) 90.70
7 ( 4%) 89.08
9 ( 4%) 81.91
11 ( 3%) 78.41
13 ( 4%) 71.30
15 ( 4%) 76.73
17 ( 4%) 70.87
19 ( 4%) 71.57
21 ( 4%) 63.64
23 ( 4%) 59.51
25 ( 4%) 55.50
27 ( 4%) 56.16
29 ( 3%) 60.73
31 ( 3%) 56.55
33 ( 2%) 52.14
35 ( 2%) 52.74
37 ( 2%) 47.01
39 ( 3%) 50.00
41 ( 3%) 45.64
43 ( 2%) 46.38
45 ( 2%) 47.32
47 ( 2%) 44.70
49 ( 2%) 46.48
51 ( 2%) 50.00
53 ( 2%) 49.25
55 ( 2%) 45.38
57 ( 2%) 42.66
59 ( 2%) 50.47
61 ( 1%) 45.31
63 ( 0%) 20.00
65 ( 0%) 22.22
67 ( 0%) 33.33
result accuracy by symbol:
( (91%) 59.10
) (91%) 59.10
* (87%) 56.54
+ (84%) 59.12
- (77%) 56.72
/ (76%) 58.16
0 (52%) 50.70
1 (60%) 55.29
2 (61%) 57.14
3 (62%) 57.18
4 (61%) 57.18
5 (62%) 57.91
6 (62%) 56.58
7 (63%) 57.02
8 (64%) 57.80
9 (63%) 57.66
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 51.81
1 (10%) 78.84
2 ( 4%) 64.14
3 ( 2%) 72.59
4 ( 2%) 57.89
5 ( 2%) 57.00
6 ( 2%) 70.43
7 ( 2%) 66.37
8 ( 2%) 66.67
9 ( 1%) 79.07
result accuracy by generalization:
1 (22.45%) 73.55
2 (22.96%) 63.29
3 (22.53%) 71.01
4 (15.82%) 49.55
5 (16.24%) 42.96
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
0*1 0*1 [1, -1, 1] [1, -1, 1] 0 1
7*0 7*0 [1, -1, 1] [1, -1, 1] 0 6
0*5 0*5 [1, -1, 1] [1, -1, 1] 0 9
8*(0/4) 8*(0/4) [1, -1, 4, 4, 1, 4, 4] [1, -1, 4, 4, 1, 4, 4] 0 7
1*8+5 1*8+5 [1, 3, 1, -1, 3] [1, 3, 1, -1, 3] 13 20
7-5*0 7-5*0 [1, -1, 3, 1, 3] [1, -1, 3, 1, 3] 7 3
val (Perception Acc=100.00, Head Acc=100.00, Result Acc=61.86)
Epoch time: 5m 46s
------------------------------
Evaluate on test set...
              precision    recall  f1-score   support

           0       1.00      1.00      1.00     39465
           1       1.00      1.00      1.00     51797
           2       1.00      1.00      1.00     52546
           3       1.00      1.00      1.00     52953
           4       1.00      1.00      1.00     53234
           5       1.00      1.00      1.00     53430
           6       1.00      1.00      1.00     53860
           7       1.00      1.00      1.00     54695
           8       1.00      1.00      1.00     54671
           9       1.00      1.00      1.00     54909
           +       1.00      1.00      1.00    131914
           -       1.00      1.00      1.00    108556
           *       1.00      1.00      1.00    132837
           /       1.00      1.00      1.00     99343
           (       1.00      1.00      1.00    210691
           )       1.00      1.00      1.00    210691

    accuracy                           1.00   1415592
   macro avg       1.00      1.00      1.00   1415592
weighted avg       1.00      1.00      1.00   1415592

     0    1    2    3    4    5    6    7    8    9    +    -    *    /     (     )
0  278    0    0    0    0    0    0    0    0    0    0    0    0    0     0     0
1    0  365    0    0    0    0    0    0    0    0    0    0    0    0     0     0
2    0    0  371    0    0    0    0    0    0    0    0    0    0    0     0     0
3    0    0    0  374    0    0    0    0    0    0    0    0    0    0     0     0
4    0    0    0    0  376    0    0    0    0    0    0    0    0    0     0     0
5    0    0    0    0    0  377    0    0    0    0    0    0    0    0     0     0
6    0    0    0    0    0    0  380    0    0    0    0    0    0    0     0     0
7    0    0    0    0    0    0    0  386    0    0    0    0    0    0     0     0
8    0    0    0    0    0    0    0    0  386    0    0    0    0    0     0     0
9    0    0    0    0    0    0    0    0    0  387    0    0    0    0     0     0
+    0    0    0    0    0    0    0    0    0    0  931    0    0    0     0     0
-    0    0    0    0    0    0    0    0    0    0    0  766    0    0     0     0
*    0    0    0    0    0    0    0    0    0    0    0    0  938    0     0     0
/    0    0    0    0    0    0    0    0    0    0    0    0    0  701     0     0
(    0    0    0    0    0    0    0    0    0    0    0    0    0    0  1488     0
)    0    0    0    0    0    0    0    0    0    0    0    0    0    0     0  1488
result accuracy by length:
1 ( 2%) 100.00
3 ( 2%) 93.59
5 ( 2%) 90.93
7 ( 4%) 89.48
9 ( 4%) 83.83
11 ( 4%) 81.09
13 ( 4%) 76.41
15 ( 4%) 73.30
17 ( 4%) 69.75
19 ( 4%) 69.35
21 ( 4%) 65.11
23 ( 4%) 62.10
25 ( 4%) 61.30
27 ( 4%) 58.84
29 ( 3%) 59.35
31 ( 3%) 58.93
33 ( 2%) 53.24
35 ( 2%) 52.29
37 ( 2%) 50.69
39 ( 2%) 50.83
41 ( 2%) 47.34
43 ( 2%) 47.22
45 ( 2%) 47.89
47 ( 2%) 46.71
49 ( 2%) 48.03
51 ( 2%) 44.26
53 ( 2%) 43.03
55 ( 2%) 41.28
57 ( 2%) 42.34
59 ( 2%) 43.15
61 ( 1%) 39.77
63 ( 0%) 38.57
65 ( 0%) 38.02
67 ( 0%) 48.28
69 ( 0%)  9.09
71 ( 0%)  0.00
result accuracy by symbol:
( (91%) 59.42
) (91%) 59.42
* (87%) 56.75
+ (84%) 59.43
- (78%) 57.86
/ (77%) 58.96
0 (51%) 51.16
1 (60%) 55.46
2 (61%) 57.56
3 (62%) 57.24
4 (62%) 57.24
5 (62%) 57.55
6 (62%) 57.59
7 (63%) 57.49
8 (63%) 57.69
9 (63%) 57.52
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 100.00
4 ( 0%) 100.00
5 ( 0%) 100.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
result accuracy by result:
0 (21%) 52.68
1 (11%) 81.02
2 ( 3%) 68.20
3 ( 3%) 67.58
4 ( 2%) 64.92
5 ( 2%) 65.10
6 ( 2%) 67.44
7 ( 2%) 65.71
8 ( 2%) 66.38
9 ( 2%) 63.71
result accuracy by generalization:
1 (22.84%) 74.57
2 (23.00%) 65.54
3 (22.36%) 70.92
4 (15.84%) 47.04
5 (15.95%) 43.41
error cases:
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
9*0 9*0 [1, -1, 1] [1, -1, 1] 0 8
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*4 1*4 [1, -1, 1] [1, -1, 1] 4 7
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
1*2 1*2 [1, -1, 1] [1, -1, 1] 2 3
0*3 0*3 [1, -1, 1] [1, -1, 1] 0 5
test (Perception Acc=100.00, Head Acc=100.00, Result Acc=62.34)
